<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>笔记</title>
  
  <subtitle>以每一个问题为目标，每解决一个问题给自己及时反馈</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.wjc66.cn/"/>
  <updated>2024-03-28T12:41:44.648Z</updated>
  <id>https://blog.wjc66.cn/</id>
  
  <author>
    <name>w-klover</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>amazon中kms的使用</title>
    <link href="https://blog.wjc66.cn/amazon%E4%B8%ADkms%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/amazon%E4%B8%ADkms%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2024-03-28T12:39:59.000Z</published>
    <updated>2024-03-28T12:41:44.648Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>software.amazon.awssdk<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.16.60<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String encryptedMessage = Kms.encrypt(<span class="string">"test message"</span>);</span><br><span class="line">System.out.println(encryptedMessage);</span><br><span class="line">String decrypt = Kms.decrypt(encryptedMessage);</span><br><span class="line">System.out.println(decrypt);</span><br></pre></td></tr></table></figure><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.klover.kms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.auth.credentials.AwsBasicCredentials;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.core.SdkBytes;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.regions.Region;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.services.kms.KmsClient;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.services.kms.model.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Kms</span></span><br><span class="line"><span class="comment"> * &lt;a href="https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/javav2/example_code/kms/src/main/java/com/example/kms/EncryptDataKey.java"&gt;docs&lt;/a&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> klover</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024/3/28 19:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Kms</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> KmsClient kmsClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String accessKeyId = <span class="string">"&lt;your access key id&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String secretAccessKey = <span class="string">"&lt;your secret access key&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String keyId = <span class="string">"&lt;your key id&gt;"</span>; <span class="comment">// 密钥keyId</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        AwsBasicCredentials credentials = AwsBasicCredentials.create(</span><br><span class="line">                accessKeyId,</span><br><span class="line">                secretAccessKey</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        kmsClient = KmsClient.builder()</span><br><span class="line">                .region(Region.US_WEST_1)</span><br><span class="line">                .credentialsProvider(() -&gt; credentials)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> base64 加密好的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            EncryptRequest encryptRequest = EncryptRequest.builder()</span><br><span class="line">                    .keyId(keyId)</span><br><span class="line">                    .plaintext(SdkBytes.fromByteArray(message.getBytes()))</span><br><span class="line">                    .encryptionAlgorithm(EncryptionAlgorithmSpec.RSAES_OAEP_SHA_256)</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line">            EncryptResponse response = kmsClient.encrypt(encryptRequest);</span><br><span class="line">            String algorithm = response.encryptionAlgorithm().toString();</span><br><span class="line">            System.out.println(<span class="string">"The encryption algorithm is "</span> + algorithm);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Get the encrypted data.</span></span><br><span class="line">            SdkBytes ciphertext = response.ciphertextBlob();</span><br><span class="line">            <span class="keyword">return</span> Base64.getEncoder().encodeToString(ciphertext.asByteArray());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KmsException e) &#123;</span><br><span class="line">            System.err.println(e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(String encryptedMessage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 先base64解密</span></span><br><span class="line">            <span class="keyword">byte</span>[] decode = Base64.getDecoder().decode(encryptedMessage);</span><br><span class="line"></span><br><span class="line">            DecryptRequest decryptRequest = DecryptRequest.builder()</span><br><span class="line">                    .ciphertextBlob(SdkBytes.fromByteArray(decode))</span><br><span class="line">                    .keyId(keyId)</span><br><span class="line">                    .encryptionAlgorithm(EncryptionAlgorithmSpec.RSAES_OAEP_SHA_256)</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line">            DecryptResponse decryptResponse = kmsClient.decrypt(decryptRequest);</span><br><span class="line">            SdkBytes plaintext = decryptResponse.plaintext();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> plaintext.asUtf8String();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (KmsException e) &#123;</span><br><span class="line">            System.err.println(e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装包&quot;&gt;&lt;a href=&quot;#安装包&quot; class=&quot;headerlink&quot; title=&quot;安装包&quot;&gt;&lt;/a&gt;安装包&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
      <category term="amazon" scheme="https://blog.wjc66.cn/tags/amazon/"/>
    
      <category term="kms" scheme="https://blog.wjc66.cn/tags/kms/"/>
    
  </entry>
  
  <entry>
    <title>上传文件到amazon中的S3</title>
    <link href="https://blog.wjc66.cn/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0amazon%E4%B8%AD%E7%9A%84S3/"/>
    <id>https://blog.wjc66.cn/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0amazon%E4%B8%AD%E7%9A%84S3/</id>
    <published>2024-03-28T04:14:25.000Z</published>
    <updated>2024-03-28T04:19:52.647Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>software.amazon.awssdk<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>s3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.16.60<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String fileUrl = S3.putFile(<span class="string">"4.png"</span>, <span class="keyword">new</span> File(<span class="string">"C:\\Users\\klover\\Desktop\\file\\4.png"</span>));</span><br></pre></td></tr></table></figure><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.klover.s3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.auth.credentials.AwsBasicCredentials;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.core.sync.RequestBody;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.regions.Region;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.services.s3.S3Client;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.services.s3.model.GetObjectRequest;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.services.s3.model.PutObjectRequest;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.services.s3.presigner.S3Presigner;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.services.s3.presigner.model.GetObjectPresignRequest;</span><br><span class="line"><span class="keyword">import</span> software.amazon.awssdk.services.s3.presigner.model.PresignedGetObjectRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * S3</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> klover</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024/3/27 20:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">S3</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> S3Client s3;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String bucketName = <span class="string">"klover-test"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String accessKeyId = <span class="string">"&lt;your access key id&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String secretAccessKey = <span class="string">"&lt;your secret access key&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> S3Presigner preSigner;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        AwsBasicCredentials credentials = AwsBasicCredentials.create(</span><br><span class="line">                accessKeyId,</span><br><span class="line">                secretAccessKey</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        s3 = S3Client.builder()</span><br><span class="line">                .region(Region.of(<span class="string">"us-west-1"</span>))</span><br><span class="line">                .credentialsProvider(() -&gt; credentials)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        preSigner = S3Presigner.builder().region(Region.of(<span class="string">"us-west-1"</span>))</span><br><span class="line">                .credentialsProvider(() -&gt; credentials)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">putFile</span><span class="params">(String fileName, File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> putObject(fileName, RequestBody.fromFile(file));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">putFile</span><span class="params">(String fileName, InputStream stream)</span> </span>&#123;</span><br><span class="line">        RequestBody requestBody = RequestBody.fromContentProvider(() -&gt; stream, <span class="string">"application/octet-stream"</span>);</span><br><span class="line">        <span class="keyword">return</span> putObject(fileName, requestBody);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     * &lt;a href="https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/example_s3_Scenario_PresignedUrl_section.html"&gt;生成预签名文档&lt;/a&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body     参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">putObject</span><span class="params">(String fileName, RequestBody body)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; metadata = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        metadata.put(<span class="string">"author"</span>, <span class="string">"Klover"</span>);</span><br><span class="line">        metadata.put(<span class="string">"version"</span>, <span class="string">"1.0.0"</span>);</span><br><span class="line"></span><br><span class="line">        PutObjectRequest putOb = PutObjectRequest.builder()</span><br><span class="line">                .bucket(bucketName)</span><br><span class="line">                .key(fileName)</span><br><span class="line">                .metadata(metadata)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        s3.putObject(putOb, body);</span><br><span class="line"></span><br><span class="line">        GetObjectRequest objectRequest = GetObjectRequest.builder()</span><br><span class="line">                .bucket(bucketName)</span><br><span class="line">                .key(fileName)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        GetObjectPresignRequest preSignRequest = GetObjectPresignRequest.builder()</span><br><span class="line">                .signatureDuration(Duration.ofMinutes(<span class="number">10</span>))  <span class="comment">// The URL will expire in 10 minutes.</span></span><br><span class="line">                .getObjectRequest(objectRequest)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        PresignedGetObjectRequest preSignedRequest = preSigner.presignGetObject(preSignRequest);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> preSignedRequest.url().toExternalForm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下载文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InputStream <span class="title">getObject</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">        GetObjectRequest getObjectRequest = GetObjectRequest.builder().bucket(bucketName)</span><br><span class="line">                .key(fileName).build();</span><br><span class="line">        <span class="keyword">return</span> s3.getObject(getObjectRequest);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/klover2/java-demo/blob/master/aws-demo/s3-demo/src/test/java/com/klover/s3/S3Test.java" target="_blank" rel="external nofollow noopener noreferrer">代码示例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装包&quot;&gt;&lt;a href=&quot;#安装包&quot; class=&quot;headerlink&quot; title=&quot;安装包&quot;&gt;&lt;/a&gt;安装包&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
      <category term="amazon" scheme="https://blog.wjc66.cn/tags/amazon/"/>
    
      <category term="S3" scheme="https://blog.wjc66.cn/tags/S3/"/>
    
  </entry>
  
  <entry>
    <title>记一次springboot3中swagger服务启动失败</title>
    <link href="https://blog.wjc66.cn/%E8%AE%B0%E4%B8%80%E6%AC%A1springboot3%E4%B8%ADswagger%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5/"/>
    <id>https://blog.wjc66.cn/%E8%AE%B0%E4%B8%80%E6%AC%A1springboot3%E4%B8%ADswagger%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5/</id>
    <published>2024-03-21T02:34:59.000Z</published>
    <updated>2024-03-21T02:44:05.645Z</updated>
    
    <content type="html"><![CDATA[<p>项目开始进行升级，jDk 使用 21，springboot 使用 3 导致引入的 swagger jar 包无效，后来发现，springboot3 已经替换了支持的 jar 包。</p><p>把老 jar 包</p><p><code>&lt;dependency&gt;&lt;groupId&gt;org.springdoc&lt;/groupId&gt;&lt;artifactId&gt;springdoc-openapi-ui&lt;/artifactId&gt;&lt;version&gt;1.6.14&lt;/version&gt;&lt;/dependency&gt;</code></p><p>替换成</p><p><code>&lt;dependency&gt;&lt;groupId&gt;org.springdoc&lt;/groupId&gt; &lt;artifactId&gt;springdoc-openapi-starter-webmvc-ui&lt;/artifactId&gt;&lt;version&gt;2.3.0&lt;/version&gt;&lt;/dependency&gt;</code></p><h2 id="在-application-yml-配置"><a href="#在-application-yml-配置" class="headerlink" title="在 application.yml 配置"></a>在 application.yml 配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">springdoc:</span><br><span class="line">  swagger-ui:</span><br><span class="line">    enabled: <span class="keyword">true</span></span><br><span class="line">  api-docs:</span><br><span class="line">    groups:</span><br><span class="line">      enabled: <span class="keyword">true</span></span><br><span class="line">  group-configs:</span><br><span class="line">    - group: admin</span><br><span class="line">      display-name: 管理后台</span><br><span class="line">      paths-to-match: /admin<span class="comment">/**</span></span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://springdoc.org/#getting-started" target="_blank" rel="external nofollow noopener noreferrer">springdoc-openapi-starter-webmvc-ui</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目开始进行升级，jDk 使用 21，springboot 使用 3 导致引入的 swagger jar 包无效，后来发现，springboot3 已经替换了支持的 jar 包。&lt;/p&gt;
&lt;p&gt;把老 jar 包&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
      <category term="springboot" scheme="https://blog.wjc66.cn/tags/springboot/"/>
    
      <category term="swagger" scheme="https://blog.wjc66.cn/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>postgresql异步创建索引或者删除索引</title>
    <link href="https://blog.wjc66.cn/postgresql%E5%BC%82%E6%AD%A5%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E6%88%96%E8%80%85%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95/"/>
    <id>https://blog.wjc66.cn/postgresql%E5%BC%82%E6%AD%A5%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E6%88%96%E8%80%85%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95/</id>
    <published>2024-03-21T02:07:59.000Z</published>
    <updated>2024-03-21T02:11:00.337Z</updated>
    
    <content type="html"><![CDATA[<p>在 PostgreSQL 中，可以通过使用 CREATE INDEX 命令来异步创建索引。PostgreSQL 会将创建索引的任务放入后台进程进行处理，不会阻塞当前的数据库操作。</p><p>要创建一个异步索引，可以使用 CONCURRENTLY 关键字。这允许你在不锁定表的情况下创建索引，这在创建大型索引时特别有用，因为它可以减少对正常数据库操作的影响。</p><p>以下是一个创建异步索引的示例代码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> CONCURRENTLY index_name <span class="keyword">ON</span> table_name (column_name);</span><br></pre></td></tr></table></figure><ol><li><p>删除索引 DROP INDEX CONCURRENTLY “public”.”IDX_e29aa01138f7e5dbe59261e52c”;</p></li><li><p>创建索引</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span>  CONCURRENTLY <span class="string">"IDX_25db9e4a7d54a460f256c567b2"</span> <span class="keyword">ON</span> <span class="string">"public"</span>.<span class="string">"attachment"</span> <span class="keyword">USING</span> btree (</span><br><span class="line">  <span class="string">"mediaId"</span> <span class="keyword">COLLATE</span> <span class="string">"pg_catalog"</span>.<span class="string">"default"</span> <span class="string">"pg_catalog"</span>.<span class="string">"text_ops"</span> <span class="keyword">ASC</span> <span class="keyword">NULLS</span> <span class="keyword">LAST</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 PostgreSQL 中，可以通过使用 CREATE INDEX 命令来异步创建索引。PostgreSQL 会将创建索引的任务放入后台进程进行处理，不会阻塞当前的数据库操作。&lt;/p&gt;
&lt;p&gt;要创建一个异步索引，可以使用 CONCURRENTLY 关键字。这允许你在不锁定
      
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>java序列化进行参数脱敏</title>
    <link href="https://blog.wjc66.cn/java%E5%BA%8F%E5%88%97%E5%8C%96%E8%BF%9B%E8%A1%8C%E5%8F%82%E6%95%B0%E8%84%B1%E6%95%8F/"/>
    <id>https://blog.wjc66.cn/java%E5%BA%8F%E5%88%97%E5%8C%96%E8%BF%9B%E8%A1%8C%E5%8F%82%E6%95%B0%E8%84%B1%E6%95%8F/</id>
    <published>2024-03-20T09:20:30.000Z</published>
    <updated>2024-03-20T09:21:06.979Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JsonSerializer"><a href="#JsonSerializer" class="headerlink" title="JsonSerializer"></a>JsonSerializer</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CardNumberSerialize</span> <span class="keyword">extends</span> <span class="title">JsonSerializer</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(String s, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        jsonGenerator.writeString(Objects.equals(s, <span class="string">""</span>) ? s : s.replaceAll(<span class="string">"(\\d&#123;6&#125;)\\d&#123;6&#125;(\\d&#123;4&#125;)"</span>, <span class="string">"$1******$2"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setName(<span class="string">"张三"</span>);</span><br><span class="line">        student.setCardNumber(<span class="string">"1111111111111111"</span>);</span><br><span class="line">        student.setAddress(<span class="string">"beijing"</span>);</span><br><span class="line">        System.out.println(JsonUtil.toJSONString(student));</span><br><span class="line">        <span class="comment">// ======&gt; &#123;"name":"张三","cardNumber":"111111******1111","address":"***"&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@JsonSerialize</span>(using = CardNumberSerialize<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">        <span class="title">private</span> <span class="title">String</span> <span class="title">cardNumber</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@JsonSerialize</span>(using = CompleteDesensitizationSerialize<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">        <span class="title">private</span> <span class="title">String</span> <span class="title">address</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/klover2/java-demo/blob/master/serialize-demo/src/main/java/com/klover/serialize/Demo.java" target="_blank" rel="external nofollow noopener noreferrer">代码示例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JsonSerializer&quot;&gt;&lt;a href=&quot;#JsonSerializer&quot; class=&quot;headerlink&quot; title=&quot;JsonSerializer&quot;&gt;&lt;/a&gt;JsonSerializer&lt;/h3&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>上传日志到aws日志服务</title>
    <link href="https://blog.wjc66.cn/%E4%B8%8A%E4%BC%A0%E6%97%A5%E5%BF%97%E5%88%B0aws%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1/"/>
    <id>https://blog.wjc66.cn/%E4%B8%8A%E4%BC%A0%E6%97%A5%E5%BF%97%E5%88%B0aws%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1/</id>
    <published>2024-03-20T08:47:17.000Z</published>
    <updated>2024-03-28T04:15:10.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>software.amazon.awssdk<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloudwatchlogs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.16.60<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"key1"</span>, <span class="string">"val1"</span>);</span><br><span class="line">map.put(<span class="string">"key2"</span>, <span class="string">"val2"</span>);</span><br><span class="line">CloudWatchLog.putLog(map);</span><br></pre></td></tr></table></figure><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CloudWatchLog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String accessKey = <span class="string">"&lt;your key&gt;"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String secretKey = <span class="string">"&lt;your secret&gt;"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String region = <span class="string">"us-west-1"</span>;</span><br><span class="line">    <span class="comment">// 日志组的名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String groupName = <span class="string">"klover-test"</span>;</span><br><span class="line">    <span class="comment">// 日志流的名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String streamName = <span class="string">"klover"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CloudWatchLogsClient slsClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        AwsBasicCredentials credentials = AwsBasicCredentials.create(</span><br><span class="line">                accessKey,</span><br><span class="line">                secretKey</span><br><span class="line">        );</span><br><span class="line">        slsClient = CloudWatchLogsClient.builder()</span><br><span class="line">                .region(Region.of(region))</span><br><span class="line">                .credentialsProvider(() -&gt; credentials)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传日志</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">putLog</span><span class="params">(Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        DescribeLogStreamsRequest logStreamRequest = DescribeLogStreamsRequest.builder()</span><br><span class="line">                .logGroupName(groupName)</span><br><span class="line">                .logStreamNamePrefix(streamName)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        DescribeLogStreamsResponse describeLogStreamsResponse = slsClient.describeLogStreams(logStreamRequest);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Assume that a single stream is returned since a specific stream name was</span></span><br><span class="line">        <span class="comment">// specified in the previous request.</span></span><br><span class="line">        String sequenceToken = describeLogStreamsResponse.logStreams().getFirst().uploadSequenceToken();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Build an input log message to put to CloudWatch.</span></span><br><span class="line">        InputLogEvent inputLogEvent = InputLogEvent.builder()</span><br><span class="line">                .message(JsonUtil.toJSONString(params))</span><br><span class="line">                .timestamp(System.currentTimeMillis())</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Specify the request parameters.</span></span><br><span class="line">        <span class="comment">// Sequence token is required so that the log can be written to the</span></span><br><span class="line">        <span class="comment">// latest location in the stream.</span></span><br><span class="line">        PutLogEventsRequest putLogEventsRequest = PutLogEventsRequest.builder()</span><br><span class="line">                .logEvents(Collections.singletonList(inputLogEvent))</span><br><span class="line">                .logGroupName(groupName)</span><br><span class="line">                .logStreamName(streamName)</span><br><span class="line">                .sequenceToken(sequenceToken)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        slsClient.putLogEvents(putLogEventsRequest);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/klover2/java-demo/blob/master/aws-demo/cloud-watch-log-demo/src/test/java/com/klover/cloudwatchlog/CloudWatchLogTest.java" target="_blank" rel="external nofollow noopener noreferrer">代码示例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装包&quot;&gt;&lt;a href=&quot;#安装包&quot; class=&quot;headerlink&quot; title=&quot;安装包&quot;&gt;&lt;/a&gt;安装包&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
      <category term="amazon" scheme="https://blog.wjc66.cn/tags/amazon/"/>
    
      <category term="CloudWatch" scheme="https://blog.wjc66.cn/tags/CloudWatch/"/>
    
  </entry>
  
  <entry>
    <title>json序列化和反序列化</title>
    <link href="https://blog.wjc66.cn/json%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>https://blog.wjc66.cn/json%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2024-03-20T06:21:54.000Z</published>
    <updated>2024-03-20T08:48:00.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.15.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.15.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Student student = <span class="keyword">new</span> Student();</span><br><span class="line">student.setName(<span class="string">"张三"</span>);</span><br><span class="line">student.setAge(<span class="number">10</span>);</span><br><span class="line">String jsonString = JsonUtil.toJSONString(student);</span><br><span class="line">System.out.println(jsonString);</span><br></pre></td></tr></table></figure><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">"&#123;\"name\":\"张三\",\"age\":10&#125;"</span>;</span><br><span class="line">      <span class="comment">// 第一种</span></span><br><span class="line">      Student parse = JsonUtil.parse(s, Student<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">      System.out.println(parse);</span><br><span class="line">      <span class="comment">// 第二种</span></span><br><span class="line">      Student parse1 = JsonUtil.parse(s, <span class="keyword">new</span> TypeReference&lt;Student&gt;() &#123;</span><br><span class="line">      &#125;);</span><br><span class="line">      System.out.println(parse1);</span><br><span class="line">      <span class="comment">// 第三种</span></span><br><span class="line">      JavaType javaType = JsonUtil.getCollectionType(Student<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">      Object parse2 = JsonUtil.parse(s, javaType);</span><br><span class="line">      System.out.println(parse2);</span><br></pre></td></tr></table></figure><p><a href="https://github.com/klover2/java-demo/blob/master/json-demo/src/test/java/com/klover/jackson/JsonUtilTest.java" target="_blank" rel="external nofollow noopener noreferrer">代码示例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装包&quot;&gt;&lt;a href=&quot;#安装包&quot; class=&quot;headerlink&quot; title=&quot;安装包&quot;&gt;&lt;/a&gt;安装包&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>xml转json</title>
    <link href="https://blog.wjc66.cn/xml%E8%BD%ACjson/"/>
    <id>https://blog.wjc66.cn/xml%E8%BD%ACjson/</id>
    <published>2024-03-20T06:15:53.000Z</published>
    <updated>2024-03-20T06:22:38.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.dataformat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-dataformat-xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.15.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="类定义"><a href="#类定义" class="headerlink" title="类定义"></a>类定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@JacksonXmlRootElement</span>(localName = <span class="string">"room"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Room</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 房间名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"name"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 房间号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"no"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer no;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 其他信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"info"</span>)</span><br><span class="line">    <span class="keyword">private</span> Info info;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 学生</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlElementWrapper</span>(localName = <span class="string">"students"</span>)</span><br><span class="line">    <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"student"</span>)</span><br><span class="line">    <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 老师</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlElementWrapper</span>(useWrapping = <span class="keyword">false</span>)</span><br><span class="line">    <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"teacher"</span>)</span><br><span class="line">    <span class="keyword">private</span> List&lt;Teacher&gt; teachers;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">        <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"name"</span>)</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"age"</span>)</span><br><span class="line">        <span class="keyword">private</span> Integer age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">        <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"name"</span>)</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"age"</span>)</span><br><span class="line">        <span class="keyword">private</span> Integer age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Info</span> </span>&#123;</span><br><span class="line">        <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"address"</span>)</span><br><span class="line">        <span class="keyword">private</span> String address;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 人数</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@JacksonXmlProperty</span>(localName = <span class="string">"number"</span>)</span><br><span class="line">        <span class="keyword">private</span> Integer number;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="toStringXml"><a href="#toStringXml" class="headerlink" title="toStringXml"></a>toStringXml</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">Room room = <span class="keyword">new</span> Room();</span><br><span class="line">        room.setNo(<span class="number">1</span>);</span><br><span class="line">        room.setName(<span class="string">"天水一班"</span>);</span><br><span class="line">        Room.Info info = <span class="keyword">new</span> Room.Info();</span><br><span class="line">        info.setAddress(<span class="string">"天水"</span>);</span><br><span class="line">        info.setNumber(<span class="number">5</span>);</span><br><span class="line">        room.setInfo(info);</span><br><span class="line">        ArrayList&lt;Room.Teacher&gt; teachers = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Room.Teacher teacher = <span class="keyword">new</span> Room.Teacher();</span><br><span class="line">        teacher.setAge(<span class="number">40</span>);</span><br><span class="line">        teacher.setName(<span class="string">"王老师"</span>);</span><br><span class="line">        teachers.add(teacher);</span><br><span class="line">        Room.Teacher teacher2 = <span class="keyword">new</span> Room.Teacher();</span><br><span class="line">        teacher2.setAge(<span class="number">45</span>);</span><br><span class="line">        teacher2.setName(<span class="string">"曾老师"</span>);</span><br><span class="line">        teachers.add(teacher2);</span><br><span class="line">        room.setTeachers(teachers);</span><br><span class="line">        ArrayList&lt;Room.Student&gt; students = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Room.Student student = <span class="keyword">new</span> Room.Student();</span><br><span class="line">        student.setAge(<span class="number">18</span>);</span><br><span class="line">        student.setName(<span class="string">"张三"</span>);</span><br><span class="line">        students.add(student);</span><br><span class="line">        Room.Student student2 = <span class="keyword">new</span> Room.Student();</span><br><span class="line">        student2.setAge(<span class="number">19</span>);</span><br><span class="line">        student2.setName(<span class="string">"李四"</span>);</span><br><span class="line">        students.add(student2);</span><br><span class="line">        Room.Student student3 = <span class="keyword">new</span> Room.Student();</span><br><span class="line">        student3.setAge(<span class="number">19</span>);</span><br><span class="line">        student3.setName(<span class="string">"王五"</span>);</span><br><span class="line">        students.add(student3);</span><br><span class="line">        room.setStudents(students);</span><br><span class="line"></span><br><span class="line">        String xmlString = XmlUtil.toXMLString(room);</span><br><span class="line">        System.out.println(xmlString);</span><br><span class="line"><span class="comment">// 打印========&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        xmlString = "&lt;room&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;name&gt;天水一班&lt;/name&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;no&gt;1&lt;/no&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;info&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;address&gt;天水&lt;/address&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;number&gt;5&lt;/number&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;/info&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;students&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;student&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "            &lt;name&gt;张三&lt;/name&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "            &lt;age&gt;18&lt;/age&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;/student&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;student&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "            &lt;name&gt;李四&lt;/name&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "            &lt;age&gt;19&lt;/age&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;/student&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;student&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "            &lt;name&gt;王五&lt;/name&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "            &lt;age&gt;19&lt;/age&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;/student&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;/students&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;teacher&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;name&gt;王老师&lt;/name&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;age&gt;40&lt;/age&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;/teacher&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;teacher&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;name&gt;曾老师&lt;/name&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "        &lt;age&gt;45&lt;/age&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "    &lt;/teacher&gt;\n" +</span></span><br><span class="line"><span class="comment">//                "&lt;/room&gt;";</span></span><br></pre></td></tr></table></figure><h3 id="toJson"><a href="#toJson" class="headerlink" title="toJson"></a>toJson</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">String xmlString = <span class="string">"&lt;room&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;name&gt;天水一班&lt;/name&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;no&gt;1&lt;/no&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;info&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;address&gt;天水&lt;/address&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;number&gt;5&lt;/number&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;/info&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;students&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;student&gt;\n"</span> +</span><br><span class="line">                <span class="string">"            &lt;name&gt;张三&lt;/name&gt;\n"</span> +</span><br><span class="line">                <span class="string">"            &lt;age&gt;18&lt;/age&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;/student&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;student&gt;\n"</span> +</span><br><span class="line">                <span class="string">"            &lt;name&gt;李四&lt;/name&gt;\n"</span> +</span><br><span class="line">                <span class="string">"            &lt;age&gt;19&lt;/age&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;/student&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;student&gt;\n"</span> +</span><br><span class="line">                <span class="string">"            &lt;name&gt;王五&lt;/name&gt;\n"</span> +</span><br><span class="line">                <span class="string">"            &lt;age&gt;19&lt;/age&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;/student&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;/students&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;teacher&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;name&gt;王老师&lt;/name&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;age&gt;40&lt;/age&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;/teacher&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;teacher&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;name&gt;曾老师&lt;/name&gt;\n"</span> +</span><br><span class="line">                <span class="string">"        &lt;age&gt;45&lt;/age&gt;\n"</span> +</span><br><span class="line">                <span class="string">"    &lt;/teacher&gt;\n"</span> +</span><br><span class="line">                <span class="string">"&lt;/room&gt;"</span>;</span><br><span class="line"></span><br><span class="line">        Room parse = XmlUtil.parse(xmlString, Room<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(parse);</span><br></pre></td></tr></table></figure><p><a href="https://github.com/klover2/java-demo/blob/master/json-demo/src/test/java/com/klover/jackson/XmlUtilTest.java" target="_blank" rel="external nofollow noopener noreferrer">代码示例</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装包&quot;&gt;&lt;a href=&quot;#安装包&quot; class=&quot;headerlink&quot; title=&quot;安装包&quot;&gt;&lt;/a&gt;安装包&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
      <category term="xml" scheme="https://blog.wjc66.cn/tags/xml/"/>
    
  </entry>
  
  <entry>
    <title>pgp加解密和生成密钥</title>
    <link href="https://blog.wjc66.cn/pgp%E5%8A%A0%E8%A7%A3%E5%AF%86%E5%92%8C%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5/"/>
    <id>https://blog.wjc66.cn/pgp%E5%8A%A0%E8%A7%A3%E5%AF%86%E5%92%8C%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5/</id>
    <published>2024-03-14T09:22:43.000Z</published>
    <updated>2024-03-14T09:24:35.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>GPG, 或 GnuPG (GNU Privacy Guard) 是一个遵照 OpenPGP 协议的用于加密、数字签名以及认证的软件。它与 PGP (Pretty Good Privacy) 的区别是它是开源的，而 PGP 则是 Symantec 公司的专有软件。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcpg-jdk18on<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.77<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码使用"><a href="#代码使用" class="headerlink" title="代码使用"></a>代码使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成公私钥</span></span><br><span class="line">PgpKeyDTO generate = PgpUtil.generate(<span class="string">"123456"</span>, <span class="string">"123@qq.com"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密</span></span><br><span class="line"> String testMessage = PgpUtil.encrypt(<span class="string">"test message"</span>, <span class="keyword">this</span>.publicKey);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line">  String decrypt = PgpUtil.decrypt(message, <span class="keyword">this</span>.privateKey, <span class="keyword">this</span>.passphrase);</span><br></pre></td></tr></table></figure><p><a href="https://github.com/klover2/java-demo/blob/master/pgp-demo/src/test/java/com/klover/pgp/PgpUtilTest.java" target="_blank" rel="external nofollow noopener noreferrer">代码示例</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://medium.com/@kthsingh.ms/encrypt-and-decrypt-anything-bytes-files-streams-with-pgp-using-bouncy-castle-and-java-ad335ae9f747" target="_blank" rel="external nofollow noopener noreferrer">Encrypt and decrypt anything (bytes/files/streams) with PGP using bouncy castle and java</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;GPG, 或 GnuPG (GNU Privacy Guard) 是一个遵照 OpenPGP 协议的用于加密、数字签名以及认证的软件。它与 
      
    
    </summary>
    
    
    
      <category term="crypto" scheme="https://blog.wjc66.cn/tags/crypto/"/>
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
      <category term="pgp" scheme="https://blog.wjc66.cn/tags/pgp/"/>
    
  </entry>
  
  <entry>
    <title>使用STS临时访问凭证访问OSS</title>
    <link href="https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8STS%E4%B8%B4%E6%97%B6%E8%AE%BF%E9%97%AE%E5%87%AD%E8%AF%81%E8%AE%BF%E9%97%AEOSS/"/>
    <id>https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8STS%E4%B8%B4%E6%97%B6%E8%AE%BF%E9%97%AE%E5%87%AD%E8%AF%81%E8%AE%BF%E9%97%AEOSS/</id>
    <published>2023-09-21T08:30:47.000Z</published>
    <updated>2023-09-21T08:31:57.939Z</updated>
    
    <content type="html"><![CDATA[<p>todo</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://help.aliyun.com/zh/oss/developer-reference/use-temporary-access-credentials-provided-by-sts-to-access-oss?spm=a2c4g.11186623.4.1.3baf297alQfiKs&scm=20140722.H_100624._.ID_100624-OR_rec-V_1" target="_blank" rel="external nofollow noopener noreferrer">STS 临时访问凭证访问 OSS</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;todo&lt;/p&gt;
&lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://help.aliyun.com/zh/oss/developer-referenc
      
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="STS" scheme="https://blog.wjc66.cn/tags/STS/"/>
    
  </entry>
  
  <entry>
    <title>注册美区苹果账号</title>
    <link href="https://blog.wjc66.cn/%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B4%A6%E5%8F%B7/"/>
    <id>https://blog.wjc66.cn/%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B4%A6%E5%8F%B7/</id>
    <published>2023-09-21T08:29:24.000Z</published>
    <updated>2023-09-21T08:30:13.026Z</updated>
    
    <content type="html"><![CDATA[<p>链接 &gt; <a href="https://github.com/getlantern/lantern/wiki/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B4%A6%E5%8F%B7" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/getlantern/lantern/wiki/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B4%A6%E5%8F%B7</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;链接 &amp;gt; &lt;a href=&quot;https://github.com/getlantern/lantern/wiki/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B
      
    
    </summary>
    
    
    
      <category term="other" scheme="https://blog.wjc66.cn/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>在PostgreSQL中创建只读用户</title>
    <link href="https://blog.wjc66.cn/%E5%9C%A8PostgreSQL%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%8F%AA%E8%AF%BB%E7%94%A8%E6%88%B7/"/>
    <id>https://blog.wjc66.cn/%E5%9C%A8PostgreSQL%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%8F%AA%E8%AF%BB%E7%94%A8%E6%88%B7/</id>
    <published>2023-09-21T08:25:08.000Z</published>
    <updated>2023-09-21T08:28:36.163Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建只读用户"><a href="#创建只读用户" class="headerlink" title="创建只读用户"></a>创建只读用户</h2><blockquote><p>CREATE USER readonly_user WITH PASSWORD ‘password’;</p></blockquote><p>这条命令会创建一个名为 readonly_user 的用户，并设置用户的密码为 ‘password’。请务必将 ‘password’ 替换为实际的密码。</p><h2 id="进入你需要赋予权限的数据库-授予只读权限"><a href="#进入你需要赋予权限的数据库-授予只读权限" class="headerlink" title="进入你需要赋予权限的数据库 授予只读权限"></a>进入你需要赋予权限的数据库 授予只读权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CONNECT</span> <span class="keyword">ON</span> <span class="keyword">DATABASE</span> <span class="keyword">database</span> <span class="keyword">TO</span> readonly_user;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">USAGE</span> <span class="keyword">ON</span> <span class="keyword">SCHEMA</span> <span class="keyword">public</span> <span class="keyword">TO</span> readonly_user;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">TABLES</span> <span class="keyword">IN</span> <span class="keyword">SCHEMA</span> <span class="keyword">public</span> <span class="keyword">TO</span> readonly_user;</span><br></pre></td></tr></table></figure><p>其中，database 是要授予权限的数据库名称。</p><p>第一条命令 GRANT CONNECT ON DATABASE database TO readonly_user; 授予用户连接数据库的权限。</p><p>第二条命令 GRANT USAGE ON SCHEMA public TO readonly_user; 授予用户对数据库中公共模式的使用权限。</p><p>第三条命令 GRANT SELECT ON ALL TABLES IN SCHEMA public TO readonly_user; 授予用户对数据库中公共模式下所有表的只读权限。</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://deepinout.com/sqlite/sqlite-questions/89_postgresql_how_do_you_create_a_readonly_user_in_postgresql.html" target="_blank" rel="external nofollow noopener noreferrer">PostgreSQL 如何在 PostgreSQL 中创建只读用户</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建只读用户&quot;&gt;&lt;a href=&quot;#创建只读用户&quot; class=&quot;headerlink&quot; title=&quot;创建只读用户&quot;&gt;&lt;/a&gt;创建只读用户&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;CREATE USER readonly_user WITH PASSWORD ‘
      
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>nodejs中google授权登录</title>
    <link href="https://blog.wjc66.cn/nodejs%E4%B8%ADgoogle%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95/"/>
    <id>https://blog.wjc66.cn/nodejs%E4%B8%ADgoogle%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95/</id>
    <published>2023-09-21T07:26:17.000Z</published>
    <updated>2023-09-21T08:26:39.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="google-授权配置"><a href="#google-授权配置" class="headerlink" title="google 授权配置"></a>google 授权配置</h2><p>创建项目 &gt;&gt; 在凭据页面创建 OAuth 2.0 客户端 ID &gt;&gt; 配置 (已获授权的重定向 URI) &gt;&gt; 测试完成 在 OAuth 同意屏幕 发布正式版</p><h2 id="授权跳转连接"><a href="#授权跳转连接" class="headerlink" title="授权跳转连接"></a>授权跳转连接</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> url = <span class="string">`https://accounts.google.com/o/oauth2/v2/auth?scope=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(</span></span></span><br><span class="line"><span class="string"><span class="subst">  <span class="string">"https://www.googleapis.com/auth/userinfo.email"</span></span></span></span><br><span class="line"><span class="string"><span class="subst">)&#125;</span>&amp;include_granted_scopes=true&amp;</span></span><br><span class="line"><span class="string">response_type=token&amp;state=1234&amp;redirect_uri=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(</span></span></span><br><span class="line"><span class="string"><span class="subst">  <span class="string">"&lt;跳转连接 需要在谷歌配置&gt;"</span></span></span></span><br><span class="line"><span class="string"><span class="subst">)&#125;</span>&amp;client_id=client_id`</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(url);</span><br></pre></td></tr></table></figure><h2 id="授权成功后跳转链接如下"><a href="#授权成功后跳转链接如下" class="headerlink" title="授权成功后跳转链接如下"></a>授权成功后跳转链接如下</h2><blockquote><p>(跳转连接 需要在谷歌配置)#state=1234&amp;access_token=<access_token>&amp;token_type=Bearer&amp;expires_in=3599&amp;scope=email%20<a href="https://www.googleapis.com/auth/userinfo.email%20https://www.googleapis.com/auth/drive.metadata.readonly%20openid&amp;authuser=0&amp;prompt=none" target="_blank" rel="external nofollow noopener noreferrer">https://www.googleapis.com/auth/userinfo.email%20https://www.googleapis.com/auth/drive.metadata.readonly%20openid&amp;authuser=0&amp;prompt=none</a></access_token></p></blockquote><h2 id="获取用户信息"><a href="#获取用户信息" class="headerlink" title="获取用户信息"></a>获取用户信息</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> superagent <span class="keyword">from</span> <span class="string">"superagent"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="string">`https://www.googleapis.com/oauth2/v1/userinfo`</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> superagent.get(url, &#123; access_token: token &#125;).set(&#123;</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取客户邮箱 和id 头像</span></span><br><span class="line">  <span class="keyword">return</span> res.body;</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://developers.google.cn/identity/protocols/oauth2/javascript-implicit-flow?hl=zh-cn" target="_blank" rel="external nofollow noopener noreferrer">适用于客户端 Web 应用的 OAuth 2.0</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;google-授权配置&quot;&gt;&lt;a href=&quot;#google-授权配置&quot; class=&quot;headerlink&quot; title=&quot;google 授权配置&quot;&gt;&lt;/a&gt;google 授权配置&lt;/h2&gt;&lt;p&gt;创建项目 &amp;gt;&amp;gt; 在凭据页面创建 OAuth 2.0 客户
      
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="google" scheme="https://blog.wjc66.cn/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>nodejs中google-authenticator使用</title>
    <link href="https://blog.wjc66.cn/nodejs%E4%B8%ADgoogle-authenticator%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/nodejs%E4%B8%ADgoogle-authenticator%E4%BD%BF%E7%94%A8/</id>
    <published>2023-09-21T07:19:28.000Z</published>
    <updated>2023-09-21T07:26:48.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GA-6-为验证码"><a href="#GA-6-为验证码" class="headerlink" title="GA 6 为验证码"></a>GA 6 为验证码</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; authenticator &#125; <span class="keyword">from</span> <span class="string">"otplib"</span>;</span><br><span class="line"></span><br><span class="line">authenticator.options = &#123;</span><br><span class="line">  epoch: <span class="built_in">Date</span>.now() - <span class="number">30</span> * <span class="number">1000</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> secret_key = authenticator.generateSecret();</span><br><span class="line"><span class="built_in">console</span>.log(authenticator.generate(secret_key));</span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://github.com/google/google-authenticator/wiki/Key-Uri-Format" target="_blank" rel="external nofollow noopener noreferrer">google-authenticator</a><br><a href="https://www.5axxw.com/wiki/content/6cwktj" target="_blank" rel="external nofollow noopener noreferrer">Otplib</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GA-6-为验证码&quot;&gt;&lt;a href=&quot;#GA-6-为验证码&quot; class=&quot;headerlink&quot; title=&quot;GA 6 为验证码&quot;&gt;&lt;/a&gt;GA 6 为验证码&lt;/h2&gt;&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="google" scheme="https://blog.wjc66.cn/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>node版本管理工具nvm</title>
    <link href="https://blog.wjc66.cn/node%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nvm/"/>
    <id>https://blog.wjc66.cn/node%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nvm/</id>
    <published>2023-09-21T07:12:16.000Z</published>
    <updated>2023-09-21T07:20:12.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-Centos-8-环境下安装-nvm"><a href="#Linux-Centos-8-环境下安装-nvm" class="headerlink" title="Linux Centos 8 环境下安装 nvm"></a>Linux Centos 8 环境下安装 nvm</h2><p>官网：<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/nvm-sh/nvm</a></p><h3 id="下载-nvm-sh-文件"><a href="#下载-nvm-sh-文件" class="headerlink" title="下载 nvm.sh 文件"></a>下载 nvm.sh 文件</h3><p>方式一：命令行工具输入，通过 curl 工具下载</p><blockquote><p>curl -o- <a href="https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh" target="_blank" rel="external nofollow noopener noreferrer">https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh</a> | bash</p></blockquote><p>方式二：命令行工具输入，通过 wget 工具下载</p><blockquote><p>wget -qO- <a href="https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh" target="_blank" rel="external nofollow noopener noreferrer">https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh</a> | bash</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>这将在主目录下创建一个.nvm 目录。nvm 保留自己的二进制文件和所有其他所需文件。然后在用户.bashrc 文件中设置环境。您需要通过运行以下命令来加载此环境以设置所需的配置：</p><blockquote><p>source ~/.bashrc</p></blockquote><h2 id="windows-环境下安装-nvm"><a href="#windows-环境下安装-nvm" class="headerlink" title="windows 环境下安装 nvm"></a>windows 环境下安装 nvm</h2><h3 id="下载指定版本安装包"><a href="#下载指定版本安装包" class="headerlink" title="下载指定版本安装包"></a>下载指定版本安装包</h3><blockquote><p><a href="https://github.com/nvm-sh/nvm/releases" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/nvm-sh/nvm/releases</a></p></blockquote><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://yuencode.cn/2023/01/03/Linux-Centos-8-%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85nvm/" target="_blank" rel="external nofollow noopener noreferrer">Linux Centos 8 环境下安装 nvm</a><br><a href="https://blog.csdn.net/baidu_30506559/article/details/127379924" target="_blank" rel="external nofollow noopener noreferrer">nvm 安装及基础命令</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-Centos-8-环境下安装-nvm&quot;&gt;&lt;a href=&quot;#Linux-Centos-8-环境下安装-nvm&quot; class=&quot;headerlink&quot; title=&quot;Linux Centos 8 环境下安装 nvm&quot;&gt;&lt;/a&gt;Linux Centos 8
      
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="nvm" scheme="https://blog.wjc66.cn/tags/nvm/"/>
    
  </entry>
  
  <entry>
    <title>IDEA:java:无效的源发行版：14</title>
    <link href="https://blog.wjc66.cn/IDEA-java-%E6%97%A0%E6%95%88%E7%9A%84%E6%BA%90%E5%8F%91%E8%A1%8C%E7%89%88%EF%BC%9A14/"/>
    <id>https://blog.wjc66.cn/IDEA-java-%E6%97%A0%E6%95%88%E7%9A%84%E6%BA%90%E5%8F%91%E8%A1%8C%E7%89%88%EF%BC%9A14/</id>
    <published>2023-07-14T03:41:00.000Z</published>
    <updated>2023-07-14T03:42:53.527Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>用 IDEA 编写 sdk 代码运行后报如下错误：<br><code>警告: 源发行版 14 需要目标发行版 14</code></p><h2 id="问题原因："><a href="#问题原因：" class="headerlink" title="问题原因："></a>问题原因：</h2><p>出现该问题的原因是项目 Project 当中的 jdk 与电脑当中的 jdk 版本不一致造成的。</p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>修改 IDEA 当中的 Project 项目的 jdk 版本</p><ol><li>修改 Project 的 SDK 版本<br><img src="https://img-blog.csdnimg.cn/c7c4e3084a3348bfadeab5bd23b5a010.png" alt="在这里插入图片描述"></li><li>修改 Module 模块的 Language Level<br><img src="https://img-blog.csdnimg.cn/baf4d6b24a454decbe98c5a860783a2b.png" alt="在这里插入图片描述"></li><li>修改 Module 模块中的 Module SDK<br><img src="https://img-blog.csdnimg.cn/12cf70053f044e1e9ba6133776459ca2.png" alt></li><li>设置 plaform settings Sdks<br><img src="https://img-blog.csdnimg.cn/0bf3e0671c5c499b9da89c7e3773691d.png" alt="在这里插入图片描述"></li><li>找到 Java Complier，修改 byte code version，使其版本与 sdk 版本保持一致<br><img src="https://img-blog.csdnimg.cn/a480b77b9e774f1891bd335b0385703c.png" alt="在这里插入图片描述"><br>修改过后，再次编译运行就没有问题了！</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h2&gt;&lt;p&gt;用 IDEA 编写 sdk 代码运行后报如下错误：&lt;br&gt;&lt;code&gt;警告: 源发行版 14 需要目标发行版 14&lt;
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>postgresql敏感信息处理</title>
    <link href="https://blog.wjc66.cn/postgresql%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E5%A4%84%E7%90%86/"/>
    <id>https://blog.wjc66.cn/postgresql%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E5%A4%84%E7%90%86/</id>
    <published>2023-05-11T11:55:22.000Z</published>
    <updated>2023-05-11T12:04:46.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>对手机号 和 邮箱进行脱敏处理</p><h2 id="处理方式"><a href="#处理方式" class="headerlink" title="处理方式"></a>处理方式</h2><p>使用数据库<code>regexp_replace</code>函数进行数据处理</p><a id="more"></a><h2 id="regexp-replace函数介绍"><a href="#regexp-replace函数介绍" class="headerlink" title="regexp_replace函数介绍"></a><code>regexp_replace</code>函数介绍</h2><p>regexp_replace(source, pattern, replace_string, occurrence)<br>参数说明：</p><ol><li>source: string 类型，要替换的原始字符串。</li><li>pattern: string 类型常量，要匹配的正则模式，pattern 为空串时抛异常。</li><li>replace_string:string，将匹配的 pattern 替换成的字符串。</li><li>occurrence: bigint 类型常量，必须大于等于 0，<br>大于 0：表示将第几次匹配替换成 replace_string，<br>等于 0：表示替换掉所有的匹配子串。<br>其它类型或小于 0 抛异常。</li></ol><p>返回值：<br>将 source 字符串中匹配 pattern 的子串替换成指定字符串后返回，当输入 source, pattern, occurrence 参数为 NULL 时返回 NULL，若 replace_string 为 NULL 且 pattern 有匹配，返回 NULL，replace_string 为 NULL 但 pattern 不匹配，则返回原串。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> users: User[] = <span class="keyword">await</span> <span class="keyword">this</span>.userRepo</span><br><span class="line">  .createQueryBuilder()</span><br><span class="line">  .select(<span class="string">'"id"'</span>)</span><br><span class="line">  .addSelect(<span class="string">"nickname"</span>)</span><br><span class="line">  .addSelect(<span class="string">`REGEXP_REPLACE(phone, '(^.&#123;3&#125;).*(\\d&#123;4&#125;)$', '\\1**\\2')`</span>, <span class="string">"phone"</span>) <span class="comment">// 格式 +86**4352</span></span><br><span class="line">  .addSelect(<span class="string">`REGEXP_REPLACE(email, '(^.&#123;2&#125;).*@(.*)', '\\1**@\\2')`</span>, <span class="string">"email"</span>) <span class="comment">// 格式 fe**@qq.com</span></span><br><span class="line">  .where(&#123; id: <span class="string">"c66d2386-bcfb-420d-91be-ca6af07415d2"</span> &#125;)</span><br><span class="line">  .getRawMany();</span><br></pre></td></tr></table></figure><p>生成的 sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">"id"</span>, nickname, REGEXP_REPLACE(phone, <span class="string">'(^.&#123;3&#125;).*(\d&#123;4&#125;)$'</span>, <span class="string">'\1**\2'</span>) <span class="keyword">AS</span> <span class="string">"phone"</span>, REGEXP_REPLACE(email, <span class="string">'(^.&#123;2&#125;).*@(.*)'</span>, <span class="string">'\1**@\2'</span>) <span class="keyword">AS</span> <span class="string">"email"</span> <span class="keyword">FROM</span> <span class="string">"user"</span> <span class="string">"User"</span> <span class="keyword">WHERE</span> ( <span class="string">"User"</span>.<span class="string">"id"</span> = <span class="string">'c66d2386-bcfb-420d-91be-ca6af07415d2'</span> ) <span class="keyword">AND</span> ( <span class="string">"User"</span>.<span class="string">"deleteTime"</span> <span class="keyword">IS</span> <span class="literal">NULL</span> )</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;对手机号 和 邮箱进行脱敏处理&lt;/p&gt;
&lt;h2 id=&quot;处理方式&quot;&gt;&lt;a href=&quot;#处理方式&quot; class=&quot;headerlink&quot; title=&quot;处理方式&quot;&gt;&lt;/a&gt;处理方式&lt;/h2&gt;&lt;p&gt;使用数据库&lt;code&gt;regexp_replace&lt;/code&gt;函数进行数据处理&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
      <category term="typeorm" scheme="https://blog.wjc66.cn/tags/typeorm/"/>
    
  </entry>
  
  <entry>
    <title>国密sm2加密</title>
    <link href="https://blog.wjc66.cn/%E5%9B%BD%E5%AF%86sm2%E5%8A%A0%E5%AF%86/"/>
    <id>https://blog.wjc66.cn/%E5%9B%BD%E5%AF%86sm2%E5%8A%A0%E5%AF%86/</id>
    <published>2023-04-26T12:22:06.000Z</published>
    <updated>2023-04-26T12:43:22.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SM2-国密算法-，加密模式-C1C3C2"><a href="#SM2-国密算法-，加密模式-C1C3C2" class="headerlink" title="SM2(国密算法)，加密模式 C1C3C2"></a>SM2(国密算法)，加密模式 C1C3C2</h2><p>SM2 为非对称加密，基于 ECC。该算法已公开。由于该算法基于 ECC，故其签名速度与秘钥生成速度都快于 RSA。ECC 256 位（SM2 采用的就是 ECC 256 位的一种）安全强度比 RSA 2048 位高，但运算速度快于 RSA。<br>旧标准的加密排序 C1C2C3 新标准 C1C3C2，C1 为 65 字节第 1 字节为压缩标识，这里固定为 0x04，后面 64 字节为 xy 分量各 32 字节。C3 为 32 字节。C2 长度与原文一致。</p><blockquote><p>公钥：049cbf6df92258b385b82844d29039183d98e205726bcecd71b40ded26e717d3ccb9132685432eaafbcb58683c3d303a1e79137447231f8db33226b24893fcd429</p></blockquote><blockquote><p>私钥：6c4a9b2d44704400552b4b90c39c5bca3e5c0ac1b91324e3d0579eebf24830bd</p></blockquote><a id="more"></a><h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><ol><li>添加包</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;bcpkix-jdk15on&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.70&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>java 加密</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crypto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.asn1.gm.GMNamedCurves;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.asn1.x9.X9ECParameters;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.InvalidCipherTextException;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.engines.SM2Engine;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.params.ECDomainParameters;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.params.ECPublicKeyParameters;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.params.ParametersWithRandom;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.math.ec.ECPoint;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.util.encoders.Base64;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.util.encoders.Hex;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> klover</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> SM2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/4/25 12:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SM2</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> InvalidCipherTextException </span>&#123;</span><br><span class="line">        <span class="comment">// 加密代码示例</span></span><br><span class="line">        <span class="keyword">final</span> String SPEC_NAME = <span class="string">"sm2p256v1"</span>;</span><br><span class="line">        <span class="keyword">final</span> X9ECParameters x9ECParameters = GMNamedCurves.getByName(SPEC_NAME);</span><br><span class="line">        <span class="keyword">final</span> ECDomainParameters ecDomainParameters = <span class="keyword">new</span> ECDomainParameters(x9ECParameters.getCurve(), x9ECParameters.getG(), x9ECParameters.getN());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 公钥数据</span></span><br><span class="line">        String encodedPub = <span class="string">"049cbf6df92258b385b82844d29039183d98e205726bcecd71b40ded26e717d3ccb9132685432eaafbcb58683c3d303a1e79137447231f8db33226b24893fcd429"</span>;</span><br><span class="line">        String data = <span class="string">"6220012345670001"</span>; <span class="comment">// 待加密数据</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] pointBytes = Hex.decode(encodedPub);</span><br><span class="line">        ECPoint q = x9ECParameters.getCurve().decodePoint(pointBytes);</span><br><span class="line">        ECPublicKeyParameters ecPublicKeyParameters = <span class="keyword">new</span> ECPublicKeyParameters(q, ecDomainParameters);</span><br><span class="line">        <span class="comment">// 采用 C1 || C3 || C2 的模式</span></span><br><span class="line">        SM2Engine sm2Engine = <span class="keyword">new</span> SM2Engine(SM2Engine.Mode.C1C3C2);</span><br><span class="line">        <span class="comment">// 自定义固定签名</span></span><br><span class="line"><span class="comment">//        SecureRandom secureRandom = new SecureRandom(encodedPub.getBytes(StandardCharsets.UTF_8));</span></span><br><span class="line"><span class="comment">//        SecureRandom random = CryptoServicesRegistrar.getSecureRandom(secureRandom);</span></span><br><span class="line"><span class="comment">//        sm2Engine.init(true, new ParametersWithRandom(ecPublicKeyParameters, random));</span></span><br><span class="line">        <span class="comment">// 动态</span></span><br><span class="line">        sm2Engine.init(<span class="keyword">true</span>, <span class="keyword">new</span> ParametersWithRandom(ecPublicKeyParameters));</span><br><span class="line">        <span class="keyword">byte</span>[] dataBytes = data.getBytes();</span><br><span class="line">        <span class="keyword">byte</span>[] cipherBytes = sm2Engine.processBlock(dataBytes, <span class="number">0</span>, dataBytes.length);</span><br><span class="line">        String encryptedData = <span class="keyword">new</span> String(Base64.encode(cipherBytes));</span><br><span class="line">        System.out.println(encryptedData);</span><br><span class="line">        <span class="comment">// 加密结果示例: BB5SdLKsA2dqJTeXUFpRf9M6htKBrfYOTlaVUFHp340wXQ6quFU3fT9PSw8Hf6s1QyqMizJYjnvl/Jsqn91Zr6KXXhZUdeRctUBtvkUOFB6QYeHLa+dk5mQTOhG0cJGaOWd3tNF/3pM7w0lk3snC6X0=</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="node"><a href="#node" class="headerlink" title="node"></a>node</h3><ol><li>添加包</li></ol><blockquote><p>gmsm-sm2js</p></blockquote><ol start="2"><li>使用</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> SM2 <span class="keyword">from</span> <span class="string">"gmsm-sm2js"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 加密方式 SM2 sm2p256v1</span></span><br><span class="line"><span class="comment"> * @publicKey 加密公钥</span></span><br><span class="line"><span class="comment"> * @msg 原文</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> sm2p256v1Encrypt = <span class="function">(<span class="params">publicKey: <span class="built_in">string</span>, msg: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> encrypt = SM2.encrypt(publicKey, msg);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Buffer.from(encrypt, <span class="string">"hex"</span>).toString(<span class="string">"base64"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解密方式 SM2 sm2p256v1</span></span><br><span class="line"><span class="comment"> * @publicKey 解密私钥</span></span><br><span class="line"><span class="comment"> * @msg 密文</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> sm2p256v1Decrypt = <span class="function">(<span class="params">privateKey: <span class="built_in">string</span>, msg: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> decrypt = SM2.decrypt(privateKey, Buffer.from(msg, <span class="string">"base64"</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Buffer.from(decrypt, <span class="string">"hex"</span>).toString(<span class="string">"utf8"</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> privateKey =</span><br><span class="line">  <span class="string">"6c4a9b2d44704400552b4b90c39c5bca3e5c0ac1b91324e3d0579eebf24830bd"</span>;</span><br><span class="line"><span class="keyword">const</span> publicKey =</span><br><span class="line">  <span class="string">"049cbf6df92258b385b82844d29039183d98e205726bcecd71b40ded26e717d3ccb9132685432eaafbcb58683c3d303a1e79137447231f8db33226b24893fcd429"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> msgString = <span class="string">"6220012345670001"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> encryptData = sm2p256v1Encrypt(publicKey, msgString);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(encryptData);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sm2p256v1Decrypt(privateKey, encryptData));</span><br></pre></td></tr></table></figure><h3 id="node-解密-java-加密的值"><a href="#node-解密-java-加密的值" class="headerlink" title="node 解密 java 加密的值"></a>node 解密 java 加密的值</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line">  sm2p256v1Decrypt(</span><br><span class="line">    privateKey,</span><br><span class="line">    <span class="string">"BB5SdLKsA2dqJTeXUFpRf9M6htKBrfYOTlaVUFHp340wXQ6quFU3fT9PSw8Hf6s1QyqMizJYjnvl/Jsqn91Zr6KXXhZUdeRctUBtvkUOFB6QYeHLa+dk5mQTOhG0cJGaOWd3tNF/3pM7w0lk3snC6X0="</span></span><br><span class="line">  )</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SM2-国密算法-，加密模式-C1C3C2&quot;&gt;&lt;a href=&quot;#SM2-国密算法-，加密模式-C1C3C2&quot; class=&quot;headerlink&quot; title=&quot;SM2(国密算法)，加密模式 C1C3C2&quot;&gt;&lt;/a&gt;SM2(国密算法)，加密模式 C1C3C2&lt;/h2&gt;&lt;p&gt;SM2 为非对称加密，基于 ECC。该算法已公开。由于该算法基于 ECC，故其签名速度与秘钥生成速度都快于 RSA。ECC 256 位（SM2 采用的就是 ECC 256 位的一种）安全强度比 RSA 2048 位高，但运算速度快于 RSA。&lt;br&gt;旧标准的加密排序 C1C2C3 新标准 C1C3C2，C1 为 65 字节第 1 字节为压缩标识，这里固定为 0x04，后面 64 字节为 xy 分量各 32 字节。C3 为 32 字节。C2 长度与原文一致。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;公钥：049cbf6df92258b385b82844d29039183d98e205726bcecd71b40ded26e717d3ccb9132685432eaafbcb58683c3d303a1e79137447231f8db33226b24893fcd429&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;私钥：6c4a9b2d44704400552b4b90c39c5bca3e5c0ac1b91324e3d0579eebf24830bd&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="crypto" scheme="https://blog.wjc66.cn/tags/crypto/"/>
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>发布一个golang的工具包到github</title>
    <link href="https://blog.wjc66.cn/%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAgolang%E7%9A%84%E5%B7%A5%E5%85%B7%E5%8C%85%E5%88%B0github/"/>
    <id>https://blog.wjc66.cn/%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAgolang%E7%9A%84%E5%B7%A5%E5%85%B7%E5%8C%85%E5%88%B0github/</id>
    <published>2022-10-26T07:54:10.000Z</published>
    <updated>2022-10-26T08:21:41.395Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Go-语言环境安装"><a href="#Go-语言环境安装" class="headerlink" title="Go 语言环境安装"></a>Go 语言环境安装</h2><p>Go 语言支持以下系统：</p><ul><li>Linux</li><li>FreeBSD</li><li>Mac OS X（也称为 Darwin）</li><li>Windows<br>安装包下载地址为：<a href="https://golang.org/dl/。" target="_blank" rel="external nofollow noopener noreferrer">https://golang.org/dl/。</a></li></ul><p>如果打不开可以使用这个地址：<a href="https://golang.google.cn/dl/。" target="_blank" rel="external nofollow noopener noreferrer">https://golang.google.cn/dl/。</a></p><a id="more"></a><h2 id="新建空项目"><a href="#新建空项目" class="headerlink" title="新建空项目"></a>新建空项目</h2><ul><li><p>在 github 上新建一个公开的项目，比如我创建一个 qbit-go-sdk 的项目</p></li><li><p>将项目克隆到本地来</p></li><li><p>进入项目根目录，使用<code>go mod</code>初始化项目</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">go mod init github.com/klover2/qbit-go-sdk</span><br></pre></td></tr></table></figure><ul><li>初始化后的 go.mod 的文件如下，如果你的 module 不是你 github 的项目地址你要修改过来</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">module github.com/klover2/qbit-go-sdk</span><br><span class="line"></span><br><span class="line">go 1.16</span><br></pre></td></tr></table></figure><ul><li>随便写一些东西发布到 githup 上</li></ul><h2 id="将-github-上的工程转换为别人可以下载的依赖包"><a href="#将-github-上的工程转换为别人可以下载的依赖包" class="headerlink" title="将 github 上的工程转换为别人可以下载的依赖包"></a>将 github 上的工程转换为别人可以下载的依赖包</h2><ol><li>本地使用 git 命令创建一个 tag</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git tag -a tag名 -m <span class="string">'创建一个版本'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># eg</span></span><br><span class="line"></span><br><span class="line">git tag -a v1.0.0 -m <span class="string">'创建一个项目'</span></span><br></pre></td></tr></table></figure><ol start="2"><li>将 tag 提交到 github 上</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git push origin tag名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># eg</span></span><br><span class="line"></span><br><span class="line">git push origin v1.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次性提交本地全部的tag</span></span><br><span class="line"></span><br><span class="line">git push origin --tags</span><br></pre></td></tr></table></figure><h2 id="直接在-github-上查看是否已经提交成功-tag"><a href="#直接在-github-上查看是否已经提交成功-tag" class="headerlink" title="直接在 github 上查看是否已经提交成功 tag"></a>直接在 github 上查看是否已经提交成功 tag</h2><p><img src="https://img-blog.csdnimg.cn/ae6769f561a44c4c94abab5df257a55b.png" alt="在这里插入图片描述"></p><h2 id="创建对应的发布"><a href="#创建对应的发布" class="headerlink" title="创建对应的发布"></a>创建对应的发布</h2><p><img src="https://img-blog.csdnimg.cn/5dce1126bf7e4c6f982f6bf5626e1d04.png" alt="在这里插入图片描述"></p><h2 id="查看自己发布的包"><a href="#查看自己发布的包" class="headerlink" title="查看自己发布的包"></a>查看自己发布的包</h2><p><a href="https://pkg.go.dev/" target="_blank" rel="external nofollow noopener noreferrer">pkg.go</a> 同步有点慢，不用在乎，上传到 githup 上就可以用了</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><code>go get github.com/klover2/qbit-go-sdk</code><br><code>go get vendor</code> 把代码拉到本地</p><h2 id="更新包版本"><a href="#更新包版本" class="headerlink" title="更新包版本"></a>更新包版本</h2><p>直接修改<code>go.mod</code> 对应包的版本<br><code>go mod tidy</code> 更新包<br><code>go get vendor</code> 把代码拉到本地</p><h2 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>打开你的 PowerShell 并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; <span class="variable">$env</span>:GO111MODULE = <span class="string">"on"</span></span><br><span class="line">C:\&gt; <span class="variable">$env</span>:GOPROXY = <span class="string">"https://goproxy.cn"</span></span><br></pre></td></tr></table></figure><p>或者</p><ol><li>打开“开始”并搜索“env”</li><li>选择“编辑系统环境变量”</li><li>点击“环境变量…”按钮</li><li>在“&lt;你的用户名&gt; 的用户变量”章节下（上半部分）</li><li>点击“新建…”按钮</li><li>选择“变量名”输入框并输入“GO111MODULE”</li><li>选择“变量值”输入框并输入“on”</li><li>点击“确定”按钮</li><li>点击“新建…”按钮</li><li>选择“变量名”输入框并输入“GOPROXY”</li><li>选择“变量值”输入框并输入“<a href="https://goproxy.cn”" target="_blank" rel="external nofollow noopener noreferrer">https://goproxy.cn”</a></li><li>点击“确定”按钮</li></ol><h3 id="Go-1-13-及以上（推荐）"><a href="#Go-1-13-及以上（推荐）" class="headerlink" title="Go 1.13 及以上（推荐）"></a>Go 1.13 及以上（推荐）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ go env -w GO111MODULE=on</span><br><span class="line">$ go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><h3 id="macOS-或-Linux"><a href="#macOS-或-Linux" class="headerlink" title="macOS 或 Linux"></a>macOS 或 Linux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> GO111MODULE=on</span><br><span class="line">$ <span class="built_in">export</span> GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"export GO111MODULE=on"</span> &gt;&gt; ~/.profile</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"export GOPROXY=https://goproxy.cn"</span> &gt;&gt; ~/.profile</span><br><span class="line">$ <span class="built_in">source</span> ~/.profile</span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://goproxy.cn/" target="_blank" rel="external nofollow noopener noreferrer">配置代理</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Go-语言环境安装&quot;&gt;&lt;a href=&quot;#Go-语言环境安装&quot; class=&quot;headerlink&quot; title=&quot;Go 语言环境安装&quot;&gt;&lt;/a&gt;Go 语言环境安装&lt;/h2&gt;&lt;p&gt;Go 语言支持以下系统：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;FreeBSD&lt;/li&gt;
&lt;li&gt;Mac OS X（也称为 Darwin）&lt;/li&gt;
&lt;li&gt;Windows&lt;br&gt;安装包下载地址为：&lt;a href=&quot;https://golang.org/dl/。&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://golang.org/dl/。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果打不开可以使用这个地址：&lt;a href=&quot;https://golang.google.cn/dl/。&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://golang.google.cn/dl/。&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="golang" scheme="https://blog.wjc66.cn/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>pipenv命令的使用</title>
    <link href="https://blog.wjc66.cn/pipenv%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/pipenv%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2022-10-24T05:04:55.000Z</published>
    <updated>2022-10-24T05:07:52.299Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">pip install pipenv</span><br><span class="line"><span class="comment">#查看版本</span></span><br><span class="line">pipenv --version</span><br><span class="line"><span class="comment">#创建</span></span><br><span class="line"><span class="comment">#pipenv --python 3.8(可以不用)</span></span><br><span class="line"><span class="comment">#激活虚拟环境</span></span><br><span class="line">pipenv shell</span><br><span class="line"><span class="comment">#退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">安装开发扩展</span><br><span class="line">pipenv install --dev django</span><br><span class="line"><span class="comment">#安装生产环境</span></span><br><span class="line">pipenv install</span><br><span class="line"><span class="comment">#安装开发环境</span></span><br><span class="line">pipenv install --dev</span><br><span class="line"><span class="comment">#卸载包</span></span><br><span class="line">pipenv uninstall [package]</span><br><span class="line"><span class="comment">#查看创建虚拟机所在目录</span></span><br><span class="line">pipenv --venv全局切换版本pyenv global 3.6.4当前目录切换版本pyenv <span class="built_in">local</span> 3.6.4pipenv --three <span class="comment"># 初始化一个python3虚拟环境，如果想初始化pyhton2的虚拟环境，则使用pipenv --twopipenv --python 2.7.14删除环境(在pipfile所在目录执行)</span></span><br><span class="line">pipenv uninstall --all <span class="comment"># 卸载全部包</span></span><br><span class="line">pipenv --rm     <span class="comment"># 删除整个环境  不会删除pipfile</span></span><br></pre></td></tr></table></figure><h2 id="安装第三方库"><a href="#安装第三方库" class="headerlink" title="安装第三方库"></a>安装第三方库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装第三方库</span></span><br><span class="line">pipenv install [第三方库名]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看包的依赖结构</span></span><br><span class="line">pipenv graph</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看安装的包</span></span><br><span class="line">pip list</span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载包</span></span><br><span class="line">pipenv uninstall [第三方库名]</span><br><span class="line"></span><br><span class="line"><span class="comment">#退出虚拟环境</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除虚拟环境</span></span><br><span class="line">pipenv – – rm</span><br><span class="line"></span><br><span class="line"><span class="comment">#要更新所有的依赖项，使用命令 pipenv update</span></span><br><span class="line"><span class="comment">#使用 pipenv update &lt;pkg&gt; 命令升级指定的包</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果项目已经存在requirements.txt</span></span><br><span class="line">pipenv install -r requirements.txt</span><br></pre></td></tr></table></figure><h2 id="安装环境区分"><a href="#安装环境区分" class="headerlink" title="安装环境区分"></a>安装环境区分</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pipenv install</span><br><span class="line">–dev 安装Pipfile中 [default] 和 [devlop] 中的包</span><br><span class="line"></span><br><span class="line">–system 使用系统的 pip 命令而不是virtualenv的 pip 命令</span><br><span class="line"></span><br><span class="line">–ignore-pipfile 忽略 Pipfile 文件而直接安装 Pipfile.lock 中的包</span><br><span class="line"></span><br><span class="line">–ignore-lock 忽略 Pipfile.lock 文件而直接安装 Pipfile 中的包。此外，不会更新 Pipfile.lock 文件。</span><br><span class="line"></span><br><span class="line">pipenv uninstall</span><br><span class="line">–all 从虚拟环境中移除所有已安装的包，但 Pipfile.lock 文件不受影响</span><br><span class="line">–all-dev 从虚拟环境中卸载所有开发包，并从 Pipfile 文件中移除这些包</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
    
      <category term="python" scheme="https://blog.wjc66.cn/tags/python/"/>
    
  </entry>
  
</feed>
