<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>笔记</title>
  
  <subtitle>以每一个问题为目标，每解决一个问题给自己及时反馈</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.wjc66.cn/"/>
  <updated>2024-03-14T09:24:35.668Z</updated>
  <id>https://blog.wjc66.cn/</id>
  
  <author>
    <name>w-klover</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pgp加解密和生成密钥</title>
    <link href="https://blog.wjc66.cn/pgp%E5%8A%A0%E8%A7%A3%E5%AF%86%E5%92%8C%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5/"/>
    <id>https://blog.wjc66.cn/pgp%E5%8A%A0%E8%A7%A3%E5%AF%86%E5%92%8C%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5/</id>
    <published>2024-03-14T09:22:43.000Z</published>
    <updated>2024-03-14T09:24:35.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>GPG, 或 GnuPG (GNU Privacy Guard) 是一个遵照 OpenPGP 协议的用于加密、数字签名以及认证的软件。它与 PGP (Pretty Good Privacy) 的区别是它是开源的，而 PGP 则是 Symantec 公司的专有软件。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcpg-jdk18on<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.77<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码使用"><a href="#代码使用" class="headerlink" title="代码使用"></a>代码使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成公私钥</span></span><br><span class="line">PgpKeyDTO generate = PgpUtil.generate(<span class="string">"123456"</span>, <span class="string">"123@qq.com"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密</span></span><br><span class="line"> String testMessage = PgpUtil.encrypt(<span class="string">"test message"</span>, <span class="keyword">this</span>.publicKey);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line">  String decrypt = PgpUtil.decrypt(message, <span class="keyword">this</span>.privateKey, <span class="keyword">this</span>.passphrase);</span><br></pre></td></tr></table></figure><p><a href="https://github.com/klover2/java-demo/blob/master/pgp-demo/src/test/java/com/klover/pgp/PgpUtilTest.java" target="_blank" rel="external nofollow noopener noreferrer">代码示例</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://medium.com/@kthsingh.ms/encrypt-and-decrypt-anything-bytes-files-streams-with-pgp-using-bouncy-castle-and-java-ad335ae9f747" target="_blank" rel="external nofollow noopener noreferrer">Encrypt and decrypt anything (bytes/files/streams) with PGP using bouncy castle and java</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;GPG, 或 GnuPG (GNU Privacy Guard) 是一个遵照 OpenPGP 协议的用于加密、数字签名以及认证的软件。它与 
      
    
    </summary>
    
    
    
      <category term="crypto" scheme="https://blog.wjc66.cn/tags/crypto/"/>
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
      <category term="pgp" scheme="https://blog.wjc66.cn/tags/pgp/"/>
    
  </entry>
  
  <entry>
    <title>使用STS临时访问凭证访问OSS</title>
    <link href="https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8STS%E4%B8%B4%E6%97%B6%E8%AE%BF%E9%97%AE%E5%87%AD%E8%AF%81%E8%AE%BF%E9%97%AEOSS/"/>
    <id>https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8STS%E4%B8%B4%E6%97%B6%E8%AE%BF%E9%97%AE%E5%87%AD%E8%AF%81%E8%AE%BF%E9%97%AEOSS/</id>
    <published>2023-09-21T08:30:47.000Z</published>
    <updated>2023-09-21T08:31:57.939Z</updated>
    
    <content type="html"><![CDATA[<p>todo</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://help.aliyun.com/zh/oss/developer-reference/use-temporary-access-credentials-provided-by-sts-to-access-oss?spm=a2c4g.11186623.4.1.3baf297alQfiKs&scm=20140722.H_100624._.ID_100624-OR_rec-V_1" target="_blank" rel="external nofollow noopener noreferrer">STS 临时访问凭证访问 OSS</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;todo&lt;/p&gt;
&lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://help.aliyun.com/zh/oss/developer-referenc
      
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="STS" scheme="https://blog.wjc66.cn/tags/STS/"/>
    
  </entry>
  
  <entry>
    <title>注册美区苹果账号</title>
    <link href="https://blog.wjc66.cn/%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B4%A6%E5%8F%B7/"/>
    <id>https://blog.wjc66.cn/%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B4%A6%E5%8F%B7/</id>
    <published>2023-09-21T08:29:24.000Z</published>
    <updated>2023-09-21T08:30:13.026Z</updated>
    
    <content type="html"><![CDATA[<p>链接 &gt; <a href="https://github.com/getlantern/lantern/wiki/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B4%A6%E5%8F%B7" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/getlantern/lantern/wiki/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B4%A6%E5%8F%B7</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;链接 &amp;gt; &lt;a href=&quot;https://github.com/getlantern/lantern/wiki/%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8C%E7%BE%8E%E5%8C%BA%E8%8B%B9%E6%9E%9C%E8%B
      
    
    </summary>
    
    
    
      <category term="other" scheme="https://blog.wjc66.cn/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>在PostgreSQL中创建只读用户</title>
    <link href="https://blog.wjc66.cn/%E5%9C%A8PostgreSQL%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%8F%AA%E8%AF%BB%E7%94%A8%E6%88%B7/"/>
    <id>https://blog.wjc66.cn/%E5%9C%A8PostgreSQL%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%8F%AA%E8%AF%BB%E7%94%A8%E6%88%B7/</id>
    <published>2023-09-21T08:25:08.000Z</published>
    <updated>2023-09-21T08:28:36.163Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建只读用户"><a href="#创建只读用户" class="headerlink" title="创建只读用户"></a>创建只读用户</h2><blockquote><p>CREATE USER readonly_user WITH PASSWORD ‘password’;</p></blockquote><p>这条命令会创建一个名为 readonly_user 的用户，并设置用户的密码为 ‘password’。请务必将 ‘password’ 替换为实际的密码。</p><h2 id="进入你需要赋予权限的数据库-授予只读权限"><a href="#进入你需要赋予权限的数据库-授予只读权限" class="headerlink" title="进入你需要赋予权限的数据库 授予只读权限"></a>进入你需要赋予权限的数据库 授予只读权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CONNECT</span> <span class="keyword">ON</span> <span class="keyword">DATABASE</span> <span class="keyword">database</span> <span class="keyword">TO</span> readonly_user;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">USAGE</span> <span class="keyword">ON</span> <span class="keyword">SCHEMA</span> <span class="keyword">public</span> <span class="keyword">TO</span> readonly_user;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> <span class="keyword">ALL</span> <span class="keyword">TABLES</span> <span class="keyword">IN</span> <span class="keyword">SCHEMA</span> <span class="keyword">public</span> <span class="keyword">TO</span> readonly_user;</span><br></pre></td></tr></table></figure><p>其中，database 是要授予权限的数据库名称。</p><p>第一条命令 GRANT CONNECT ON DATABASE database TO readonly_user; 授予用户连接数据库的权限。</p><p>第二条命令 GRANT USAGE ON SCHEMA public TO readonly_user; 授予用户对数据库中公共模式的使用权限。</p><p>第三条命令 GRANT SELECT ON ALL TABLES IN SCHEMA public TO readonly_user; 授予用户对数据库中公共模式下所有表的只读权限。</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://deepinout.com/sqlite/sqlite-questions/89_postgresql_how_do_you_create_a_readonly_user_in_postgresql.html" target="_blank" rel="external nofollow noopener noreferrer">PostgreSQL 如何在 PostgreSQL 中创建只读用户</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建只读用户&quot;&gt;&lt;a href=&quot;#创建只读用户&quot; class=&quot;headerlink&quot; title=&quot;创建只读用户&quot;&gt;&lt;/a&gt;创建只读用户&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;CREATE USER readonly_user WITH PASSWORD ‘
      
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>nodejs中google授权登录</title>
    <link href="https://blog.wjc66.cn/nodejs%E4%B8%ADgoogle%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95/"/>
    <id>https://blog.wjc66.cn/nodejs%E4%B8%ADgoogle%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95/</id>
    <published>2023-09-21T07:26:17.000Z</published>
    <updated>2023-09-21T08:26:39.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="google-授权配置"><a href="#google-授权配置" class="headerlink" title="google 授权配置"></a>google 授权配置</h2><p>创建项目 &gt;&gt; 在凭据页面创建 OAuth 2.0 客户端 ID &gt;&gt; 配置 (已获授权的重定向 URI) &gt;&gt; 测试完成 在 OAuth 同意屏幕 发布正式版</p><h2 id="授权跳转连接"><a href="#授权跳转连接" class="headerlink" title="授权跳转连接"></a>授权跳转连接</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> url = <span class="string">`https://accounts.google.com/o/oauth2/v2/auth?scope=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(</span></span></span><br><span class="line"><span class="string"><span class="subst">  <span class="string">"https://www.googleapis.com/auth/userinfo.email"</span></span></span></span><br><span class="line"><span class="string"><span class="subst">)&#125;</span>&amp;include_granted_scopes=true&amp;</span></span><br><span class="line"><span class="string">response_type=token&amp;state=1234&amp;redirect_uri=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(</span></span></span><br><span class="line"><span class="string"><span class="subst">  <span class="string">"&lt;跳转连接 需要在谷歌配置&gt;"</span></span></span></span><br><span class="line"><span class="string"><span class="subst">)&#125;</span>&amp;client_id=client_id`</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(url);</span><br></pre></td></tr></table></figure><h2 id="授权成功后跳转链接如下"><a href="#授权成功后跳转链接如下" class="headerlink" title="授权成功后跳转链接如下"></a>授权成功后跳转链接如下</h2><blockquote><p>(跳转连接 需要在谷歌配置)#state=1234&amp;access_token=<access_token>&amp;token_type=Bearer&amp;expires_in=3599&amp;scope=email%20<a href="https://www.googleapis.com/auth/userinfo.email%20https://www.googleapis.com/auth/drive.metadata.readonly%20openid&amp;authuser=0&amp;prompt=none" target="_blank" rel="external nofollow noopener noreferrer">https://www.googleapis.com/auth/userinfo.email%20https://www.googleapis.com/auth/drive.metadata.readonly%20openid&amp;authuser=0&amp;prompt=none</a></access_token></p></blockquote><h2 id="获取用户信息"><a href="#获取用户信息" class="headerlink" title="获取用户信息"></a>获取用户信息</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> superagent <span class="keyword">from</span> <span class="string">"superagent"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="string">`https://www.googleapis.com/oauth2/v1/userinfo`</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> superagent.get(url, &#123; access_token: token &#125;).set(&#123;</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取客户邮箱 和id 头像</span></span><br><span class="line">  <span class="keyword">return</span> res.body;</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://developers.google.cn/identity/protocols/oauth2/javascript-implicit-flow?hl=zh-cn" target="_blank" rel="external nofollow noopener noreferrer">适用于客户端 Web 应用的 OAuth 2.0</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;google-授权配置&quot;&gt;&lt;a href=&quot;#google-授权配置&quot; class=&quot;headerlink&quot; title=&quot;google 授权配置&quot;&gt;&lt;/a&gt;google 授权配置&lt;/h2&gt;&lt;p&gt;创建项目 &amp;gt;&amp;gt; 在凭据页面创建 OAuth 2.0 客户
      
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="google" scheme="https://blog.wjc66.cn/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>nodejs中google-authenticator使用</title>
    <link href="https://blog.wjc66.cn/nodejs%E4%B8%ADgoogle-authenticator%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/nodejs%E4%B8%ADgoogle-authenticator%E4%BD%BF%E7%94%A8/</id>
    <published>2023-09-21T07:19:28.000Z</published>
    <updated>2023-09-21T07:26:48.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GA-6-为验证码"><a href="#GA-6-为验证码" class="headerlink" title="GA 6 为验证码"></a>GA 6 为验证码</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; authenticator &#125; <span class="keyword">from</span> <span class="string">"otplib"</span>;</span><br><span class="line"></span><br><span class="line">authenticator.options = &#123;</span><br><span class="line">  epoch: <span class="built_in">Date</span>.now() - <span class="number">30</span> * <span class="number">1000</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> secret_key = authenticator.generateSecret();</span><br><span class="line"><span class="built_in">console</span>.log(authenticator.generate(secret_key));</span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://github.com/google/google-authenticator/wiki/Key-Uri-Format" target="_blank" rel="external nofollow noopener noreferrer">google-authenticator</a><br><a href="https://www.5axxw.com/wiki/content/6cwktj" target="_blank" rel="external nofollow noopener noreferrer">Otplib</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GA-6-为验证码&quot;&gt;&lt;a href=&quot;#GA-6-为验证码&quot; class=&quot;headerlink&quot; title=&quot;GA 6 为验证码&quot;&gt;&lt;/a&gt;GA 6 为验证码&lt;/h2&gt;&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="google" scheme="https://blog.wjc66.cn/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>node版本管理工具nvm</title>
    <link href="https://blog.wjc66.cn/node%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nvm/"/>
    <id>https://blog.wjc66.cn/node%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nvm/</id>
    <published>2023-09-21T07:12:16.000Z</published>
    <updated>2023-09-21T07:20:12.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-Centos-8-环境下安装-nvm"><a href="#Linux-Centos-8-环境下安装-nvm" class="headerlink" title="Linux Centos 8 环境下安装 nvm"></a>Linux Centos 8 环境下安装 nvm</h2><p>官网：<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/nvm-sh/nvm</a></p><h3 id="下载-nvm-sh-文件"><a href="#下载-nvm-sh-文件" class="headerlink" title="下载 nvm.sh 文件"></a>下载 nvm.sh 文件</h3><p>方式一：命令行工具输入，通过 curl 工具下载</p><blockquote><p>curl -o- <a href="https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh" target="_blank" rel="external nofollow noopener noreferrer">https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh</a> | bash</p></blockquote><p>方式二：命令行工具输入，通过 wget 工具下载</p><blockquote><p>wget -qO- <a href="https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh" target="_blank" rel="external nofollow noopener noreferrer">https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh</a> | bash</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>这将在主目录下创建一个.nvm 目录。nvm 保留自己的二进制文件和所有其他所需文件。然后在用户.bashrc 文件中设置环境。您需要通过运行以下命令来加载此环境以设置所需的配置：</p><blockquote><p>source ~/.bashrc</p></blockquote><h2 id="windows-环境下安装-nvm"><a href="#windows-环境下安装-nvm" class="headerlink" title="windows 环境下安装 nvm"></a>windows 环境下安装 nvm</h2><h3 id="下载指定版本安装包"><a href="#下载指定版本安装包" class="headerlink" title="下载指定版本安装包"></a>下载指定版本安装包</h3><blockquote><p><a href="https://github.com/nvm-sh/nvm/releases" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/nvm-sh/nvm/releases</a></p></blockquote><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://yuencode.cn/2023/01/03/Linux-Centos-8-%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85nvm/" target="_blank" rel="external nofollow noopener noreferrer">Linux Centos 8 环境下安装 nvm</a><br><a href="https://blog.csdn.net/baidu_30506559/article/details/127379924" target="_blank" rel="external nofollow noopener noreferrer">nvm 安装及基础命令</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-Centos-8-环境下安装-nvm&quot;&gt;&lt;a href=&quot;#Linux-Centos-8-环境下安装-nvm&quot; class=&quot;headerlink&quot; title=&quot;Linux Centos 8 环境下安装 nvm&quot;&gt;&lt;/a&gt;Linux Centos 8
      
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="nvm" scheme="https://blog.wjc66.cn/tags/nvm/"/>
    
  </entry>
  
  <entry>
    <title>IDEA:java:无效的源发行版：14</title>
    <link href="https://blog.wjc66.cn/IDEA-java-%E6%97%A0%E6%95%88%E7%9A%84%E6%BA%90%E5%8F%91%E8%A1%8C%E7%89%88%EF%BC%9A14/"/>
    <id>https://blog.wjc66.cn/IDEA-java-%E6%97%A0%E6%95%88%E7%9A%84%E6%BA%90%E5%8F%91%E8%A1%8C%E7%89%88%EF%BC%9A14/</id>
    <published>2023-07-14T03:41:00.000Z</published>
    <updated>2023-07-14T03:42:53.527Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>用 IDEA 编写 sdk 代码运行后报如下错误：<br><code>警告: 源发行版 14 需要目标发行版 14</code></p><h2 id="问题原因："><a href="#问题原因：" class="headerlink" title="问题原因："></a>问题原因：</h2><p>出现该问题的原因是项目 Project 当中的 jdk 与电脑当中的 jdk 版本不一致造成的。</p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>修改 IDEA 当中的 Project 项目的 jdk 版本</p><ol><li>修改 Project 的 SDK 版本<br><img src="https://img-blog.csdnimg.cn/c7c4e3084a3348bfadeab5bd23b5a010.png" alt="在这里插入图片描述"></li><li>修改 Module 模块的 Language Level<br><img src="https://img-blog.csdnimg.cn/baf4d6b24a454decbe98c5a860783a2b.png" alt="在这里插入图片描述"></li><li>修改 Module 模块中的 Module SDK<br><img src="https://img-blog.csdnimg.cn/12cf70053f044e1e9ba6133776459ca2.png" alt></li><li>设置 plaform settings Sdks<br><img src="https://img-blog.csdnimg.cn/0bf3e0671c5c499b9da89c7e3773691d.png" alt="在这里插入图片描述"></li><li>找到 Java Complier，修改 byte code version，使其版本与 sdk 版本保持一致<br><img src="https://img-blog.csdnimg.cn/a480b77b9e774f1891bd335b0385703c.png" alt="在这里插入图片描述"><br>修改过后，再次编译运行就没有问题了！</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h2&gt;&lt;p&gt;用 IDEA 编写 sdk 代码运行后报如下错误：&lt;br&gt;&lt;code&gt;警告: 源发行版 14 需要目标发行版 14&lt;
      
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>postgresql敏感信息处理</title>
    <link href="https://blog.wjc66.cn/postgresql%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E5%A4%84%E7%90%86/"/>
    <id>https://blog.wjc66.cn/postgresql%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E5%A4%84%E7%90%86/</id>
    <published>2023-05-11T11:55:22.000Z</published>
    <updated>2023-05-11T12:04:46.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>对手机号 和 邮箱进行脱敏处理</p><h2 id="处理方式"><a href="#处理方式" class="headerlink" title="处理方式"></a>处理方式</h2><p>使用数据库<code>regexp_replace</code>函数进行数据处理</p><a id="more"></a><h2 id="regexp-replace函数介绍"><a href="#regexp-replace函数介绍" class="headerlink" title="regexp_replace函数介绍"></a><code>regexp_replace</code>函数介绍</h2><p>regexp_replace(source, pattern, replace_string, occurrence)<br>参数说明：</p><ol><li>source: string 类型，要替换的原始字符串。</li><li>pattern: string 类型常量，要匹配的正则模式，pattern 为空串时抛异常。</li><li>replace_string:string，将匹配的 pattern 替换成的字符串。</li><li>occurrence: bigint 类型常量，必须大于等于 0，<br>大于 0：表示将第几次匹配替换成 replace_string，<br>等于 0：表示替换掉所有的匹配子串。<br>其它类型或小于 0 抛异常。</li></ol><p>返回值：<br>将 source 字符串中匹配 pattern 的子串替换成指定字符串后返回，当输入 source, pattern, occurrence 参数为 NULL 时返回 NULL，若 replace_string 为 NULL 且 pattern 有匹配，返回 NULL，replace_string 为 NULL 但 pattern 不匹配，则返回原串。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> users: User[] = <span class="keyword">await</span> <span class="keyword">this</span>.userRepo</span><br><span class="line">  .createQueryBuilder()</span><br><span class="line">  .select(<span class="string">'"id"'</span>)</span><br><span class="line">  .addSelect(<span class="string">"nickname"</span>)</span><br><span class="line">  .addSelect(<span class="string">`REGEXP_REPLACE(phone, '(^.&#123;3&#125;).*(\\d&#123;4&#125;)$', '\\1**\\2')`</span>, <span class="string">"phone"</span>) <span class="comment">// 格式 +86**4352</span></span><br><span class="line">  .addSelect(<span class="string">`REGEXP_REPLACE(email, '(^.&#123;2&#125;).*@(.*)', '\\1**@\\2')`</span>, <span class="string">"email"</span>) <span class="comment">// 格式 fe**@qq.com</span></span><br><span class="line">  .where(&#123; id: <span class="string">"c66d2386-bcfb-420d-91be-ca6af07415d2"</span> &#125;)</span><br><span class="line">  .getRawMany();</span><br></pre></td></tr></table></figure><p>生成的 sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">"id"</span>, nickname, REGEXP_REPLACE(phone, <span class="string">'(^.&#123;3&#125;).*(\d&#123;4&#125;)$'</span>, <span class="string">'\1**\2'</span>) <span class="keyword">AS</span> <span class="string">"phone"</span>, REGEXP_REPLACE(email, <span class="string">'(^.&#123;2&#125;).*@(.*)'</span>, <span class="string">'\1**@\2'</span>) <span class="keyword">AS</span> <span class="string">"email"</span> <span class="keyword">FROM</span> <span class="string">"user"</span> <span class="string">"User"</span> <span class="keyword">WHERE</span> ( <span class="string">"User"</span>.<span class="string">"id"</span> = <span class="string">'c66d2386-bcfb-420d-91be-ca6af07415d2'</span> ) <span class="keyword">AND</span> ( <span class="string">"User"</span>.<span class="string">"deleteTime"</span> <span class="keyword">IS</span> <span class="literal">NULL</span> )</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;对手机号 和 邮箱进行脱敏处理&lt;/p&gt;
&lt;h2 id=&quot;处理方式&quot;&gt;&lt;a href=&quot;#处理方式&quot; class=&quot;headerlink&quot; title=&quot;处理方式&quot;&gt;&lt;/a&gt;处理方式&lt;/h2&gt;&lt;p&gt;使用数据库&lt;code&gt;regexp_replace&lt;/code&gt;函数进行数据处理&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
      <category term="typeorm" scheme="https://blog.wjc66.cn/tags/typeorm/"/>
    
  </entry>
  
  <entry>
    <title>国密sm2加密</title>
    <link href="https://blog.wjc66.cn/%E5%9B%BD%E5%AF%86sm2%E5%8A%A0%E5%AF%86/"/>
    <id>https://blog.wjc66.cn/%E5%9B%BD%E5%AF%86sm2%E5%8A%A0%E5%AF%86/</id>
    <published>2023-04-26T12:22:06.000Z</published>
    <updated>2023-04-26T12:43:22.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SM2-国密算法-，加密模式-C1C3C2"><a href="#SM2-国密算法-，加密模式-C1C3C2" class="headerlink" title="SM2(国密算法)，加密模式 C1C3C2"></a>SM2(国密算法)，加密模式 C1C3C2</h2><p>SM2 为非对称加密，基于 ECC。该算法已公开。由于该算法基于 ECC，故其签名速度与秘钥生成速度都快于 RSA。ECC 256 位（SM2 采用的就是 ECC 256 位的一种）安全强度比 RSA 2048 位高，但运算速度快于 RSA。<br>旧标准的加密排序 C1C2C3 新标准 C1C3C2，C1 为 65 字节第 1 字节为压缩标识，这里固定为 0x04，后面 64 字节为 xy 分量各 32 字节。C3 为 32 字节。C2 长度与原文一致。</p><blockquote><p>公钥：049cbf6df92258b385b82844d29039183d98e205726bcecd71b40ded26e717d3ccb9132685432eaafbcb58683c3d303a1e79137447231f8db33226b24893fcd429</p></blockquote><blockquote><p>私钥：6c4a9b2d44704400552b4b90c39c5bca3e5c0ac1b91324e3d0579eebf24830bd</p></blockquote><a id="more"></a><h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><ol><li>添加包</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;bcpkix-jdk15on&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.70&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>java 加密</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crypto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.asn1.gm.GMNamedCurves;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.asn1.x9.X9ECParameters;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.InvalidCipherTextException;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.engines.SM2Engine;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.params.ECDomainParameters;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.params.ECPublicKeyParameters;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.crypto.params.ParametersWithRandom;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.math.ec.ECPoint;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.util.encoders.Base64;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.util.encoders.Hex;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> klover</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> SM2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/4/25 12:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SM2</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> InvalidCipherTextException </span>&#123;</span><br><span class="line">        <span class="comment">// 加密代码示例</span></span><br><span class="line">        <span class="keyword">final</span> String SPEC_NAME = <span class="string">"sm2p256v1"</span>;</span><br><span class="line">        <span class="keyword">final</span> X9ECParameters x9ECParameters = GMNamedCurves.getByName(SPEC_NAME);</span><br><span class="line">        <span class="keyword">final</span> ECDomainParameters ecDomainParameters = <span class="keyword">new</span> ECDomainParameters(x9ECParameters.getCurve(), x9ECParameters.getG(), x9ECParameters.getN());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 公钥数据</span></span><br><span class="line">        String encodedPub = <span class="string">"049cbf6df92258b385b82844d29039183d98e205726bcecd71b40ded26e717d3ccb9132685432eaafbcb58683c3d303a1e79137447231f8db33226b24893fcd429"</span>;</span><br><span class="line">        String data = <span class="string">"6220012345670001"</span>; <span class="comment">// 待加密数据</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] pointBytes = Hex.decode(encodedPub);</span><br><span class="line">        ECPoint q = x9ECParameters.getCurve().decodePoint(pointBytes);</span><br><span class="line">        ECPublicKeyParameters ecPublicKeyParameters = <span class="keyword">new</span> ECPublicKeyParameters(q, ecDomainParameters);</span><br><span class="line">        <span class="comment">// 采用 C1 || C3 || C2 的模式</span></span><br><span class="line">        SM2Engine sm2Engine = <span class="keyword">new</span> SM2Engine(SM2Engine.Mode.C1C3C2);</span><br><span class="line">        <span class="comment">// 自定义固定签名</span></span><br><span class="line"><span class="comment">//        SecureRandom secureRandom = new SecureRandom(encodedPub.getBytes(StandardCharsets.UTF_8));</span></span><br><span class="line"><span class="comment">//        SecureRandom random = CryptoServicesRegistrar.getSecureRandom(secureRandom);</span></span><br><span class="line"><span class="comment">//        sm2Engine.init(true, new ParametersWithRandom(ecPublicKeyParameters, random));</span></span><br><span class="line">        <span class="comment">// 动态</span></span><br><span class="line">        sm2Engine.init(<span class="keyword">true</span>, <span class="keyword">new</span> ParametersWithRandom(ecPublicKeyParameters));</span><br><span class="line">        <span class="keyword">byte</span>[] dataBytes = data.getBytes();</span><br><span class="line">        <span class="keyword">byte</span>[] cipherBytes = sm2Engine.processBlock(dataBytes, <span class="number">0</span>, dataBytes.length);</span><br><span class="line">        String encryptedData = <span class="keyword">new</span> String(Base64.encode(cipherBytes));</span><br><span class="line">        System.out.println(encryptedData);</span><br><span class="line">        <span class="comment">// 加密结果示例: BB5SdLKsA2dqJTeXUFpRf9M6htKBrfYOTlaVUFHp340wXQ6quFU3fT9PSw8Hf6s1QyqMizJYjnvl/Jsqn91Zr6KXXhZUdeRctUBtvkUOFB6QYeHLa+dk5mQTOhG0cJGaOWd3tNF/3pM7w0lk3snC6X0=</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="node"><a href="#node" class="headerlink" title="node"></a>node</h3><ol><li>添加包</li></ol><blockquote><p>gmsm-sm2js</p></blockquote><ol start="2"><li>使用</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> SM2 <span class="keyword">from</span> <span class="string">"gmsm-sm2js"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 加密方式 SM2 sm2p256v1</span></span><br><span class="line"><span class="comment"> * @publicKey 加密公钥</span></span><br><span class="line"><span class="comment"> * @msg 原文</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> sm2p256v1Encrypt = <span class="function">(<span class="params">publicKey: <span class="built_in">string</span>, msg: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> encrypt = SM2.encrypt(publicKey, msg);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Buffer.from(encrypt, <span class="string">"hex"</span>).toString(<span class="string">"base64"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解密方式 SM2 sm2p256v1</span></span><br><span class="line"><span class="comment"> * @publicKey 解密私钥</span></span><br><span class="line"><span class="comment"> * @msg 密文</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> sm2p256v1Decrypt = <span class="function">(<span class="params">privateKey: <span class="built_in">string</span>, msg: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> decrypt = SM2.decrypt(privateKey, Buffer.from(msg, <span class="string">"base64"</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Buffer.from(decrypt, <span class="string">"hex"</span>).toString(<span class="string">"utf8"</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> privateKey =</span><br><span class="line">  <span class="string">"6c4a9b2d44704400552b4b90c39c5bca3e5c0ac1b91324e3d0579eebf24830bd"</span>;</span><br><span class="line"><span class="keyword">const</span> publicKey =</span><br><span class="line">  <span class="string">"049cbf6df92258b385b82844d29039183d98e205726bcecd71b40ded26e717d3ccb9132685432eaafbcb58683c3d303a1e79137447231f8db33226b24893fcd429"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> msgString = <span class="string">"6220012345670001"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> encryptData = sm2p256v1Encrypt(publicKey, msgString);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(encryptData);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sm2p256v1Decrypt(privateKey, encryptData));</span><br></pre></td></tr></table></figure><h3 id="node-解密-java-加密的值"><a href="#node-解密-java-加密的值" class="headerlink" title="node 解密 java 加密的值"></a>node 解密 java 加密的值</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line">  sm2p256v1Decrypt(</span><br><span class="line">    privateKey,</span><br><span class="line">    <span class="string">"BB5SdLKsA2dqJTeXUFpRf9M6htKBrfYOTlaVUFHp340wXQ6quFU3fT9PSw8Hf6s1QyqMizJYjnvl/Jsqn91Zr6KXXhZUdeRctUBtvkUOFB6QYeHLa+dk5mQTOhG0cJGaOWd3tNF/3pM7w0lk3snC6X0="</span></span><br><span class="line">  )</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SM2-国密算法-，加密模式-C1C3C2&quot;&gt;&lt;a href=&quot;#SM2-国密算法-，加密模式-C1C3C2&quot; class=&quot;headerlink&quot; title=&quot;SM2(国密算法)，加密模式 C1C3C2&quot;&gt;&lt;/a&gt;SM2(国密算法)，加密模式 C1C3C2&lt;/h2&gt;&lt;p&gt;SM2 为非对称加密，基于 ECC。该算法已公开。由于该算法基于 ECC，故其签名速度与秘钥生成速度都快于 RSA。ECC 256 位（SM2 采用的就是 ECC 256 位的一种）安全强度比 RSA 2048 位高，但运算速度快于 RSA。&lt;br&gt;旧标准的加密排序 C1C2C3 新标准 C1C3C2，C1 为 65 字节第 1 字节为压缩标识，这里固定为 0x04，后面 64 字节为 xy 分量各 32 字节。C3 为 32 字节。C2 长度与原文一致。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;公钥：049cbf6df92258b385b82844d29039183d98e205726bcecd71b40ded26e717d3ccb9132685432eaafbcb58683c3d303a1e79137447231f8db33226b24893fcd429&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;私钥：6c4a9b2d44704400552b4b90c39c5bca3e5c0ac1b91324e3d0579eebf24830bd&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="crypto" scheme="https://blog.wjc66.cn/tags/crypto/"/>
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>发布一个golang的工具包到github</title>
    <link href="https://blog.wjc66.cn/%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAgolang%E7%9A%84%E5%B7%A5%E5%85%B7%E5%8C%85%E5%88%B0github/"/>
    <id>https://blog.wjc66.cn/%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAgolang%E7%9A%84%E5%B7%A5%E5%85%B7%E5%8C%85%E5%88%B0github/</id>
    <published>2022-10-26T07:54:10.000Z</published>
    <updated>2022-10-26T08:21:41.395Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Go-语言环境安装"><a href="#Go-语言环境安装" class="headerlink" title="Go 语言环境安装"></a>Go 语言环境安装</h2><p>Go 语言支持以下系统：</p><ul><li>Linux</li><li>FreeBSD</li><li>Mac OS X（也称为 Darwin）</li><li>Windows<br>安装包下载地址为：<a href="https://golang.org/dl/。" target="_blank" rel="external nofollow noopener noreferrer">https://golang.org/dl/。</a></li></ul><p>如果打不开可以使用这个地址：<a href="https://golang.google.cn/dl/。" target="_blank" rel="external nofollow noopener noreferrer">https://golang.google.cn/dl/。</a></p><a id="more"></a><h2 id="新建空项目"><a href="#新建空项目" class="headerlink" title="新建空项目"></a>新建空项目</h2><ul><li><p>在 github 上新建一个公开的项目，比如我创建一个 qbit-go-sdk 的项目</p></li><li><p>将项目克隆到本地来</p></li><li><p>进入项目根目录，使用<code>go mod</code>初始化项目</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">go mod init github.com/klover2/qbit-go-sdk</span><br></pre></td></tr></table></figure><ul><li>初始化后的 go.mod 的文件如下，如果你的 module 不是你 github 的项目地址你要修改过来</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">module github.com/klover2/qbit-go-sdk</span><br><span class="line"></span><br><span class="line">go 1.16</span><br></pre></td></tr></table></figure><ul><li>随便写一些东西发布到 githup 上</li></ul><h2 id="将-github-上的工程转换为别人可以下载的依赖包"><a href="#将-github-上的工程转换为别人可以下载的依赖包" class="headerlink" title="将 github 上的工程转换为别人可以下载的依赖包"></a>将 github 上的工程转换为别人可以下载的依赖包</h2><ol><li>本地使用 git 命令创建一个 tag</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git tag -a tag名 -m <span class="string">'创建一个版本'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># eg</span></span><br><span class="line"></span><br><span class="line">git tag -a v1.0.0 -m <span class="string">'创建一个项目'</span></span><br></pre></td></tr></table></figure><ol start="2"><li>将 tag 提交到 github 上</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git push origin tag名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># eg</span></span><br><span class="line"></span><br><span class="line">git push origin v1.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次性提交本地全部的tag</span></span><br><span class="line"></span><br><span class="line">git push origin --tags</span><br></pre></td></tr></table></figure><h2 id="直接在-github-上查看是否已经提交成功-tag"><a href="#直接在-github-上查看是否已经提交成功-tag" class="headerlink" title="直接在 github 上查看是否已经提交成功 tag"></a>直接在 github 上查看是否已经提交成功 tag</h2><p><img src="https://img-blog.csdnimg.cn/ae6769f561a44c4c94abab5df257a55b.png" alt="在这里插入图片描述"></p><h2 id="创建对应的发布"><a href="#创建对应的发布" class="headerlink" title="创建对应的发布"></a>创建对应的发布</h2><p><img src="https://img-blog.csdnimg.cn/5dce1126bf7e4c6f982f6bf5626e1d04.png" alt="在这里插入图片描述"></p><h2 id="查看自己发布的包"><a href="#查看自己发布的包" class="headerlink" title="查看自己发布的包"></a>查看自己发布的包</h2><p><a href="https://pkg.go.dev/" target="_blank" rel="external nofollow noopener noreferrer">pkg.go</a> 同步有点慢，不用在乎，上传到 githup 上就可以用了</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><code>go get github.com/klover2/qbit-go-sdk</code><br><code>go get vendor</code> 把代码拉到本地</p><h2 id="更新包版本"><a href="#更新包版本" class="headerlink" title="更新包版本"></a>更新包版本</h2><p>直接修改<code>go.mod</code> 对应包的版本<br><code>go mod tidy</code> 更新包<br><code>go get vendor</code> 把代码拉到本地</p><h2 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>打开你的 PowerShell 并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; <span class="variable">$env</span>:GO111MODULE = <span class="string">"on"</span></span><br><span class="line">C:\&gt; <span class="variable">$env</span>:GOPROXY = <span class="string">"https://goproxy.cn"</span></span><br></pre></td></tr></table></figure><p>或者</p><ol><li>打开“开始”并搜索“env”</li><li>选择“编辑系统环境变量”</li><li>点击“环境变量…”按钮</li><li>在“&lt;你的用户名&gt; 的用户变量”章节下（上半部分）</li><li>点击“新建…”按钮</li><li>选择“变量名”输入框并输入“GO111MODULE”</li><li>选择“变量值”输入框并输入“on”</li><li>点击“确定”按钮</li><li>点击“新建…”按钮</li><li>选择“变量名”输入框并输入“GOPROXY”</li><li>选择“变量值”输入框并输入“<a href="https://goproxy.cn”" target="_blank" rel="external nofollow noopener noreferrer">https://goproxy.cn”</a></li><li>点击“确定”按钮</li></ol><h3 id="Go-1-13-及以上（推荐）"><a href="#Go-1-13-及以上（推荐）" class="headerlink" title="Go 1.13 及以上（推荐）"></a>Go 1.13 及以上（推荐）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ go env -w GO111MODULE=on</span><br><span class="line">$ go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><h3 id="macOS-或-Linux"><a href="#macOS-或-Linux" class="headerlink" title="macOS 或 Linux"></a>macOS 或 Linux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> GO111MODULE=on</span><br><span class="line">$ <span class="built_in">export</span> GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"export GO111MODULE=on"</span> &gt;&gt; ~/.profile</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"export GOPROXY=https://goproxy.cn"</span> &gt;&gt; ~/.profile</span><br><span class="line">$ <span class="built_in">source</span> ~/.profile</span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://goproxy.cn/" target="_blank" rel="external nofollow noopener noreferrer">配置代理</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Go-语言环境安装&quot;&gt;&lt;a href=&quot;#Go-语言环境安装&quot; class=&quot;headerlink&quot; title=&quot;Go 语言环境安装&quot;&gt;&lt;/a&gt;Go 语言环境安装&lt;/h2&gt;&lt;p&gt;Go 语言支持以下系统：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;FreeBSD&lt;/li&gt;
&lt;li&gt;Mac OS X（也称为 Darwin）&lt;/li&gt;
&lt;li&gt;Windows&lt;br&gt;安装包下载地址为：&lt;a href=&quot;https://golang.org/dl/。&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://golang.org/dl/。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果打不开可以使用这个地址：&lt;a href=&quot;https://golang.google.cn/dl/。&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://golang.google.cn/dl/。&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="golang" scheme="https://blog.wjc66.cn/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>pipenv命令的使用</title>
    <link href="https://blog.wjc66.cn/pipenv%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/pipenv%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2022-10-24T05:04:55.000Z</published>
    <updated>2022-10-24T05:07:52.299Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">pip install pipenv</span><br><span class="line"><span class="comment">#查看版本</span></span><br><span class="line">pipenv --version</span><br><span class="line"><span class="comment">#创建</span></span><br><span class="line"><span class="comment">#pipenv --python 3.8(可以不用)</span></span><br><span class="line"><span class="comment">#激活虚拟环境</span></span><br><span class="line">pipenv shell</span><br><span class="line"><span class="comment">#退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">安装开发扩展</span><br><span class="line">pipenv install --dev django</span><br><span class="line"><span class="comment">#安装生产环境</span></span><br><span class="line">pipenv install</span><br><span class="line"><span class="comment">#安装开发环境</span></span><br><span class="line">pipenv install --dev</span><br><span class="line"><span class="comment">#卸载包</span></span><br><span class="line">pipenv uninstall [package]</span><br><span class="line"><span class="comment">#查看创建虚拟机所在目录</span></span><br><span class="line">pipenv --venv全局切换版本pyenv global 3.6.4当前目录切换版本pyenv <span class="built_in">local</span> 3.6.4pipenv --three <span class="comment"># 初始化一个python3虚拟环境，如果想初始化pyhton2的虚拟环境，则使用pipenv --twopipenv --python 2.7.14删除环境(在pipfile所在目录执行)</span></span><br><span class="line">pipenv uninstall --all <span class="comment"># 卸载全部包</span></span><br><span class="line">pipenv --rm     <span class="comment"># 删除整个环境  不会删除pipfile</span></span><br></pre></td></tr></table></figure><h2 id="安装第三方库"><a href="#安装第三方库" class="headerlink" title="安装第三方库"></a>安装第三方库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装第三方库</span></span><br><span class="line">pipenv install [第三方库名]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看包的依赖结构</span></span><br><span class="line">pipenv graph</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看安装的包</span></span><br><span class="line">pip list</span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载包</span></span><br><span class="line">pipenv uninstall [第三方库名]</span><br><span class="line"></span><br><span class="line"><span class="comment">#退出虚拟环境</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除虚拟环境</span></span><br><span class="line">pipenv – – rm</span><br><span class="line"></span><br><span class="line"><span class="comment">#要更新所有的依赖项，使用命令 pipenv update</span></span><br><span class="line"><span class="comment">#使用 pipenv update &lt;pkg&gt; 命令升级指定的包</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果项目已经存在requirements.txt</span></span><br><span class="line">pipenv install -r requirements.txt</span><br></pre></td></tr></table></figure><h2 id="安装环境区分"><a href="#安装环境区分" class="headerlink" title="安装环境区分"></a>安装环境区分</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pipenv install</span><br><span class="line">–dev 安装Pipfile中 [default] 和 [devlop] 中的包</span><br><span class="line"></span><br><span class="line">–system 使用系统的 pip 命令而不是virtualenv的 pip 命令</span><br><span class="line"></span><br><span class="line">–ignore-pipfile 忽略 Pipfile 文件而直接安装 Pipfile.lock 中的包</span><br><span class="line"></span><br><span class="line">–ignore-lock 忽略 Pipfile.lock 文件而直接安装 Pipfile 中的包。此外，不会更新 Pipfile.lock 文件。</span><br><span class="line"></span><br><span class="line">pipenv uninstall</span><br><span class="line">–all 从虚拟环境中移除所有已安装的包，但 Pipfile.lock 文件不受影响</span><br><span class="line">–all-dev 从虚拟环境中卸载所有开发包，并从 Pipfile 文件中移除这些包</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
    
      <category term="python" scheme="https://blog.wjc66.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>封装代码成python包</title>
    <link href="https://blog.wjc66.cn/%E5%B0%81%E8%A3%85%E4%BB%A3%E7%A0%81%E6%88%90python%E5%8C%85/"/>
    <id>https://blog.wjc66.cn/%E5%B0%81%E8%A3%85%E4%BB%A3%E7%A0%81%E6%88%90python%E5%8C%85/</id>
    <published>2022-10-24T03:15:55.000Z</published>
    <updated>2022-10-24T03:40:56.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注册账户"><a href="#注册账户" class="headerlink" title="注册账户"></a>注册账户</h2><p>PyPI, Python Package Index,是 python 的正式第三方软件包的软件存储库。一些软件包管理器如 pip，就是默认从 PyPI 下载软件包</p><p>链接： <a href="https://pypi.org/" target="_blank" rel="external nofollow noopener noreferrer">https://pypi.org/</a></p><p>在 Pypi 中注册账号，并且需要激活邮箱</p><a id="more"></a><h2 id="更新-pip"><a href="#更新-pip" class="headerlink" title="更新 pip"></a>更新 pip</h2><p><code>python -m pip install --upgrade pip</code></p><h2 id="安装-pipenv"><a href="#安装-pipenv" class="headerlink" title="安装 pipenv"></a>安装 pipenv</h2><p><code>pip install pipenv</code></p><h2 id="使用-pyCharm-创建项目"><a href="#使用-pyCharm-创建项目" class="headerlink" title="使用 pyCharm 创建项目"></a>使用 pyCharm 创建项目</h2><p>选择 pipenv<br><img src="https://img-blog.csdnimg.cn/5aca5d0c3fba4d958f4b59d4bd5fec84.png" alt="在这里插入图片描述"><br>在当前项目目录执行 <code>pipenv install</code>,初始化后项目如下</p><p><img src="https://img-blog.csdnimg.cn/21bf61bd322644d4b5b246cbab0b632d.png" alt="在这里插入图片描述"></p><h2 id="创建包名-mypackage"><a href="#创建包名-mypackage" class="headerlink" title="创建包名 mypackage"></a>创建包名 mypackage</h2><p><code>注意</code>：包名尽量不要用驼峰和中划线做包名，不然容易出现找不到包名<br><img src="https://img-blog.csdnimg.cn/08aa097a6f1944858778b1defba75f0f.png" alt="在这里插入图片描述"></p><h2 id="创建-setup-py-用于编译包配置"><a href="#创建-setup-py-用于编译包配置" class="headerlink" title="创建 setup.py 用于编译包配置"></a>创建 setup.py 用于编译包配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> setuptools</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"README.md"</span>, <span class="string">"r"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    readme = f.read()</span><br><span class="line"></span><br><span class="line">requires = [</span><br><span class="line">    <span class="string">"requests&gt;=2.28.1"</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">setuptools.setup(</span><br><span class="line">    name=<span class="string">"mypackage"</span>,</span><br><span class="line">    version=<span class="string">"1.0.0"</span>,</span><br><span class="line">    keywords=[<span class="string">"关键词1"</span>, <span class="string">"关键词2"</span>, <span class="string">"关键词3"</span>],</span><br><span class="line">    author=<span class="string">"开发者"</span>,</span><br><span class="line">    author_email=<span class="string">"开发者邮箱"</span>,</span><br><span class="line">    description=<span class="string">"描述"</span>,</span><br><span class="line">    long_description=readme,</span><br><span class="line">    long_description_content_type=<span class="string">"text/markdown"</span>,</span><br><span class="line">    url=<span class="string">"项目githup地址"</span>,</span><br><span class="line">    packages=setuptools.find_packages(exclude=(<span class="string">'tests'</span>, <span class="string">'.pypirc'</span>)),</span><br><span class="line">    classifiers=[</span><br><span class="line">        <span class="string">"Programming Language :: Python :: 3"</span>,</span><br><span class="line">        <span class="string">"License :: OSI Approved :: Apache Software License"</span>,</span><br><span class="line">        <span class="string">"Operating System :: OS Independent"</span>,</span><br><span class="line">    ],</span><br><span class="line">    python_requires=<span class="string">'&gt;=3.7'</span>,</span><br><span class="line">    install_requires=requires,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>注意</code>：install_requires 是你当前包需要的外部引入，需要在这里声明，不然其他人用你当前包会出现缺少引入</p><h2 id="配置-pypi-密码"><a href="#配置-pypi-密码" class="headerlink" title="配置 pypi 密码"></a>配置 pypi 密码</h2><p>创建 <code>.pypirc</code> 防止你电脑的用户目录下：<code>C:\Users\klover</code>,因为 setup.py 上传指令会检查.pypirc 文件是否存在在路径 $HOME/.pypirc 中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[distutils]</span><br><span class="line">index-servers =</span><br><span class="line">    pypi</span><br><span class="line"></span><br><span class="line">[pypi]</span><br><span class="line">repository: &lt;repository-url&gt;</span><br><span class="line">username: &lt;username&gt;</span><br><span class="line">password: &lt;password&gt;</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译</span></span><br><span class="line"><span class="comment"># 执行当前命令需要移除 build dist mypackage.egg-info 三个文件夹连同里面的文件</span></span><br><span class="line"></span><br><span class="line">python setup.py sdist bdist_wheel</span><br></pre></td></tr></table></figure><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">twine upload dist/*</span><br></pre></td></tr></table></figure><p>上传成功就能在 pypi 上看见了</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://zhuanlan.zhihu.com/p/342682533" target="_blank" rel="external nofollow noopener noreferrer">Pypi 官方教程中文版：封装代码成 python 包</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;注册账户&quot;&gt;&lt;a href=&quot;#注册账户&quot; class=&quot;headerlink&quot; title=&quot;注册账户&quot;&gt;&lt;/a&gt;注册账户&lt;/h2&gt;&lt;p&gt;PyPI, Python Package Index,是 python 的正式第三方软件包的软件存储库。一些软件包管理器如 pip，就是默认从 PyPI 下载软件包&lt;/p&gt;
&lt;p&gt;链接： &lt;a href=&quot;https://pypi.org/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;https://pypi.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 Pypi 中注册账号，并且需要激活邮箱&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="python" scheme="https://blog.wjc66.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Jar上传到maven中央仓库</title>
    <link href="https://blog.wjc66.cn/Jar%E4%B8%8A%E4%BC%A0%E5%88%B0maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93/"/>
    <id>https://blog.wjc66.cn/Jar%E4%B8%8A%E4%BC%A0%E5%88%B0maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93/</id>
    <published>2022-10-17T10:29:26.000Z</published>
    <updated>2023-07-14T03:30:56.390Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>开发环境为：win11 + jdk8 + maven</p><h2 id="注册账户"><a href="#注册账户" class="headerlink" title="注册账户"></a>注册账户</h2><p><a href="https://issues.sonatype.org/secure/Signup!default.jspa" target="_blank" rel="external nofollow noopener noreferrer">Sign up for Jira - Sonatype JIRA</a><br>选择中文 比较好</p><p>如果未使用过 Sonatype 系统，需要先注册一个帐号。</p><ul><li>Email: 填写自己的邮箱帐号即可，在 Sonatype 上的相关操作，会通知到这个邮箱帐号来提醒你相关进度。</li><li>Full name: 填写联系人名称。</li><li>Username: 这个就是你在 Sonatype 的登录帐号了。</li><li>Password: 为登录密码，要求至少 8 位，并带有大小写字母和字符。</li></ul><a id="more"></a><h2 id="项目申请"><a href="#项目申请" class="headerlink" title="项目申请"></a>项目申请</h2><h3 id="创建工单"><a href="#创建工单" class="headerlink" title="创建工单"></a>创建工单</h3><p>可以理解为在 Sonatype 系统中申请一个自己的项目，以 Group Id 为单位，Group Id 支持域名地址和 Github 地址两种方式验证，大家可根据实际情况自行选择。申请后需要经过管理员对我们填写的 Group Id 所有权进行验证，审核通过后方可上传 jar 包。我们在页面顶部点击 Create 按钮来创建工单。</p><ul><li>Project: 项目类型。选择 Community Support - Open Source Project Repository Hosting (OSSRH)</li><li>Issue Type: 工单类型。选择 New Project</li><li>Summary: 填写 jar 包名称即可</li><li>Description: 选填项，写一些描述</li><li>Group Id: 填写项目的 Group Id，域名和 Github Group Id 两种方式下面分别介绍申请过程</li><li>Project URL: 填写项目主页，可以是托管地址，也可以是官网地址</li><li>SCM URL: 填写项目的 Git 地址<br><img src="https://img-blog.csdnimg.cn/7320f8f0f35e4d069fad0082c289a67a.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/5204dc640c6e442584af3cdc78eeebf6.png" alt="在这里插入图片描述"><br>按照图片中提示 在 githup 中创建名字为<code>OSSRH-85210</code>(每个人不一样)的空项目，同时把 project url 和 scm url 这两个地址改成你当前项目名称，然后就是等待审核。</li></ul><h3 id="审核通过"><a href="#审核通过" class="headerlink" title="审核通过"></a>审核通过</h3><p>当你收到如下图的回复 说明你就成功了<br><img src="https://img-blog.csdnimg.cn/8b04fa253c3d4fb99c0ef62683d6657d.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/159e7360235d47cea7e641caa7bbea2c.png" alt="在这里插入图片描述"></p><h2 id="GPG-签名"><a href="#GPG-签名" class="headerlink" title="GPG 签名"></a>GPG 签名</h2><p>GPG 的主要作用是生成密钥对，发布到 Maven 仓库中的所有文件都要使用 GPG 签名，以保障完整性。使用 Windows 的可以下载 gpg4win 地址：<a href="https://www.gpg4win.org/download.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.gpg4win.org/download.html</a> ，安装后执行 gpg –gen-key 命令新建密钥对。</p><p>执行命令后，需要输入 姓名 和 邮箱 还有 Passphase（证书密码），Passphase 需要记住，在我们使用证书的时候会要求我们输入密码。</p><p><img src="https://img-blog.csdnimg.cn/07483a7bc7244173bf44e1f8eb019889.png" alt="在这里插入图片描述"><br>执行完之后我们会得到上图中的 pub 串，接着我们执行以下命令将 pub 上传到 key 验证库(不成功多试几次)<br><code>gpg --keyserver hkp://keyserver.ubuntu.com:11371 --send-keys E89F2504BF0CE3337B26E45E485D1495DA08F9F6</code><br>查询是否成功<br><code>gpg --keyserver hkp://keyserver.ubuntu.com:11371 --recv-keys E89F2504BF0CE3337B26E45E485D1495DA08F9F6</code></p><p>获取 sign3 (后面 maven setting.xml 用得上)<br><code>gpg --list-signatures --keyid-format 0xshort</code><br><img src="https://img-blog.csdnimg.cn/d6ddfb5b492140d9bd2bc64c2baa6e12.png" alt="在这里插入图片描述"></p><h2 id="Maven-配置"><a href="#Maven-配置" class="headerlink" title="Maven 配置"></a>Maven 配置</h2><ul><li>在 Maven 全局配置文件 setting.xml 中配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">username</span>&gt;</span>sonatype 账户名称<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>sonatype 密码<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置 gpg 的账户密码，复制以下配置，修改为自己的密码后，添加到 setting.xml 文件中的</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">gpg.executable</span>&gt;</span>gpg<span class="tag">&lt;/<span class="name">gpg.executable</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">gpg.keyname</span>&gt;</span>上面你获取的sign3<span class="tag">&lt;/<span class="name">gpg.keyname</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">gpg.passphrase</span>&gt;</span>gpg 你设置的密码<span class="tag">&lt;/<span class="name">gpg.passphrase</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h2><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 对应上面的groupId 不能乱写 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.klover2<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>你自己的项目名称<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>描述<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/klover2/**<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  apache 2.0 协议  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache Software License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">distribution</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- SCM信息 -&gt; git在github上托管 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connection</span>&gt;</span>scm:git:https://github.com/klover2/**.git<span class="tag">&lt;/<span class="name">connection</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>git:https://github.com/klover2/**<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发者信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>klover<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 插件版本 直接拷贝 start --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nexus-staging-maven-plugin.version</span>&gt;</span>1.6.7<span class="tag">&lt;/<span class="name">nexus-staging-maven-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-source-plugin.version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">maven-source-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-javadoc-plugin.version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">maven-javadoc-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-gpg-plugin.version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">maven-gpg-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-release-plugin.version</span>&gt;</span>2.5.3<span class="tag">&lt;/<span class="name">maven-release-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 插件版本 直接拷贝 end --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 插件包 直接拷贝 start --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.sonatype.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nexus-staging-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nexus-staging-maven-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-source-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-javadoc-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-gpg-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-gpg-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 插件包 直接拷贝 end --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 默认配置 直接拷贝 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--生成源码插件--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-source-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar-no-fork<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--生成API文档插件--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-javadoc-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-javadocs<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--发布到中央SNAPSHOT仓库插件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.sonatype.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nexus-staging-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nexus-staging-maven-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">serverId</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">serverId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nexusUrl</span>&gt;</span>https://s01.oss.sonatype.org/<span class="tag">&lt;/<span class="name">nexusUrl</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 开启true 自动同步--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">autoReleaseAfterClose</span>&gt;</span>false<span class="tag">&lt;/<span class="name">autoReleaseAfterClose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用Maven Release插件执行发布部署 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-release-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-release-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">autoVersionSubmodules</span>&gt;</span>true<span class="tag">&lt;/<span class="name">autoVersionSubmodules</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">useReleaseProfile</span>&gt;</span>false<span class="tag">&lt;/<span class="name">useReleaseProfile</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">releaseProfiles</span>&gt;</span>release<span class="tag">&lt;/<span class="name">releaseProfiles</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span>deploy<span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--gpg插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-gpg-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-gpg-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>sign-artifacts<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>sign<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--suppress UnresolvedMavenProperty --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">keyname</span>&gt;</span>$&#123;gpg.keyname&#125;<span class="tag">&lt;/<span class="name">keyname</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--suppress UnresolvedMavenProperty --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">passphraseServerId</span>&gt;</span>$&#123;gpg.keyname&#125;<span class="tag">&lt;/<span class="name">passphraseServerId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--注意,此id必须与setting.xml中指定的一致--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://s01.oss.sonatype.org/content/repositories/snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 默认配置 直接拷贝 end --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="打包发布"><a href="#打包发布" class="headerlink" title="打包发布"></a>打包发布</h2><p>完成以上配置，我们就可以往 Maven 中央仓库上传 jar 包了，我们使用 Maven 命令上传。</p><blockquote><p><code>mvn clean deploy -P release</code></p></blockquote><p>如果是子项目 &gt; <code>mvn clean deploy -projects demo -P release</code><br>如下图 就说明发布成功了。</p><p><img src="https://img-blog.csdnimg.cn/a75459d2b6754beeb2973fc5305713aa.png" alt="在这里插入图片描述"></p><p>届时你可以在<a href="https://s01.oss.sonatype.org/" target="_blank" rel="external nofollow noopener noreferrer">Nexus Repository Manager</a>:中找到.<br><img src="https://img-blog.csdnimg.cn/24027c5a1c584085bd6d187f9a8f6eab.png" alt="在这里插入图片描述"></p><p>4 小时内你可以在 <a href="https://search.maven.org/" target="_blank" rel="external nofollow noopener noreferrer">Maven Central Repository Search</a>中搜索到.</p><p>在<a href="https://mvnrepository.com/" target="_blank" rel="external nofollow noopener noreferrer">mvnrepository</a>中搜索找可能需要几天。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li><p>如果你版本号是以 SNAPSHOT 结尾，不会发布 maven 中央仓库。</p></li><li><p><code>&lt;autoReleaseAfterClose&gt;false&lt;/autoReleaseAfterClose&gt;</code> 由于我关闭了自动同步，所以需要在 Staging Repositories 手动点 release 发布<br><img src="https://img-blog.csdnimg.cn/09b78d71349b4d4b86951141f3b045d4.png" alt="在这里插入图片描述"></p></li><li><p>是否需要发布单元测试文件</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -DskipTests，不执行测试用例，但编译测试用例类生成相应的class文件至target/test-classes下</span></span><br><span class="line"></span><br><span class="line">mvn clean deploy -P release -DskipTests</span><br><span class="line"></span><br><span class="line"><span class="comment"># -Dmaven.test.skip=true，不执行测试用例，也不编译测试用例类</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要用引号</span></span><br><span class="line">mvn clean deploy -P release <span class="string">'-Dmaven.test.skip=true'</span></span><br></pre></td></tr></table></figure><h2 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h2><ol><li>nexus staging maven 插件：maven 部署失败：执行时遇到 API 不兼容</li></ol><p>配置环境变量：&gt; <code>export MAVEN_OPTS=&quot;--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED&quot;</code></p><p><img src="https://img-blog.csdnimg.cn/7582168ed594457a85165ed15b50ce2e.png" alt="在这里插入图片描述"></p><h2 id="使用域名"><a href="#使用域名" class="headerlink" title="使用域名"></a>使用域名</h2><p><img src="https://img-blog.csdnimg.cn/d1d8ac935f674f8cbcf45bc48ccad96f.png" alt="在这里插入图片描述"><br>测试是否添加成功<br><code>host -t txt OSSRH-70704.zzq0324.cn</code>;</p><p><a href="https://www.zzq0324.cn/2021/07/16/how-to-deploy-jar-to-maven-central-part1/" target="_blank" rel="external nofollow noopener noreferrer">原文</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;开发环境为：win11 + jdk8 + maven&lt;/p&gt;
&lt;h2 id=&quot;注册账户&quot;&gt;&lt;a href=&quot;#注册账户&quot; class=&quot;headerlink&quot; title=&quot;注册账户&quot;&gt;&lt;/a&gt;注册账户&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://issues.sonatype.org/secure/Signup!default.jspa&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;Sign up for Jira - Sonatype JIRA&lt;/a&gt;&lt;br&gt;选择中文 比较好&lt;/p&gt;
&lt;p&gt;如果未使用过 Sonatype 系统，需要先注册一个帐号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email: 填写自己的邮箱帐号即可，在 Sonatype 上的相关操作，会通知到这个邮箱帐号来提醒你相关进度。&lt;/li&gt;
&lt;li&gt;Full name: 填写联系人名称。&lt;/li&gt;
&lt;li&gt;Username: 这个就是你在 Sonatype 的登录帐号了。&lt;/li&gt;
&lt;li&gt;Password: 为登录密码，要求至少 8 位，并带有大小写字母和字符。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="java" scheme="https://blog.wjc66.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>记一次使用redis的keys命令导致redis雪崩的生产事故</title>
    <link href="https://blog.wjc66.cn/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8redis%E7%9A%84keys%E5%91%BD%E4%BB%A4%E5%AF%BC%E8%87%B4redis%E9%9B%AA%E5%B4%A9%E7%9A%84%E7%94%9F%E4%BA%A7%E4%BA%8B%E6%95%85/"/>
    <id>https://blog.wjc66.cn/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8redis%E7%9A%84keys%E5%91%BD%E4%BB%A4%E5%AF%BC%E8%87%B4redis%E9%9B%AA%E5%B4%A9%E7%9A%84%E7%94%9F%E4%BA%A7%E4%BA%8B%E6%95%85/</id>
    <published>2022-09-08T09:00:31.000Z</published>
    <updated>2022-09-08T09:15:31.269Z</updated>
    
    <content type="html"><![CDATA[<h2 id="出现原因"><a href="#出现原因" class="headerlink" title="出现原因"></a>出现原因</h2><p>由于需要每时每刻监听三方报错超过十次发送机器人警告，所以每次报错我这边就存入一个（key+时间），同时过期时间为1小时，所以查询当前的一个小时内错误次数，使用 <code>keys key*</code>查询key的数量，就知道错误次数，本来一直没有问题，跑了大半年了，突然有一天redis的cpu100%，直接雪崩，导致客户无法登录，后面排查原因是有个三方一直报错，代码又重试，由于需要机器人提醒(这个时候我们redis key已经超过80w个key),导致一秒钟查上千次询<code>keys</code>命令，最后redis直接爆炸。</p><a id="more"></a><h2 id="官方对keys这个命令的说明"><a href="#官方对keys这个命令的说明" class="headerlink" title="官方对keys这个命令的说明"></a>官方对keys这个命令的说明</h2><p>keys的时间复杂度是O(N)，N为执行该命令下的数据库的key的数量，常数。<br>redis扫描key的速度很快，在入门笔记本大约是40毫秒100w个。<br>警告⚠️：keys用在生产环境只能以极低频率执行。 在大数据库执行时会出现灾难性的性能。如果需要查询某些key，考虑使用SCAN或者sets。</p><h2 id="keys命令为什么会这么慢呢？"><a href="#keys命令为什么会这么慢呢？" class="headerlink" title="keys命令为什么会这么慢呢？"></a>keys命令为什么会这么慢呢？</h2><p>(1) Redis是NoSQL型数据库，以hash数据结构存储的，所以才能实现高效的数据查询。而hash结构对于精确查找是非常快的，对于模糊查询，则无能为力。<br>(2) Redis的命令执行是单线程的，同一时间只能执行单个命令。单一长时间命令会堵塞后续。(可以通过debug sleep 0.1100ms 模拟执行长时间命令)<br>以上两点造成了KEYS进行key查询需要遍历当前db的所有数据，以及当该命令执行完成的时候后续命令都会被堵塞。<br>因此在redis中执行的命令，尽量避免长时间堵塞命令。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>后面实在没有办法退而求其次，把所有的<code>keys</code>命令移除了，只是简单记录次数了，一直自己自增，半个小时自动过期。还有一种方法就是保存数据库，每进来一条错误日志，就保存一次，按照时间查询这样也可以达到上面的效果，每天或者每月去清理之前的旧数据，防止数据太多。</p><p>看网上推荐使用<code>Scan</code>来替换<code>keys</code>，它是增量地迭代 ，它们每次执行都只会返回少量元素，不会阻塞服务器， 所以这些命令可以用于生产环境， 而不会出现像 KEYS 命令、 SMEMBERS 命令带来的问题。但是会出现.同一个元素可能会被返回多次，所以就没有使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;出现原因&quot;&gt;&lt;a href=&quot;#出现原因&quot; class=&quot;headerlink&quot; title=&quot;出现原因&quot;&gt;&lt;/a&gt;出现原因&lt;/h2&gt;&lt;p&gt;由于需要每时每刻监听三方报错超过十次发送机器人警告，所以每次报错我这边就存入一个（key+时间），同时过期时间为1小时，所以查询当前的一个小时内错误次数，使用 &lt;code&gt;keys key*&lt;/code&gt;查询key的数量，就知道错误次数，本来一直没有问题，跑了大半年了，突然有一天redis的cpu100%，直接雪崩，导致客户无法登录，后面排查原因是有个三方一直报错，代码又重试，由于需要机器人提醒(这个时候我们redis key已经超过80w个key),导致一秒钟查上千次询&lt;code&gt;keys&lt;/code&gt;命令，最后redis直接爆炸。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="redis" scheme="https://blog.wjc66.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>postgresql事务死锁和连接池数不够导致node项目假死</title>
    <link href="https://blog.wjc66.cn/postgresql%E4%BA%8B%E5%8A%A1%E6%AD%BB%E9%94%81%E5%92%8C%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%95%B0%E4%B8%8D%E5%A4%9F%E5%AF%BC%E8%87%B4node%E9%A1%B9%E7%9B%AE%E5%81%87%E6%AD%BB/"/>
    <id>https://blog.wjc66.cn/postgresql%E4%BA%8B%E5%8A%A1%E6%AD%BB%E9%94%81%E5%92%8C%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%95%B0%E4%B8%8D%E5%A4%9F%E5%AF%BC%E8%87%B4node%E9%A1%B9%E7%9B%AE%E5%81%87%E6%AD%BB/</id>
    <published>2022-09-08T08:01:35.000Z</published>
    <updated>2022-09-08T08:59:19.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="出现原因"><a href="#出现原因" class="headerlink" title="出现原因"></a>出现原因</h2><p>客户量起来，创建订单越来越多，因为之前是用typeOrm的默认配置，看了源码，发现默认配置是10，所以导致客户请求不了。后来解决了连接池问题，又出现数据库死锁，导致数据库cpu直接100%，又导致客户订单创建不了，产生生产损失。</p><a id="more"></a><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h3 id="线索池问题"><a href="#线索池问题" class="headerlink" title="线索池问题"></a>线索池问题</h3><ol><li>排查<br>当时出现node程序假死，但是数据库，redis都是正常，后面排查连接数是否正常，发现连接数很少，当时很懵，不知道为啥，后面想到typeorm连接池配置，发现了问题。</li></ol><p>修改typeorm配置</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">keepAlive: <span class="literal">true</span>,</span><br><span class="line">extra: &#123;</span><br><span class="line">  poolSize: <span class="number">800</span>,</span><br><span class="line">  mixins: <span class="number">0</span>,</span><br><span class="line">  connectTimeoutMS: <span class="number">60000</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ol start="2"><li><p>查询数据库允许的最大连接数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> max_connections;</span><br></pre></td></tr></table></figure></li><li><p>查看当前连接数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 分组求和</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*), usename <span class="keyword">from</span> pg_stat_activity <span class="keyword">group</span> <span class="keyword">by</span> usename;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 总数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> pg_stat_activity</span><br></pre></td></tr></table></figure></li></ol><h3 id="数据库死锁问题"><a href="#数据库死锁问题" class="headerlink" title="数据库死锁问题"></a>数据库死锁问题</h3><ol><li><p>排查<br>也是因为客户量增加，交易频繁，导致大面积数据库死锁，数据库cpu 100%，影响客户使用，后面百度搜索出现死锁原因，发现原来表加锁顺序问题。</p></li><li><p>什么是数据库死锁<br>在操作系统领域当中，死锁指的是两个或者两个以上的进程在运行的过程中，因为争夺共同的访问资源而相互等待阻塞，最终造成阻碍进程继续执行的一种阻塞现象。那么在数据库领域当中死锁又是怎样的表现形式呢？</p></li></ol><p>如下图所示，假设事务A持有行1的共享锁，事务B持有行2的共享锁，那么此时事务A请求持有行2的排他锁，那么在事务B释放资源之前都处于阻塞等待的状态，同样的事务B请求持有行1的排他锁，在事务A 释放资源之前同样也是处于阻塞等待的状态。也就是说事务 B 完成之后事务 A 才能完成，而事务A的完成又依赖于事务B的完成，这就形成了循环依赖的问题，最终导致死锁情况的发生。</p><p>测试sql 如下（按照步骤执行到第三步就会出现死锁）：<br>sql1:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 执行第一步</span></span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> <span class="string">"user"</span> <span class="keyword">where</span> <span class="string">"id"</span> = <span class="string">'03b44ddb-0813-40c2-bbba-5ca51fc2c57f'</span> <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>;</span><br><span class="line"><span class="comment">-- 执行第三步</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> <span class="string">"user"</span> <span class="keyword">where</span> <span class="string">"id"</span> = <span class="string">'bfdf2d04-d330-4134-8057-7b77ceaaf8d0'</span> <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>;</span><br></pre></td></tr></table></figure><p>sql2:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 执行第二步</span></span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> <span class="string">"user"</span> <span class="keyword">where</span> <span class="string">"id"</span> = <span class="string">'bfdf2d04-d330-4134-8057-7b77ceaaf8d0'</span> <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>;</span><br><span class="line"><span class="comment">-- 执行第四步</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> <span class="string">"user"</span> <span class="keyword">where</span> <span class="string">"id"</span> = <span class="string">'03b44ddb-0813-40c2-bbba-5ca51fc2c57f'</span> <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>死锁排查</li></ol><p>创建视图用于查询死锁</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> v_locks_monitor <span class="keyword">as</span>   </span><br><span class="line"><span class="keyword">with</span>    </span><br><span class="line">t_wait <span class="keyword">as</span>    </span><br><span class="line">(    </span><br><span class="line">  <span class="keyword">select</span> a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,   </span><br><span class="line">  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,    </span><br><span class="line">  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name   </span><br><span class="line">    <span class="keyword">from</span> pg_locks a,pg_stat_activity b <span class="keyword">where</span> a.pid=b.pid <span class="keyword">and</span> <span class="keyword">not</span> a.granted   </span><br><span class="line">),   </span><br><span class="line">t_run <span class="keyword">as</span>   </span><br><span class="line">(   </span><br><span class="line">  <span class="keyword">select</span> a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,   </span><br><span class="line">  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,   </span><br><span class="line">  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name   </span><br><span class="line">    <span class="keyword">from</span> pg_locks a,pg_stat_activity b <span class="keyword">where</span> a.pid=b.pid <span class="keyword">and</span> a.granted   </span><br><span class="line">),   </span><br><span class="line">t_overlap <span class="keyword">as</span>   </span><br><span class="line">(   </span><br><span class="line">  <span class="keyword">select</span> r.* <span class="keyword">from</span> t_wait w <span class="keyword">join</span> t_run r <span class="keyword">on</span>   </span><br><span class="line">  (   </span><br><span class="line">    r.locktype <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.locktype <span class="keyword">and</span>   </span><br><span class="line">    r.database <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.database <span class="keyword">and</span>   </span><br><span class="line">    r.relation <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.relation <span class="keyword">and</span>   </span><br><span class="line">    r.page <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.page <span class="keyword">and</span>   </span><br><span class="line">    r.tuple <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.tuple <span class="keyword">and</span>   </span><br><span class="line">    r.virtualxid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.virtualxid <span class="keyword">and</span>   </span><br><span class="line">    r.transactionid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.transactionid <span class="keyword">and</span>   </span><br><span class="line">    r.classid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.classid <span class="keyword">and</span>   </span><br><span class="line">    r.objid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.objid <span class="keyword">and</span>   </span><br><span class="line">    r.objsubid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.objsubid <span class="keyword">and</span>   </span><br><span class="line">    r.pid &lt;&gt; w.pid   </span><br><span class="line">  )    </span><br><span class="line">),    </span><br><span class="line">t_unionall <span class="keyword">as</span>    </span><br><span class="line">(    </span><br><span class="line">  <span class="keyword">select</span> r.* <span class="keyword">from</span> t_overlap r    </span><br><span class="line">  <span class="keyword">union</span> <span class="keyword">all</span>    </span><br><span class="line">  <span class="keyword">select</span> w.* <span class="keyword">from</span> t_wait w    </span><br><span class="line">)    </span><br><span class="line"><span class="keyword">select</span> locktype,datname,relation::regclass,page,tuple,virtualxid,transactionid::<span class="built_in">text</span>,classid::regclass,objid,objsubid,   </span><br><span class="line">string_agg(   </span><br><span class="line"><span class="string">'Pid: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> pid <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> pid::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="keyword">chr</span>(<span class="number">10</span>)||   </span><br><span class="line"><span class="string">'Lock_Granted: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> granted <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> granted::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Mode: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">mode</span> <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> <span class="keyword">mode</span>::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , FastPath: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> fastpath <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> fastpath::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , VirtualTransaction: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> virtualtransaction <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> virtualtransaction::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Session_State: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> state <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> state::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="keyword">chr</span>(<span class="number">10</span>)||   </span><br><span class="line"><span class="string">'Username: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> usename <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> usename::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Database: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> datname <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> datname::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Client_Addr: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> client_addr <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> client_addr::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Client_Port: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> client_port <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> client_port::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Application_Name: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> application_name <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> application_name::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="keyword">chr</span>(<span class="number">10</span>)||    </span><br><span class="line"><span class="string">'Xact_Start: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> xact_start <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> xact_start::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Query_Start: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> query_start <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> query_start::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Xact_Elapse: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> (<span class="keyword">now</span>()-xact_start) <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> (<span class="keyword">now</span>()-xact_start)::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="string">' , Query_Elapse: '</span>||<span class="keyword">case</span> <span class="keyword">when</span> (<span class="keyword">now</span>()-query_start) <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> (<span class="keyword">now</span>()-query_start)::<span class="built_in">text</span> <span class="keyword">end</span>||<span class="keyword">chr</span>(<span class="number">10</span>)||    </span><br><span class="line"><span class="string">'SQL (Current SQL in Transaction): '</span>||<span class="keyword">chr</span>(<span class="number">10</span>)||  </span><br><span class="line"><span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">query</span> <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="string">'NULL'</span> <span class="keyword">else</span> <span class="keyword">query</span>::<span class="built_in">text</span> <span class="keyword">end</span>,    </span><br><span class="line"><span class="keyword">chr</span>(<span class="number">10</span>)||<span class="string">'--------'</span>||<span class="keyword">chr</span>(<span class="number">10</span>)    </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>    </span><br><span class="line">  (  <span class="keyword">case</span> <span class="keyword">mode</span>    </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'INVALID'</span> <span class="keyword">then</span> <span class="number">0</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'AccessShareLock'</span> <span class="keyword">then</span> <span class="number">1</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'RowShareLock'</span> <span class="keyword">then</span> <span class="number">2</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'RowExclusiveLock'</span> <span class="keyword">then</span> <span class="number">3</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'ShareUpdateExclusiveLock'</span> <span class="keyword">then</span> <span class="number">4</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'ShareLock'</span> <span class="keyword">then</span> <span class="number">5</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'ShareRowExclusiveLock'</span> <span class="keyword">then</span> <span class="number">6</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'ExclusiveLock'</span> <span class="keyword">then</span> <span class="number">7</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">'AccessExclusiveLock'</span> <span class="keyword">then</span> <span class="number">8</span>   </span><br><span class="line">    <span class="keyword">else</span> <span class="number">0</span>   </span><br><span class="line">  <span class="keyword">end</span>  ) <span class="keyword">desc</span>,   </span><br><span class="line">  (<span class="keyword">case</span> <span class="keyword">when</span> granted <span class="keyword">then</span> <span class="number">0</span> <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">end</span>)  </span><br><span class="line">) <span class="keyword">as</span> lock_conflict  </span><br><span class="line"><span class="keyword">from</span> t_unionall   </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span>   </span><br><span class="line">locktype,datname,relation,page,tuple,virtualxid,transactionid::<span class="built_in">text</span>,classid,objid,objsubid ;</span><br></pre></td></tr></table></figure><p>执行视图,会出现死锁信息，如下图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> v_locks_monitor</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/37e2d4b32f6e4b63b05157df55a11aad.png" alt="在这里插入图片描述"></p><p>找到”被阻塞者”,找到pid,如下图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> pid <span class="keyword">from</span> pg_locks <span class="keyword">where</span> <span class="keyword">not</span> granted;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/33656d7f091e4625bcee064516bcc251.png" alt="在这里插入图片描述"></p><p>找到”阻塞者”,可以找到执行的sql,如下图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> pg_stat_activity <span class="keyword">where</span> pid=<span class="number">5432</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f05e9f0a778040118c656086e9ce631e.png" alt="在这里插入图片描述"></p><p>杀死当前死锁</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> pg_terminate_backend(<span class="number">5432</span>);</span><br></pre></td></tr></table></figure><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>修改正常加锁的顺序之后，就没有出现当前问题了。</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://blog.csdn.net/diamond_tao/article/details/124567168" target="_blank" rel="external nofollow noopener noreferrer">PostgreSQL死锁了怎么办？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;出现原因&quot;&gt;&lt;a href=&quot;#出现原因&quot; class=&quot;headerlink&quot; title=&quot;出现原因&quot;&gt;&lt;/a&gt;出现原因&lt;/h2&gt;&lt;p&gt;客户量起来，创建订单越来越多，因为之前是用typeOrm的默认配置，看了源码，发现默认配置是10，所以导致客户请求不了。后来解决了连接池问题，又出现数据库死锁，导致数据库cpu直接100%，又导致客户订单创建不了，产生生产损失。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>使用pm2启动node项目，内存直接暴增,原因是高IO读写</title>
    <link href="https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8pm2%E5%90%AF%E5%8A%A8node%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%86%85%E5%AD%98%E7%9B%B4%E6%8E%A5%E6%9A%B4%E5%A2%9E,%E5%8E%9F%E5%9B%A0%E6%98%AF%E9%AB%98IO%E8%AF%BB%E5%86%99/"/>
    <id>https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8pm2%E5%90%AF%E5%8A%A8node%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%86%85%E5%AD%98%E7%9B%B4%E6%8E%A5%E6%9A%B4%E5%A2%9E,%E5%8E%9F%E5%9B%A0%E6%98%AF%E9%AB%98IO%E8%AF%BB%E5%86%99/</id>
    <published>2022-09-08T07:36:07.000Z</published>
    <updated>2022-09-09T02:40:44.973Z</updated>
    
    <content type="html"><![CDATA[<ol><li>出现原因介绍<br>因为我们使用了神策埋点，正好神策过期了，没有及时关闭配置，导致日志上传不了，一直保存在本地，存了上百M的日志，在代码发布的时候需要重启，导致pm2的内容直接超过8G,把服务器直接卡死，等了半个小时了之后 内存慢慢下降，刚开始以为是代码太多，打包内存不够用，升级了服务器内存，还是出现了同样的问题，排查了几天都没有发现。后面使用<code>node-tick</code>才发现原因是神策在上传日志，他里面写的是foreach循环一起上传所有日志，由于有上传不了，又保存在本地。</li></ol><a id="more"></a><ol start="2"><li><p>问题排查<br>安装node-tick方式<code>sudo npm -g install tick</code><br>使用启用的配置文件运行您的应用程序<code>node --prof app.js</code><br>在 CPU 100% 使用一段时间后停止您的应用程序<br>您可以在您的应用目录中看到 v8.log，现在您可以使用 <code>node-tick-processor isolate-0x5138fd0-15431-v8.log</code> 读取它,直接看。但是不方便，推荐直接第3步，存入文件看</p></li><li><p>解析到文件中，查看堆栈信息</p><blockquote><p><code>node --prof-process isolate-0x102884000-14025-v8.log &gt; 11.txt</code></p></blockquote></li></ol><ol start="4"><li>实例 创建一个app.js文件<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        ++i</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure></li></ol><p>执行当前文件 <code>node --prof app.js</code> 跑到cpu特别高的时候 关闭，就会生成一个日志文件<code>isolate-0x102884000-14025-v8.log</code>(文件名字会不一样)；</p><p>解析到文件中 <code>node --prof-process isolate-0x102884000-14025-v8.log &gt; 11.txt</code>;</p><p>查看文件 找到对应的执行的地方</p><p><img src="https://img-blog.csdnimg.cn/5aa3fa4721b146c8a6bb4878b708b7ff.png" alt="在这里插入图片描述"></p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢梁老师让我学习到如果排查此问题！！！</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="http://t.zoukankan.com/flydean-p-14376230.html" target="_blank" rel="external nofollow noopener noreferrer">使用V8和node轻松profile分析nodejs应用程序</a></p><p><a href="https://itecnote.com/tecnote/r-how-to-debug-node-js-causing-100-cpu-usage/" target="_blank" rel="external nofollow noopener noreferrer">Node.js – how to debug node.js causing 100% cpu usage</a></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;出现原因介绍&lt;br&gt;因为我们使用了神策埋点，正好神策过期了，没有及时关闭配置，导致日志上传不了，一直保存在本地，存了上百M的日志，在代码发布的时候需要重启，导致pm2的内容直接超过8G,把服务器直接卡死，等了半个小时了之后 内存慢慢下降，刚开始以为是代码太多，打包内存不够用，升级了服务器内存，还是出现了同样的问题，排查了几天都没有发现。后面使用&lt;code&gt;node-tick&lt;/code&gt;才发现原因是神策在上传日志，他里面写的是foreach循环一起上传所有日志，由于有上传不了，又保存在本地。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>CPU偶现的100%查询</title>
    <link href="https://blog.wjc66.cn/CPU%E5%81%B6%E7%8E%B0%E7%9A%84100-%E6%9F%A5%E8%AF%A2/"/>
    <id>https://blog.wjc66.cn/CPU%E5%81%B6%E7%8E%B0%E7%9A%84100-%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-09-08T07:19:24.000Z</published>
    <updated>2022-09-08T07:24:17.315Z</updated>
    
    <content type="html"><![CDATA[<p>在服务器偶然会出现CPU100%时，会出现服务器对外不可用，健康检查也无法相应。</p><blockquote><p>因为是偶现，一般重启后就好了。但是这种时候一般先不要重启，先按如下命令：</p></blockquote><a id="more"></a><h2 id="1-找出node-js-的进程号-top"><a href="#1-找出node-js-的进程号-top" class="headerlink" title="1. 找出node.js 的进程号: top"></a>1. 找出node.js 的进程号: top</h2><p><img src="https://img-blog.csdnimg.cn/08b679d2b3b54662914727f5c9dfbbd0.png" alt="在这里插入图片描述"></p><h2 id="2-进入调试状态：node-inspect-p-pid"><a href="#2-进入调试状态：node-inspect-p-pid" class="headerlink" title="2. 进入调试状态：node inspect -p pid"></a>2. 进入调试状态：node inspect -p pid</h2><p>例如：<code>node inspect -p 22056</code>，你会看到这个提示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debug&gt;</span><br></pre></td></tr></table></figure><h2 id="3-然后输入：pause"><a href="#3-然后输入：pause" class="headerlink" title="3. 然后输入：pause"></a>3. 然后输入：pause</h2><p><img src="https://img-blog.csdnimg.cn/e1d8728b0d5b4977b47172834363c266.png" alt="在这里插入图片描述"></p><p>就能找到，当前执行的代码块</p><h2 id="4-根据提示找出对应行的代码"><a href="#4-根据提示找出对应行的代码" class="headerlink" title="4. 根据提示找出对应行的代码"></a>4. 根据提示找出对应行的代码</h2><p><img src="https://img-blog.csdnimg.cn/bccb3c625d094dcd8dd7b6d3f5d6e710.png" alt="在这里插入图片描述"></p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢梁老师让我学习到如果排查此问题！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在服务器偶然会出现CPU100%时，会出现服务器对外不可用，健康检查也无法相应。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为是偶现，一般重启后就好了。但是这种时候一般先不要重启，先按如下命令：&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>postgresql日期相关函数</title>
    <link href="https://blog.wjc66.cn/postgresql%E6%97%A5%E6%9C%9F%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0/"/>
    <id>https://blog.wjc66.cn/postgresql%E6%97%A5%E6%9C%9F%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0/</id>
    <published>2022-09-08T06:35:24.000Z</published>
    <updated>2022-09-08T07:06:57.659Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Postgresql中string转换成timestamp类型"><a href="#Postgresql中string转换成timestamp类型" class="headerlink" title="Postgresql中string转换成timestamp类型"></a>Postgresql中string转换成timestamp类型</h2><p>Mybatis+Postgresql<br><code>TO_DATE(#{startTime}, &#39;YYYY-MM-DD&#39;)</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AND op_date &lt;![CDATA[&gt;= ]]&gt;  TO_TIMESTAMP(#&#123;beginTime&#125;, 'YYYY-MM-DD HH24:MI:SS')</span><br><span class="line">AND op_date &lt;![CDATA[&lt;= ]]&gt;  TO_TIMESTAMP(#&#123;endTime&#125;, 'YYYY-MM-DD HH24:MI:SS')</span><br></pre></td></tr></table></figure><p>而页面要接收和传递数据需要在javaBean中写如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonFormat</span>(pattern=<span class="string">"yyyy-MM-dd HH:mm:ss"</span>,timezone = <span class="string">"GMT+8"</span>)</span><br><span class="line"><span class="keyword">private</span> Timestamp opDate;        <span class="comment">//操作日期</span></span><br></pre></td></tr></table></figure><h2 id="PostgreSQL日期加减"><a href="#PostgreSQL日期加减" class="headerlink" title="PostgreSQL日期加减"></a>PostgreSQL日期加减</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>()::<span class="built_in">timestamp</span> + <span class="string">'1 year'</span>;  <span class="comment">--当前时间加1年</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>()::<span class="built_in">timestamp</span> + <span class="string">'1 month'</span>;  <span class="comment">--当前时间加一个月</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>()::<span class="built_in">timestamp</span> + <span class="string">'1 day'</span>;  <span class="comment">--当前时间加一天</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>()::<span class="built_in">timestamp</span> + <span class="string">'1 hour'</span>;  <span class="comment">--当前时间加一个小时</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>()::<span class="built_in">timestamp</span> + <span class="string">'1 min'</span>;  <span class="comment">--当前时间加一分钟</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>()::<span class="built_in">timestamp</span> + <span class="string">'1 sec'</span>;  <span class="comment">--加一秒钟</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">select</span> <span class="keyword">now</span>()::<span class="built_in">timestamp</span> + <span class="string">'1 year 1 month 1 day 1 hour 1 min 1 sec'</span>;  <span class="comment">--加1年1月1天1时1分1秒</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>()::<span class="built_in">timestamp</span> + (<span class="keyword">col</span> || <span class="string">' day'</span>)::<span class="built_in">interval</span> <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="comment">--把col字段转换成天 然后相加</span></span><br></pre></td></tr></table></figure><h2 id="PostgreSQL常用当前时间"><a href="#PostgreSQL常用当前时间" class="headerlink" title="PostgreSQL常用当前时间"></a>PostgreSQL常用当前时间</h2><p>PostgreSQL 提供可许多返回当前日期和时间的函数。部分函数按照当前事务的开始时刻返回结果：</p><p>CURRENT_TIME(precision)<br>transaction_timestamp() 感觉这个描述更符合实际情况</p><p>另外部分函数返回实时时间值，在事务中也会随时间变化。<br>statement_timestamp()<br>clock_timestamp()<br>timeofday() 返回的是text字符串</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">''</span>||<span class="keyword">now</span>()::<span class="built_in">timestamp</span> <span class="comment">-- 2022-02-25 14:29:00.189944</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">substring</span>(<span class="string">''</span>||<span class="keyword">now</span>()::<span class="built_in">timestamp</span> <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">19</span>)  <span class="comment">--  2022-02-25 14:25:44</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">now</span>() <span class="comment">-- 2022-02-25 14:48:35</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">localtime</span> <span class="comment">-- 14:47:08</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">localtimestamp</span> <span class="comment">-- 2022-02-25 14:47:08</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">current_date</span> <span class="comment">--  2022-02-25</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">current_time</span> <span class="comment">--  14:29:13</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">current_timestamp</span> <span class="comment">-- 2022-02-25 14:45:03</span></span><br><span class="line"><span class="keyword">select</span>  to_char(<span class="keyword">now</span>(), <span class="string">'YYYY-MM-DD HH24:mi:ss:ms'</span>) <span class="comment">--  2022-02-25 14:35:06:569</span></span><br><span class="line"><span class="keyword">select</span> timeofday() <span class="comment">-- 返回的是text字符串,Fri Feb 25 14:43:46.005910 2022 CST</span></span><br><span class="line">此外，还有<span class="keyword">CURRENT_TIME</span>(<span class="keyword">precision</span>)， statement_timestamp()， clock_timestamp()</span><br></pre></td></tr></table></figure><h2 id="PostgreSQL的时间类型"><a href="#PostgreSQL的时间类型" class="headerlink" title="PostgreSQL的时间类型"></a>PostgreSQL的时间类型</h2><h3 id="类型转换函数"><a href="#类型转换函数" class="headerlink" title="类型转换函数"></a>类型转换函数</h3><p>PostgreSQL格式化函数提供一套有效的工具用于把各种数据类型(日期/时间、integer、floating point和numeric)转换成格式化的字符串以及反过来从格式化的字符串转换成指定的数据类型。下面列出了这些函数，它们都遵循一个公共的调用习惯：第一个参数是待格式化的值，而第二个是定义输出或输出格式的模板。</p><table><thead><tr><th>函数</th><th>返回类型</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>to_char(timestamp, text)</td><td>text</td><td>把时间戳转换成字串</td><td>to_char(current_timestamp, ‘HH12:MI:SS’)</td></tr><tr><td>to_char(interval, text)</td><td>text</td><td>把时间间隔转为字串</td><td>to_char(interval ‘15h 2m 12s’, ‘HH24:MI:SS’)</td></tr><tr><td>to_char(int, text)</td><td>text</td><td>把整数转换成字串</td><td>to_char(125, ‘999’)</td></tr><tr><td>to_char(double precision, text)</td><td>text</td><td>把实数/双精度数转换成字串</td><td>to_char(125.8::real, ‘999D9’)</td></tr><tr><td>to_char(numeric, text)</td><td>text</td><td>把numeric转换成字串</td><td>to_char(-125.8, ‘999D99S’)</td></tr><tr><td>to_date(text, text)</td><td>date</td><td>把字串转换成日期</td><td>to_date(‘05 Dec 2000’, ‘DD Mon YYYY’)</td></tr><tr><td>to_timestamp(text, text)</td><td>timestamp</td><td>把字串转换成时间戳</td><td>to_timestamp(‘05 Dec 2000’, ‘DD Mon YYYY’)</td></tr><tr><td>to_timestamp(double)</td><td>timestamp</td><td>把UNIX纪元转换成时间戳</td><td>to_timestamp(200120400)</td></tr><tr><td>to_number(text, text)</td><td>numeric</td><td>把字串转换成numeric</td><td>to_number(‘12,454.8-‘, ‘99G999D9S’)</td></tr></tbody></table><h3 id="日期-时间格式化的模式"><a href="#日期-时间格式化的模式" class="headerlink" title="日期/时间格式化的模式"></a>日期/时间格式化的模式</h3><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>HH</td><td>一天的小时数(01-12)</td></tr><tr><td>HH12</td><td>一天的小时数(01-12)</td></tr><tr><td>HH24</td><td>一天的小时数(00-23)</td></tr><tr><td>MI</td><td>分钟(00-59)</td></tr><tr><td>SS</td><td>秒(00-59)</td></tr><tr><td>MS</td><td>毫秒(000-999)</td></tr><tr><td>US</td><td>微秒(000000-999999)</td></tr><tr><td>AM</td><td>正午标识(大写)</td></tr><tr><td>Y,YYY</td><td>带逗号的年(4和更多位)</td></tr><tr><td>YYYY</td><td>年(4和更多位)</td></tr><tr><td>YYY</td><td>年的后三位</td></tr><tr><td>YY</td><td>年的后两位</td></tr><tr><td>Y</td><td>年的最后一位</td></tr><tr><td>MONTH</td><td>全长大写月份名(空白填充为9字符)</td></tr><tr><td>Month</td><td>全长混合大小写月份名(空白填充为9字符)</td></tr><tr><td>month</td><td>全长小写月份名(空白填充为9字符)</td></tr><tr><td>MON</td><td>大写缩写月份名(3字符)</td></tr><tr><td>Mon</td><td>缩写混合大小写月份名(3字符)</td></tr><tr><td>mon</td><td>小写缩写月份名(3字符)</td></tr><tr><td>MM</td><td>月份号(01-12)</td></tr><tr><td>DAY</td><td>全长大写日期名(空白填充为9字符)</td></tr><tr><td>Day</td><td>全长混合大小写日期名(空白填充为9字符)</td></tr><tr><td>day</td><td>全长小写日期名(空白填充为9字符)</td></tr><tr><td>DY</td><td>缩写大写日期名(3字符)</td></tr><tr><td>Dy</td><td>缩写混合大小写日期名(3字符)</td></tr><tr><td>dy</td><td>缩写小写日期名(3字符)</td></tr><tr><td>DDD</td><td>一年里的日子(001-366)</td></tr><tr><td>DD</td><td>一个月里的日子(01-31)</td></tr><tr><td>D</td><td>一周里的日子(1-7；周日是1)</td></tr><tr><td>W</td><td>一个月里的周数(1-5)(第一周从该月第一天开始)</td></tr><tr><td>WW</td><td>一年里的周数(1-53)(第一周从该年的第一天开始)</td></tr></tbody></table><h3 id="数值格式化的模板模式"><a href="#数值格式化的模板模式" class="headerlink" title="数值格式化的模板模式"></a>数值格式化的模板模式</h3><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>9</td><td>带有指定数值位数的值</td></tr><tr><td>0</td><td>带前导零的值</td></tr><tr><td>.(句点)</td><td>小数点</td></tr><tr><td>,(逗号)</td><td>分组(千)分隔符</td></tr><tr><td>PR</td><td>尖括号内负值</td></tr><tr><td>S</td><td>带符号的数值</td></tr><tr><td>L</td><td>货币符号</td></tr><tr><td>D</td><td>小数点</td></tr><tr><td>G</td><td>分组分隔符</td></tr><tr><td>MI</td><td>在指明的位置的负号(如果数字 &lt; 0)</td></tr><tr><td>PL</td><td>在指明的位置的正号(如果数字 &gt; 0)</td></tr><tr><td>SG</td><td>在指明的位置的正/负号</td></tr></tbody></table><h2 id="时间-日期函数和操作符"><a href="#时间-日期函数和操作符" class="headerlink" title="时间/日期函数和操作符"></a>时间/日期函数和操作符</h2><h3 id="下面是PostgreSQL中支持的时间-日期操作符的列表："><a href="#下面是PostgreSQL中支持的时间-日期操作符的列表：" class="headerlink" title="下面是PostgreSQL中支持的时间/日期操作符的列表："></a>下面是PostgreSQL中支持的时间/日期操作符的列表：</h3><table><thead><tr><th>操作符</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>date ‘2001-09-28’ + integer ‘7’</td><td>date ‘2001-10-05’</td></tr><tr><td>+</td><td>date ‘2001-09-28’ + interval ‘1 hour’</td><td>timestamp ‘2001-09-28 01:00’</td></tr><tr><td>+</td><td>date ‘2001-09-28’ + time ‘03:00’</td><td>timestamp ‘2001-09-28 03:00’</td></tr><tr><td>+</td><td>interval ‘1 day’ + interval ‘1 hour’</td><td>interval ‘1 day 01:00’</td></tr><tr><td>+</td><td>timestamp ‘2001-09-28 01:00’ + interval ‘23 hours’</td><td>timestamp ‘2001-09-29 00:00’</td></tr><tr><td>+</td><td>time ‘01:00’ + interval ‘3 hours’</td><td>time ‘04:00’</td></tr><tr><td>-</td><td>- interval ‘23 hours’</td><td>interval ‘-23:00’</td></tr><tr><td>-</td><td>date ‘2001-10-01’ - date ‘2001-09-28’</td><td>integer ‘3’</td></tr><tr><td>-</td><td>date ‘2001-10-01’ - integer ‘7’</td><td>date ‘2001-09-24’</td></tr><tr><td>-</td><td>date ‘2001-09-28’ - interval ‘1 hour’</td><td>timestamp ‘2001-09-27 23:00’</td></tr><tr><td>-</td><td>time ‘05:00’ - time ‘03:00’</td><td>interval ‘02:00’</td></tr><tr><td>-</td><td>time ‘05:00’ - interval ‘2 hours’</td><td>time ‘03:00’</td></tr><tr><td>-</td><td>timestamp ‘2001-09-28 23:00’ - interval ‘23 hours’</td><td>timestamp ‘2001-09-28 00:00’</td></tr><tr><td>-</td><td>interval ‘1 day’ - interval ‘1 hour’</td><td>interval ‘23:00’</td></tr><tr><td>-</td><td>timestamp ‘2001-09-29 03:00’ - timestamp ‘2001-09-27 12:00’</td><td>interval ‘1 day 15:00’</td></tr><tr><td>*</td><td>interval ‘1 hour’ * double precision ‘3.5’</td><td>interval ‘03:30’</td></tr><tr><td>/</td><td>interval ‘1 hour’ / double precision ‘1.5’</td><td>interval ‘00:40’</td></tr></tbody></table><h3 id="日期-时间函数"><a href="#日期-时间函数" class="headerlink" title="日期/时间函数"></a>日期/时间函数</h3><table><thead><tr><th>函数</th><th>返回类型</th><th>描述</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td>age(timestamp, timestamp)</td><td>interval</td><td>减去参数，生成一个使用年、月的”符号化”的结果</td><td>age(‘2001-04-10’, timestamp ‘1957-06-13’)</td><td>43 years 9 mons 27 days</td></tr><tr><td>age(timestamp)</td><td>interval</td><td>从current_date减去得到的数值</td><td>age(timestamp ‘1957-06-13’)</td><td>43 years 8 mons 3 days</td></tr><tr><td>current_date</td><td>date</td><td>今天的日期</td><td></td><td></td></tr><tr><td>current_time</td><td>time</td><td>现在的时间</td><td></td><td></td></tr><tr><td>current_timestamp</td><td>timestamp</td><td>日期和时间</td><td></td><td></td></tr><tr><td>date_part(text, timestamp)</td><td>double</td><td>获取子域(等效于extract)</td><td>date_part(‘hour’, timestamp ‘2001-02-16 20:38:40’)</td><td>20</td></tr><tr><td>date_part(text, interval)</td><td>double</td><td>获取子域(等效于extract)[可以获取数据表中某个日期字段的部分日期或时间]</td><td>date_part(‘month’, interval ‘2 years 3 months’)</td><td>3</td></tr><tr><td>date_trunc(text, timestamp)</td><td>timestamp</td><td>截断成指定的精度</td><td>date_trunc(‘hour’, timestamp ‘2001-02-16 20:38:40’)</td><td>2001-02-16 20:00:00+00</td></tr><tr><td>extract(field from timestamp)</td><td>double</td><td>获取子域</td><td>extract(hour from timestamp ‘2001-02-16 20:38:40’)</td><td>20</td></tr><tr><td>extract(field from interval)</td><td>double</td><td>获取子域</td><td>extract(month from interval ‘2 years 3 months’)</td><td>3</td></tr><tr><td>localtime</td><td>time</td><td>今日的时间</td><td></td><td></td></tr><tr><td>localtimestamp</td><td>timestamp</td><td>日期和时间</td><td></td><td></td></tr><tr><td>now()</td><td>timestamp</td><td>当前的日期和时间(等效于 current_timestamp)</td><td></td><td></td></tr><tr><td>timeofday()</td><td>text</td><td>当前日期和时间</td><td></td><td></td></tr></tbody></table><h3 id="日期-时间差（EXTRACT-date-part-epoch）"><a href="#日期-时间差（EXTRACT-date-part-epoch）" class="headerlink" title="日期/时间差（EXTRACT/date_part/epoch）"></a>日期/时间差（EXTRACT/date_part/epoch）</h3><table><thead><tr><th>域</th><th>描述</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td>CENTURY</td><td>世纪</td><td>EXTRACT(CENTURY FROM TIMESTAMP ‘2000-12-16 12:21:13’);</td><td>20</td></tr><tr><td>DAY</td><td>(月分)里的日期域(1-31)</td><td>EXTRACT(DAY from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>16</td></tr><tr><td>DECADE</td><td>年份域除以10</td><td>EXTRACT(DECADE from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>200</td></tr><tr><td>DOW</td><td>每周的星期号(0-6；星期天是0) (仅用于timestamp)</td><td>EXTRACT(DOW FROM TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>5</td></tr><tr><td>DOY</td><td>一年的第几天(1 -365/366) (仅用于 timestamp)</td><td>EXTRACT(DOY from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>47</td></tr><tr><td>HOUR</td><td>小时域(0-23)</td><td>EXTRACT(HOUR from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>20</td></tr><tr><td>MICROSECONDS</td><td>秒域，包括小数部分，乘以 1,000,000。</td><td>EXTRACT(MICROSECONDS from TIME ‘17:12:28.5’);</td><td>28500000</td></tr><tr><td>MILLENNIUM</td><td>千年</td><td>EXTRACT(MILLENNIUM from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>3</td></tr><tr><td>MILLISECONDS</td><td>秒域，包括小数部分，乘以 1000。</td><td>EXTRACT(MILLISECONDS from TIME ‘17:12:28.5’);</td><td>28500</td></tr><tr><td>MINUTE</td><td>分钟域(0-59)</td><td>EXTRACT(MINUTE from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>38</td></tr><tr><td>MONTH</td><td>对于timestamp数值，它是一年里的月份数(1-12)；对于interval数值，它是月的数目，然后对12取模(0-11)</td><td>EXTRACT(MONTH from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>2</td></tr><tr><td>QUARTER</td><td>该天所在的该年的季度(1-4)(仅用于 timestamp)</td><td>EXTRACT(QUARTER from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>1</td></tr><tr><td>SECOND</td><td>秒域，包括小数部分(0-59[1])</td><td>EXTRACT(SECOND from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>40</td></tr><tr><td>WEEK</td><td>该天在所在的年份里是第几周。</td><td>EXTRACT(WEEK from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>7</td></tr><tr><td>YEAR</td><td>年份域</td><td>EXTRACT(YEAR from TIMESTAMP ‘2001-02-16 20:38:40’);</td><td>2001</td></tr></tbody></table><h4 id="相对时间差–取自域"><a href="#相对时间差–取自域" class="headerlink" title="相对时间差–取自域"></a>相对时间差–取自域</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">EXTRACT</span>(EPOCH <span class="keyword">FROM</span> (<span class="built_in">TIMESTAMP</span> <span class="string">'2022-02-18 16:50:23'</span>- <span class="built_in">TIMESTAMP</span> <span class="string">'2022-02-18 16:49:23'</span>));                 <span class="comment">--60</span></span><br><span class="line"><span class="keyword">SELECT</span> date_part(<span class="string">'MINUTE'</span>,<span class="keyword">cast</span>(<span class="string">'2022-02-18 16:50:23'</span> <span class="keyword">as</span> <span class="built_in">TIMESTAMP</span>)-<span class="keyword">cast</span>(<span class="string">'2022-02-18 16:49:23'</span> <span class="keyword">as</span> <span class="built_in">TIMESTAMP</span>));    <span class="comment">--1 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 日期之差（绝对）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">round</span>(date_part(<span class="string">'epoch'</span>, <span class="built_in">TIMESTAMP</span>​​​​​​​​​​​​​​ <span class="string">'2020-05-05 11:11:20'</span> - <span class="built_in">TIMESTAMP</span> <span class="string">'2020-05-05 10:10:10'</span>));   <span class="comment">--获取秒差 3670=3600+60+10</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">round</span>(date_part(<span class="string">'epoch'</span>, <span class="built_in">TIMESTAMP</span> <span class="string">'2020-05-05 11:11:20'</span> - <span class="built_in">TIMESTAMP</span> <span class="string">'2020-05-05 10:10:10'</span>)/<span class="number">60</span>);   <span class="comment">--获取分钟差 61=60+1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">round</span>(date_part(<span class="string">'epoch'</span>, <span class="built_in">TIMESTAMP</span> <span class="string">'2020-05-05 12:11:20'</span> - <span class="built_in">TIMESTAMP</span> <span class="string">'2020-05-05 10:10:10'</span>)/<span class="number">60</span>/<span class="number">60</span>);    <span class="comment">--获取小时差 2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">Date</span>(<span class="string">'2022-04-02'</span>) - <span class="built_in">Date</span>(<span class="string">'2022-02-01'</span>);    <span class="comment">--获取天数差 60=31+28+1</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">extract</span>(<span class="keyword">year</span> <span class="keyword">from</span> age(<span class="built_in">TIMESTAMP</span> <span class="string">'2022-04-05'</span>,<span class="built_in">TIMESTAMP</span> <span class="string">'2021-02-04'</span>)) * <span class="number">12</span>  + <span class="keyword">extract</span>(<span class="keyword">MONTH</span> <span class="keyword">from</span> age(<span class="built_in">TIMESTAMP</span> <span class="string">'2022-04-05'</span>,<span class="built_in">TIMESTAMP</span> <span class="string">'2021-02-04'</span>));    <span class="comment">--获取月份差 14=12+2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">extract</span>(<span class="keyword">year</span> <span class="keyword">from</span> age(<span class="built_in">TIMESTAMP</span> <span class="string">'2022-07-08'</span>,<span class="built_in">TIMESTAMP</span> <span class="string">'2014-07-07'</span>));   <span class="comment">--获取年份差  8</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">extract</span>(<span class="keyword">year</span> <span class="keyword">from</span> age(<span class="built_in">TIMESTAMP</span> <span class="string">'2022-07-07'</span>,<span class="built_in">TIMESTAMP</span> <span class="string">'2014-07-07'</span>));   <span class="comment">--获取年份差  8</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">extract</span>(<span class="keyword">year</span> <span class="keyword">from</span> age(<span class="built_in">TIMESTAMP</span> <span class="string">'2022-07-06'</span>,<span class="built_in">TIMESTAMP</span> <span class="string">'2014-07-07'</span>));   <span class="comment">--获取年份差  7</span></span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://blog.csdn.net/lixinkuan328/article/details/107969398" target="_blank" rel="external nofollow noopener noreferrer">原文链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Postgresql中string转换成timestamp类型&quot;&gt;&lt;a href=&quot;#Postgresql中string转换成timestamp类型&quot; class=&quot;headerlink&quot; title=&quot;Postgresql中string转换成timestamp类
      
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>postgresql-raise函数</title>
    <link href="https://blog.wjc66.cn/postgresql-raise%E5%87%BD%E6%95%B0/"/>
    <id>https://blog.wjc66.cn/postgresql-raise%E5%87%BD%E6%95%B0/</id>
    <published>2022-09-08T06:32:44.000Z</published>
    <updated>2022-09-08T07:16:14.192Z</updated>
    
    <content type="html"><![CDATA[<p>raise函数<br>在PostgreSQL中，该函数用于打印字符串，类似于Java中的System.out.println()，Oracle中的dbms_output.put_line()。</p><p>用法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">raise notice 'My name is %, I am a %.', 'Lewis', 'coder';</span><br></pre></td></tr></table></figure><p>以上sql会在控制台输出My name is Lewis, I am a coder.。如果是在DBeaver里使用该函数，则会在output的tab里输出字符串。</p><p>raise后面的notice是级别，一共有debug/log/info/notice/warning/exception这些级别，可以任意指定一个级别。有些类似于Java里的日志框架，比如Log4j2之类的。</p><p>接着级别后面的是要输出的字符串参数，用一对单引号包括起来。这个字符串支持占位符的写法，也就是%这个字符。如果在字符串里使用了这个%，那么会自动使用字符串参数后面的参数来替换掉这里的%。有多少个占位符，就需要在第一个字符串参数后面加上多少个对应的参数。</p><p>这个占位符输出的用法，也和Log4j2类似。</p><p>由raise打印出来的信息可以输出到服务端日志，也可以输出到客户端，亦或者同时输出到二者。这个是由log_min_messages和client_min_messages两个参数控制的，这两个参数在数据库初始化时用到。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;raise函数&lt;br&gt;在PostgreSQL中，该函数用于打印字符串，类似于Java中的System.out.println()，Oracle中的dbms_output.put_line()。&lt;/p&gt;
&lt;p&gt;用法如下：&lt;/p&gt;
&lt;figure class=&quot;highligh
      
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
  </entry>
  
</feed>
