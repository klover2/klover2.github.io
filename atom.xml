<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>笔记</title>
  
  <subtitle>以每一个问题为目标，每解决一个问题给自己及时反馈</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.wjc66.cn/"/>
  <updated>2021-09-23T07:30:40.461Z</updated>
  <id>https://blog.wjc66.cn/</id>
  
  <author>
    <name>w-klover</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用git出现过的问题</title>
    <link href="https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8git%E5%87%BA%E7%8E%B0%E8%BF%87%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8git%E5%87%BA%E7%8E%B0%E8%BF%87%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-09-23T07:28:19.000Z</published>
    <updated>2021-09-23T07:30:40.461Z</updated>
    
    <content type="html"><![CDATA[<ol><li>拉取代码出现下面问题<br><code>load pubkey &quot;/c/Users/klover/.ssh/id_rsa&quot;: invalid format</code><br>是因为公钥之前我换过名字，导致出现问题<br>执行修复公钥命令，解决问题<br><code>ssh-keygen -f ~/.ssh/id_rsa -y &gt; ~/.ssh/id_rsa.pub</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;拉取代码出现下面问题&lt;br&gt;&lt;code&gt;load pubkey &amp;quot;/c/Users/klover/.ssh/id_rsa&amp;quot;: invalid format&lt;/code&gt;&lt;br&gt;是因为公钥之前我换过名字，导致出现问题&lt;br&gt;执行修复公钥命令，解
      
    
    </summary>
    
    
    
      <category term="git" scheme="https://blog.wjc66.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>封装elementui的table组件</title>
    <link href="https://blog.wjc66.cn/%E5%B0%81%E8%A3%85elementui%E7%9A%84table%E7%BB%84%E4%BB%B6/"/>
    <id>https://blog.wjc66.cn/%E5%B0%81%E8%A3%85elementui%E7%9A%84table%E7%BB%84%E4%BB%B6/</id>
    <published>2021-09-03T01:45:17.000Z</published>
    <updated>2021-09-23T07:24:47.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="table-vue"><a href="#table-vue" class="headerlink" title="table.vue"></a>table.vue</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-table</span><br><span class="line">    v-bind=<span class="string">"$props"</span></span><br><span class="line">    border</span><br><span class="line">    :header-cell-style=<span class="string">"&#123; 'text-align': 'center' &#125;"</span></span><br><span class="line">    style=<span class="string">"width: 100%"</span></span><br><span class="line">  &gt;</span><br><span class="line">    &lt;el-table-column</span><br><span class="line">      label=<span class="string">"序号"</span></span><br><span class="line">      width=<span class="string">"50"</span></span><br><span class="line">      align=<span class="string">"center"</span></span><br><span class="line">    &gt;</span><br><span class="line">      &lt;template slot-scope=<span class="string">"scope"</span>&gt;</span><br><span class="line">        &#123;&#123; scope.$index + <span class="number">1</span> &#125;&#125;</span><br><span class="line">      &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-table-column&gt;</span><br><span class="line">    &lt;template v-<span class="keyword">for</span>=<span class="string">"(col, key) in tableColumns"</span>&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        :key=<span class="string">"key"</span></span><br><span class="line">        v-bind=<span class="string">"col"</span></span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>el-table&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script lang="ts"&gt;</span></span><br><span class="line"><span class="regexp">import &#123; Vue, Component, Prop &#125; from 'vue-property-decorator'</span></span><br><span class="line"><span class="regexp">import &#123; Table &#125; from 'element-ui'</span></span><br><span class="line"><span class="regexp">export type Column = &#123;</span></span><br><span class="line"><span class="regexp">  label: string</span></span><br><span class="line"><span class="regexp">  prop?: string</span></span><br><span class="line"><span class="regexp">  width?: string</span></span><br><span class="line"><span class="regexp">  minWidth?: string</span></span><br><span class="line"><span class="regexp">  fixed?: string | boolean</span></span><br><span class="line"><span class="regexp">  align?: 'left' | 'center' | 'right'</span></span><br><span class="line"><span class="regexp">  formatter?: &#123; (row: any, col: any, value: any): unknown &#125;</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/ renderHeader的使用 https:/</span><span class="regexp">/www.cnblogs.com/yi</span>xiancheng/p/<span class="number">11525970.</span>html</span><br><span class="line">  renderHeader?: &#123; (h: <span class="built_in">any</span>, &#123; column, $index &#125;: <span class="built_in">any</span>): unknown &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    ...(Table <span class="keyword">as</span> <span class="built_in">any</span>).props,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="keyword">extends</span> Vue &#123;</span><br><span class="line">    <span class="meta">@Prop</span>(&#123; <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> ([]) &#125;) tableColumns!: Column</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">&lt;Table</span><br><span class="line">        v-loading=<span class="string">"loadings.fetch"</span></span><br><span class="line">        :data=<span class="string">"tableData"</span></span><br><span class="line">        :table-columns=<span class="string">"tableColumns"</span></span><br><span class="line">      /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  components: &#123; Pagination, Search, CreateCoupon, CreateAccountCoupon, Table &#125;,</span><br><span class="line">  name: <span class="string">'coupon'</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="keyword">extends</span> Vue &#123;</span><br><span class="line">  loadings = &#123; fetch: <span class="literal">false</span> &#125;</span><br><span class="line">  tableData: <span class="built_in">any</span> = []</span><br><span class="line"></span><br><span class="line">  <span class="comment">// table 列</span></span><br><span class="line">  <span class="keyword">get</span> tableColumns(): Column[] &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'创建人'</span>,</span><br><span class="line">        prop: <span class="string">'userInfo.nickname'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'主体名称'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.$createElement(CopyAccountTableColumnNew, &#123;</span><br><span class="line">            props: &#123;</span><br><span class="line">              align: <span class="string">'center'</span>,</span><br><span class="line">              <span class="string">'name-key'</span>: row?.accountInfo?.verifiedName,</span><br><span class="line">              <span class="string">'id-key'</span>: row?.accountInfo?.id,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'来源'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.couponSourceEnumMap.get(row.source)</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'类型'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.couponTypeEnumMap.get(row?.couponTemplate?.type)</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'使用场景'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> row.couponTemplate.usage.map(<span class="function">(<span class="params">item: <span class="built_in">any</span></span>) =&gt;</span> <span class="keyword">this</span>.couponUsageEnumMap.get(item)).join(<span class="string">'|'</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'折扣'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.convert(row)</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'状态'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.couponStatusMap.get(row.status)</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'创建时间'</span>,</span><br><span class="line">        prop: <span class="string">'createTime'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span>, col: <span class="built_in">any</span>, value: <span class="built_in">any</span></span>) =&gt;</span> <span class="keyword">this</span>.timeFormatter(row, col, value),</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'过期时间'</span>,</span><br><span class="line">        prop: <span class="string">'expiredAt'</span>,</span><br><span class="line">        align: <span class="string">'center'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span>, col: <span class="built_in">any</span>, value: <span class="built_in">any</span></span>) =&gt;</span> <span class="keyword">this</span>.timeFormatter(row, col, value),</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">'操作'</span>,</span><br><span class="line">        formatter: <span class="function">(<span class="params">row: <span class="built_in">any</span>, col: <span class="built_in">any</span>, value: <span class="built_in">any</span></span>) =&gt;</span> <span class="keyword">this</span>.tableBtn(row, col, value),</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  timeFormatter(row: <span class="built_in">any</span>, col: <span class="built_in">any</span>, value: <span class="built_in">string</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> moment(value).format(<span class="string">'YYYY-MM-DD HH:mm:ss'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 操作按钮</span></span><br><span class="line"><span class="comment">   * 文档 https://vuejs.org/v2/guide/render-function.html#createElement-Arguments</span></span><br><span class="line"><span class="comment">   * @param row</span></span><br><span class="line"><span class="comment">   * @param col</span></span><br><span class="line"><span class="comment">   * @param value</span></span><br><span class="line"><span class="comment">   * @returns</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  tableBtn(row: <span class="built_in">any</span>, col: <span class="built_in">any</span>, value: <span class="built_in">any</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> h = <span class="keyword">this</span>.$createElement</span><br><span class="line">    <span class="keyword">return</span> h(</span><br><span class="line">      <span class="string">'el-button'</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        style: &#123;</span><br><span class="line">          fontSize: <span class="string">'18px;'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        props: &#123;</span><br><span class="line">          size: <span class="string">'mini'</span>,</span><br><span class="line">          plain: <span class="literal">true</span>,</span><br><span class="line">          <span class="keyword">type</span>: <span class="string">'text'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        on: &#123;</span><br><span class="line">          click: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">              name: <span class="string">'couponRecords'</span>,</span><br><span class="line">              params: &#123;</span><br><span class="line">                accountCouponId: row?.id,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      [<span class="string">'使用详情'</span>],</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;table-vue&quot;&gt;&lt;a href=&quot;#table-vue&quot; class=&quot;headerlink&quot; title=&quot;table.vue&quot;&gt;&lt;/a&gt;table.vue&lt;/h2&gt;&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;el-table&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v-bind=&lt;span class=&quot;string&quot;&gt;&quot;$props&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    border&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :header-cell-style=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123; &#39;text-align&#39;: &#39;center&#39; &amp;#125;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    style=&lt;span class=&quot;string&quot;&gt;&quot;width: 100%&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;el-table-column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      label=&lt;span class=&quot;string&quot;&gt;&quot;序号&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width=&lt;span class=&quot;string&quot;&gt;&quot;50&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      align=&lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;template slot-scope=&lt;span class=&quot;string&quot;&gt;&quot;scope&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;#123; scope.$index + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;&lt;span class=&quot;regexp&quot;&gt;/template&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;    &amp;lt;/&lt;/span&gt;el-table-column&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;template v-&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;(col, key) in tableColumns&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;el-table-column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :key=&lt;span class=&quot;string&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        v-bind=&lt;span class=&quot;string&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;&lt;span class=&quot;regexp&quot;&gt;/template&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  &amp;lt;/&lt;/span&gt;el-table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/template&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;&amp;lt;script lang=&quot;ts&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;import &amp;#123; Vue, Component, Prop &amp;#125; from &#39;vue-property-decorator&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;import &amp;#123; Table &amp;#125; from &#39;element-ui&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;export type Column = &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  label: string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  prop?: string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  width?: string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  minWidth?: string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  fixed?: string | boolean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  align?: &#39;left&#39; | &#39;center&#39; | &#39;right&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  formatter?: &amp;#123; (row: any, col: any, value: any): unknown &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  /&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/ renderHeader的使用 https:/&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/www.cnblogs.com/yi&lt;/span&gt;xiancheng/p/&lt;span class=&quot;number&quot;&gt;11525970.&lt;/span&gt;html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  renderHeader?: &amp;#123; (h: &lt;span class=&quot;built_in&quot;&gt;any&lt;/span&gt;, &amp;#123; column, $index &amp;#125;: &lt;span class=&quot;built_in&quot;&gt;any&lt;/span&gt;): unknown &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Component&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  props: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...(Table &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;any&lt;/span&gt;).props,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; Vue &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Prop&lt;/span&gt;(&amp;#123; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; ([]) &amp;#125;) tableColumns!: Column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="vue" scheme="https://blog.wjc66.cn/tags/vue/"/>
    
      <category term="element" scheme="https://blog.wjc66.cn/tags/element/"/>
    
  </entry>
  
  <entry>
    <title>typescript泛型的使用</title>
    <link href="https://blog.wjc66.cn/typescript%E6%B3%9B%E5%9E%8B%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/typescript%E6%B3%9B%E5%9E%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-08-06T10:07:58.000Z</published>
    <updated>2021-09-23T07:24:47.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Partial"><a href="#Partial" class="headerlink" title="Partial"></a>Partial</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Make all properties in T optional</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">type Partial&lt;T&gt; = &#123;</span><br><span class="line">  [P <span class="keyword">in</span> keyof T]?: T[P];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="keyof-指的是把我们一个对象里面的-键值对里的键【key】-给罗列取出来，并把它们联合起来形成一种联合类型"><a href="#keyof-指的是把我们一个对象里面的-键值对里的键【key】-给罗列取出来，并把它们联合起来形成一种联合类型" class="headerlink" title="keyof 指的是把我们一个对象里面的 键值对里的键【key】 给罗列取出来，并把它们联合起来形成一种联合类型"></a>keyof 指的是把我们一个对象里面的 键值对里的键【key】 给罗列取出来，并把它们联合起来形成一种联合类型</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">type QunYou = Person &amp; QunYouAttribute;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  QunYou = &#123;</span></span><br><span class="line"><span class="comment">    name: string;</span></span><br><span class="line"><span class="comment">    age: number;</span></span><br><span class="line"><span class="comment">    isLsp: boolean;</span></span><br><span class="line"><span class="comment">    sex: '男' | '女' | 0 | 1;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">type QunYouKeys = keyof QunYou; <span class="comment">// "name" | "age" | "isLsp" | "sex"</span></span><br></pre></td></tr></table></figure><p><code>in</code> 又是什么</p><p>Partial<t> 里面的 P 充当了另一个泛型。</t></p><p>in 在这里充当一个遍历的作用</p><p>把 <code>keyof T</code> 进行一个个遍历并且每个都单独拿出来生成新的 “键值对”</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 内部就会变成这样</span></span><br><span class="line">type Partial&lt;T&gt; = &#123;</span><br><span class="line">  [P <span class="keyword">in</span> keyof T]?: T[P];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">type newQunyou = Partial&lt;QunYou&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line">type Partial&lt;QunYou&gt; = &#123;</span><br><span class="line">  [P <span class="keyword">in</span> <span class="string">'name'</span> | <span class="string">'age'</span> | <span class="string">'isLsp'</span> | <span class="string">'sex'</span>]?: QunYou[P];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line">type Partial = &#123;</span><br><span class="line">  name?: QunYou[<span class="string">"name"</span>];</span><br><span class="line">  age?: QunYou[<span class="string">"age"</span>];</span><br><span class="line">  isLsp?: QunYou[<span class="string">"isLsp"</span>];</span><br><span class="line">  sex?:QunYou[<span class="string">"sex"</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line">type Partial = &#123;</span><br><span class="line">  name?: string;</span><br><span class="line">  age?: number;</span><br><span class="line">  isLsp?: boolean;</span><br><span class="line">  sex?: <span class="string">'男'</span> | <span class="string">'女'</span> | <span class="number">0</span> | <span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>所以这个 <code>Partial</code> 就达到我们的效果 【通过泛型让目标类型中的所有属性变为可选】</p><h2 id="Pick"><a href="#Pick" class="headerlink" title="Pick"></a>Pick</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * From T, pick a set of properties whose keys are in the union K</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">type Pick&lt;T, K extends keyof T&gt; = &#123;</span><br><span class="line">  [P <span class="keyword">in</span> K]: T[P];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>通过上面 <code>Partial</code> 讲解这个 <code>Pick</code> 相信大伙应该好理解很多了。</p><p>Pick 接收两个参数做泛型。</p><p>这里第二个泛型 K 后面跟着约束条件 K extends keyof T，</p><p>泛型 的 <code>extends</code>， 与后续 运算的 extends 需要稍微留心做个区分。 这次看 extends 在这里充当 类似于判断的 “约束” 角色</p><p>意思就是说 这个 K 必须 符合 keyof T 这个集合里面。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">type QunYou = Person &amp; QunYouAttribute;</span><br><span class="line"></span><br><span class="line">type QunYouOnlyLsp = Pick&lt;QunYou, <span class="string">'name'</span> | <span class="string">'isLsp'</span>&gt;;</span><br><span class="line"><span class="comment">// 内部就会变成这样</span></span><br><span class="line">type Pick&lt;T, K extends keyof T&gt; = &#123;</span><br><span class="line">    [P <span class="keyword">in</span> K]: T[P];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">type QunYouOnlyLsp = Pick&lt;QunYou, <span class="string">"name"</span> | <span class="string">"isLsp"</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line"><span class="comment">// "name" | "isLsp"  是否包含在 K的集合里面？ 是的，符合要求</span></span><br><span class="line">type Pick&lt;QunYou, <span class="string">"name"</span> | <span class="string">"isLsp"</span>&gt; = &#123;</span><br><span class="line">  [P <span class="keyword">in</span> <span class="string">'name'</span> | <span class="string">'isLsp'</span>]: QunYou[P];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line">type Pick = &#123;</span><br><span class="line">  name: string;</span><br><span class="line">  isLsp: boolean;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Extract"><a href="#Extract" class="headerlink" title="Extract"></a>Extract</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Extract from T those types that are assignable to U</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">type Extract&lt;T, U&gt; = T extends U ? T : never;</span><br><span class="line"></span><br><span class="line">就是在一个对象中取出你想要的几个值</span><br><span class="line">Extract&lt;QunYou, <span class="string">'name'</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="Omit-和-Exclude"><a href="#Omit-和-Exclude" class="headerlink" title="Omit 和 Exclude"></a>Omit 和 Exclude</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Exclude from T those types that are assignable to U</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">type Exclude&lt;T, U&gt; = T extends U ? never : T;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Construct a type with the properties of T except for those in type K.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">type Omit&lt;T, K extends keyof any&gt; = Pick&lt;T, Exclude&lt;keyof T, K&gt;&gt;;</span><br></pre></td></tr></table></figure><blockquote><p>这里是 运算的 extends 书接上面 的泛型 的 extends，在此处记得对比。</p></blockquote><p>同样扮演 “判断” 的角色， 但是 在所谓 “TS 中的三目运算符” 里面，</p><p>更像是一层 “过滤” 的作用。</p><p>我们依旧以上面的例子作为介绍</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">type QunYou = Person &amp; QunYouAttribute;</span><br><span class="line"></span><br><span class="line">type QunDaLao = Omit&lt;QunYou, <span class="string">'name'</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// type Omit&lt;T, K extends keyof any&gt; = Pick&lt;T, Exclude&lt;keyof T, K&gt;&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line">type QunDaLao = Pick&lt;QunYou, Exclude&lt;keyof T, K&gt;&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主要观察Exclude</span></span><br><span class="line">type ExcludeKeys = Exclude&lt;keyof QunYou, <span class="string">"name"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓    type Exclude&lt;T, U&gt; = T extends U ? never : T;</span></span><br><span class="line">type Exclude&lt;<span class="string">"name"</span> | <span class="string">"age"</span> | <span class="string">"isLsp"</span> | <span class="string">"sex"</span>, <span class="string">"name"</span>&gt;  =  T extends U ? never : T;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓ 继续观察， 它将这么去 “判断”</span></span><br><span class="line"><span class="comment">//  在  T extends U ? never : T; 里面</span></span><br><span class="line"><span class="comment">//  将 T 里面的联合类型逐个逐个 与 U 进行 约束判断</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  T 里面的 "name" 与 U 的 "name" (类型)符合吗？ 符合， 返回 never ，既 什么都没有。</span></span><br><span class="line"><span class="comment">//  T 里面的 "age" 与 U 的 "name" (类型)符合吗？ 不符合 返回 "age" 本身。</span></span><br><span class="line"><span class="comment">//  T 里面的 "isLsp" 与 U 的 "name" (类型)符合吗？ 不符合 返回 "isLsp" 本身。</span></span><br><span class="line"><span class="comment">//  T 里面的 "sex" 与 U 的 "name" (类型)符合吗？ 不符合 返回 "sex" 本身。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 所以 我们得到的结果就是 被 "过滤"后的 联合类型</span></span><br><span class="line">type ExcludeResult = <span class="string">"age"</span> | <span class="string">"isLsp"</span> | <span class="string">"sex"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 那么回过头继续看 Omit</span></span><br><span class="line">type QunDaLao = Pick&lt;QunYou, Exclude&lt;keyof T, K&gt;&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line">type QunDaLao = Pick&lt;QunYou, <span class="string">"age"</span> | <span class="string">"isLsp"</span> | <span class="string">"sex"</span>&gt;</span><br><span class="line"><span class="comment">//  嗯？是不是很熟悉了，跟上面一样</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 所以 Omit 他的结果就达到了剔除  "name"的效果</span></span><br><span class="line">type QunDaLao = &#123;</span><br><span class="line">  age: number;</span><br><span class="line">  isLsp: boolean;</span><br><span class="line">  sex: <span class="string">'男'</span> | <span class="string">'女'</span> | <span class="number">0</span> | <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后 再聊一个 infer 与 typeof 关键字</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> qunYous: QunHaiXing[] = [];</span><br><span class="line"></span><br><span class="line">type whatIsQunYou&lt;T&gt; = T extends <span class="built_in">Array</span>&lt;infer V&gt; ? V : never;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newQunYou: whatIsQunYou&lt;<span class="keyword">typeof</span> qunYous&gt; = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>infer 的意思是待推导一个泛型，</p><p>在这里形容更像是一个 “标记”，</p><p>我在这里先把 V 给标记了，等下你们给我推出这个 V 的类型然后让我用！</p><p>注意看 typeof 的位置，他处在泛型的位置，</p><p>这将意味着 “Ts 的 typeof” 和 “Js 和 typeof” 不是一个东西。</p><p>在普通写运行代码的地方 typeof 是真的会运行并返回出一个变量的类型字符串。</p><p>但是写在类型地方的 typeof 仅起到一个静态类型的作用（既不会真的返回一个字符串出来）</p><p>那他在这里的作用是什么</p><p>还是同一个思想，只不过他在这里 typeof 返回的是 TS 里的类型</p><p>即</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> qunYous: QunHaiXing[] = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newQunYou: whatIsQunYou&lt;<span class="keyword">typeof</span> qunYous&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line"><span class="keyword">const</span> newQunYou: whatIsQunYou&lt;<span class="built_in">Array</span>&lt;QunHaiXing&gt;&gt;;</span><br><span class="line"><span class="comment">// 或者是 whatIsQunYou&lt;QunHaiXing[]&gt;</span></span><br></pre></td></tr></table></figure><p>回过头继续看 whatIsQunYou 中 infer 的标记 是怎么标记法！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">type whatIsQunYou&lt;T&gt; = T extends <span class="built_in">Array</span>&lt;infer V&gt; ? V : never;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newQunYou: whatIsQunYou&lt;<span class="built_in">Array</span>&lt;QunHaiXing&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ↓</span></span><br><span class="line">type whatIsQunYou&lt; <span class="built_in">Array</span>&lt;QunHaiXing&gt; &gt; = <span class="built_in">Array</span>&lt;QunHaiXing&gt; extends <span class="built_in">Array</span>&lt;infer V&gt; ? V : never;</span><br><span class="line"></span><br><span class="line"><span class="comment">// T 里面的 Array&lt;QunHaiXing&gt; 与 Array&lt;infer V&gt; 类型是否符合吗？ 符合， 符合返回 V</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="comment">// 等等！ V 是什么！！！</span></span><br><span class="line"><span class="comment">// ..</span></span><br><span class="line"><span class="comment">// 我们看看位置进行“对比”</span></span><br><span class="line"><span class="comment">// 我们用简单的语言进行概括。</span></span><br><span class="line"><span class="comment">// 把尖括号的位置 一样的！就赋值给 V！</span></span><br><span class="line"><span class="comment">// Array&lt;QunHaiXing&gt; 与 Array&lt;infer V&gt; 对比下</span></span><br><span class="line"><span class="comment">// 很明显 QunHaiXing 这个类型符合 V 的位置 所以把他赋值给V</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 重新来！！</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// T 里面的 Array&lt;QunHaiXing&gt; 与 Array&lt;infer V&gt; 类型是否符合吗？ 符合， 符合返回 QunHaiXing</span></span><br></pre></td></tr></table></figure><p>这就是 infer 具有推导作用的关键字。</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p><a href="https://zhuanlan.zhihu.com/p/361968852" target="_blank" rel="external nofollow noopener noreferrer">文章来源</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 冻结客户类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">enum</span> BlockOrUnblockCustomerActionEnum &#123;</span><br><span class="line">  <span class="comment">/** 永久冻结 */</span></span><br><span class="line">  TEMPORARY_BLOCK = <span class="string">'TEMPORARY_BLOCK'</span>,</span><br><span class="line">  <span class="comment">/** 临时冻结 */</span></span><br><span class="line">  PERMANENT_BLOCK = <span class="string">'PERMANENT_BLOCK'</span>,</span><br><span class="line">  <span class="comment">/** 解冻 */</span></span><br><span class="line">  UNBLOCK = <span class="string">'UNBLOCK'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 冻结客户理由</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">enum</span> BlockOrUnblockCustomerReasonEnum &#123;</span><br><span class="line">  CUSTOMER_REQUEST = <span class="string">'CUSTOMER_REQUEST'</span>,</span><br><span class="line">  CLIENT_REQUEST = <span class="string">'CLIENT_REQUEST'</span>,</span><br><span class="line">  DECEASED = <span class="string">'DECEASED'</span>,</span><br><span class="line">  ACCOUNT_CLOSURE = <span class="string">'ACCOUNT_CLOSURE'</span>,</span><br><span class="line">  SUSPICIOUS_ACTIVITY = <span class="string">'SUSPICIOUS_ACTIVITY'</span>,</span><br><span class="line">  FRAUDULENT_ACTIVITY = <span class="string">'FRAUDULENT_ACTIVITY'</span>,</span><br><span class="line">  POTENTIAL_SANCTION = <span class="string">'POTENTIAL_SANCTION'</span>,</span><br><span class="line">  SANCTIONED_CUSTOMER = <span class="string">'SANCTIONED_CUSTOMER'</span>,</span><br><span class="line">  BLACKLISTED_CUSTOMER = <span class="string">'BLACKLISTED_CUSTOMER'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> IBlockOrUnblockCustomerReason = &#123;</span><br><span class="line">  [BlockOrUnblockCustomerActionEnum.PERMANENT_BLOCK]: BlockOrUnblockCustomerReasonEnum;</span><br><span class="line">  [BlockOrUnblockCustomerActionEnum.TEMPORARY_BLOCK]: Extract&lt;</span><br><span class="line">    BlockOrUnblockCustomerReasonEnum,</span><br><span class="line">    | BlockOrUnblockCustomerReasonEnum.CUSTOMER_REQUEST</span><br><span class="line">    | BlockOrUnblockCustomerReasonEnum.CLIENT_REQUEST</span><br><span class="line">    | BlockOrUnblockCustomerReasonEnum.SUSPICIOUS_ACTIVITY</span><br><span class="line">    | BlockOrUnblockCustomerReasonEnum.POTENTIAL_SANCTION</span><br><span class="line">  &gt;;</span><br><span class="line">  [BlockOrUnblockCustomerActionEnum.UNBLOCK]: Extract&lt;</span><br><span class="line">    BlockOrUnblockCustomerReasonEnum,</span><br><span class="line">    BlockOrUnblockCustomerReasonEnum.CUSTOMER_REQUEST | BlockOrUnblockCustomerReasonEnum.CLIENT_REQUEST</span><br><span class="line">  &gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> BlockOrUnblockCustomerInput&lt;K <span class="keyword">extends</span> BlockOrUnblockCustomerActionEnum, T <span class="keyword">extends</span> IBlockOrUnblockCustomerReason&gt; = &#123;</span><br><span class="line">  <span class="comment">// 冻结类型</span></span><br><span class="line">  action: K;</span><br><span class="line">  <span class="comment">// 理由</span></span><br><span class="line">  reason: T[K];</span><br><span class="line">  <span class="comment">// 自定义</span></span><br><span class="line">  comment?: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">async</span> blockOrUnblockCustomer&lt;K <span class="keyword">extends</span> BlockOrUnblockCustomerActionEnum, T <span class="keyword">extends</span> IBlockOrUnblockCustomerReason&gt;(</span><br><span class="line">    customerHashId: <span class="built_in">string</span>,</span><br><span class="line">    dataParams: BlockOrUnblockCustomerInput&lt;K, T&gt;,</span><br><span class="line">  ) &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Partial&quot;&gt;&lt;a href=&quot;#Partial&quot; class=&quot;headerlink&quot; title=&quot;Partial&quot;&gt;&lt;/a&gt;Partial&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
    
    
      <category term="typescript" scheme="https://blog.wjc66.cn/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>nestjs单元测试</title>
    <link href="https://blog.wjc66.cn/nestjs%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>https://blog.wjc66.cn/nestjs%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</id>
    <published>2021-07-12T15:02:38.000Z</published>
    <updated>2021-09-23T07:24:47.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h2><ol><li>You are trying to <code>import</code> a file after the Jest environment has been torn down.<br>或者 TypeError: Right-hand side of ‘instanceof’ is not an object</li></ol><p>在最外层加上 <code>jest.useFakeTimers();</code></p><ol start="2"><li>Timeout - Async callback was not invoked within the 5000 ms timeout specified by jest.setTimeout.Timeout - Async callback was not invoked within the 5000 ms timeout specified by jest.setTimeout.Error:</li></ol><p>超时错误<br>在最外层加上 <code>jest.setTimeout(1000000);</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;出现的问题&quot;&gt;&lt;a href=&quot;#出现的问题&quot; class=&quot;headerlink&quot; title=&quot;出现的问题&quot;&gt;&lt;/a&gt;出现的问题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;You are trying to &lt;code&gt;import&lt;/code&gt; a file after t
      
    
    </summary>
    
    
    
      <category term="nestjs" scheme="https://blog.wjc66.cn/tags/nestjs/"/>
    
  </entry>
  
  <entry>
    <title>nodejs下载文件遇到内存超出导致pm2重启</title>
    <link href="https://blog.wjc66.cn/nodejs%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E9%81%87%E5%88%B0%E5%86%85%E5%AD%98%E8%B6%85%E5%87%BA%E5%AF%BC%E8%87%B4pm2%E9%87%8D%E5%90%AF/"/>
    <id>https://blog.wjc66.cn/nodejs%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E9%81%87%E5%88%B0%E5%86%85%E5%AD%98%E8%B6%85%E5%87%BA%E5%AF%BC%E8%87%B4pm2%E9%87%8D%E5%90%AF/</id>
    <published>2021-06-28T09:42:45.000Z</published>
    <updated>2021-09-23T07:24:47.890Z</updated>
    
    <content type="html"><![CDATA[<p>例子如下，由于 request 下载速度特别快，而自定义的处理方法更不上导致流一直写在内存中得不到释放，所以这里加上了 req.pause();和 req.resume();</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> res = <span class="keyword">await</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">reslove, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> req = request</span><br><span class="line">    .get(url)</span><br><span class="line">    .auth(worldCheck.userName, worldCheck.password, <span class="literal">false</span>)</span><br><span class="line">    .on(<span class="string">"response"</span>, () =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"开始"</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    .on(<span class="string">"data"</span>, <span class="keyword">async</span> (chunk: any) =&gt; &#123;</span><br><span class="line">      <span class="comment">// _md5.update(chunk);</span></span><br><span class="line">      <span class="comment">// 暂停</span></span><br><span class="line">      req.pause();</span><br><span class="line">      <span class="keyword">let</span> data = chunk.toString();</span><br><span class="line">      <span class="keyword">if</span> (lastRow) &#123;</span><br><span class="line">        data = lastRow + data;</span><br><span class="line">        lastRow = <span class="string">""</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> rows: any[] = [];</span><br><span class="line">      <span class="comment">// 数据正好完整</span></span><br><span class="line">      <span class="keyword">if</span> (data.slice(data.length - <span class="number">2</span>) === <span class="string">"\r\n"</span>) &#123;</span><br><span class="line">        rows = data.split(<span class="regexp">/[\r\n]/</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        rows = data.split(<span class="regexp">/[\r\n]/</span>);</span><br><span class="line">        lastRow = rows.pop();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 处理数据</span></span><br><span class="line">      <span class="keyword">if</span> (type === DownloadFileEnum.Wc1) &#123;</span><br><span class="line">        <span class="keyword">await</span> $<span class="keyword">this</span>.dealRows(rows);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === DownloadFileEnum.Wc1Names) &#123;</span><br><span class="line">        <span class="keyword">await</span> $<span class="keyword">this</span>.dealNamesRows(rows);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 恢复</span></span><br><span class="line">      req.resume();</span><br><span class="line">    &#125;)</span><br><span class="line">    .on(<span class="string">"error"</span>, (err: any) =&gt; &#123;</span><br><span class="line">      Logger4.error(err);</span><br><span class="line">      reject(<span class="literal">false</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    .on(<span class="string">"end"</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="comment">// console.log('结束');</span></span><br><span class="line">      <span class="comment">// const newSign = _md5.digest('hex');</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// if (newSign === sign) &#123;</span></span><br><span class="line">      <span class="comment">// 数据正确 保存到数据库</span></span><br><span class="line">      <span class="comment">// 保存最后一行数据</span></span><br><span class="line">      <span class="keyword">if</span> (lastRow) &#123;</span><br><span class="line">        <span class="keyword">const</span> rows = [lastRow];</span><br><span class="line">        <span class="keyword">if</span> (type === DownloadFileEnum.Wc1) &#123;</span><br><span class="line">          <span class="keyword">await</span> $<span class="keyword">this</span>.dealRows(rows);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === DownloadFileEnum.Wc1Names) &#123;</span><br><span class="line">          <span class="keyword">await</span> $<span class="keyword">this</span>.dealNamesRows(rows);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      reslove(<span class="literal">true</span>);</span><br><span class="line">      <span class="comment">// &#125; else &#123;</span></span><br><span class="line">      <span class="comment">//   reject(false);</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .on(<span class="string">"close"</span>, () =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"关闭"</span>);</span><br><span class="line">      req.end();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;例子如下，由于 request 下载速度特别快，而自定义的处理方法更不上导致流一直写在内存中得不到释放，所以这里加上了 req.pause();和 req.resume();&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="nodejs" scheme="https://blog.wjc66.cn/tags/nodejs/"/>
    
      <category term="request" scheme="https://blog.wjc66.cn/tags/request/"/>
    
  </entry>
  
  <entry>
    <title>linux系统中限制了用户可以watch文件变更的最大数</title>
    <link href="https://blog.wjc66.cn/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E9%99%90%E5%88%B6%E4%BA%86%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5watch%E6%96%87%E4%BB%B6%E5%8F%98%E6%9B%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0/"/>
    <id>https://blog.wjc66.cn/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E9%99%90%E5%88%B6%E4%BA%86%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5watch%E6%96%87%E4%BB%B6%E5%8F%98%E6%9B%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0/</id>
    <published>2021-06-22T02:32:18.000Z</published>
    <updated>2021-09-23T07:24:47.889Z</updated>
    
    <content type="html"><![CDATA[<p>启动或者编译报<br>System limit for number of file watchers reached</p><p>原因：<br>linux 系统中限制了用户可以 watch 文件变更的最大数，因此需要通过 sysctl.conf 进行更改数值</p><p>临时限额增加可以设置新的指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo sysctl fs.inotify.max_user_watches = 524288</span><br><span class="line">$ sudo sysctl -p</span><br></pre></td></tr></table></figure><p>永久增加限额</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> fs.inotify.max_user_watches = 524288 | sudo tee -a /etc/sysctl.conf</span><br><span class="line">$ sudo sysctl -p</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;启动或者编译报&lt;br&gt;System limit for number of file watchers reached&lt;/p&gt;
&lt;p&gt;原因：&lt;br&gt;linux 系统中限制了用户可以 watch 文件变更的最大数，因此需要通过 sysctl.conf 进行更改数值&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="linux" scheme="https://blog.wjc66.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux环境下安装elasticsearch</title>
    <link href="https://blog.wjc66.cn/linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85elasticsearch/"/>
    <id>https://blog.wjc66.cn/linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85elasticsearch/</id>
    <published>2021-06-21T12:32:57.000Z</published>
    <updated>2021-09-23T07:24:47.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>1.ElasticSearch 下载地址：</p><p><code>https://www.elastic.co/downloads/elasticsearch</code>（最新 es）</p><p>如果你想要下载其他版本请访问<code>https://www.elastic.co/cn/downloads/past-releases#elasticsearch</code></p><p>我这里选择的是 7.12.0<br>进入/home 文件夹下（最好不要放在 root 下，会报错）<br>下载命令<br><code>wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.12.0-linux-x86_64.tar.gz</code></p><a id="more"></a><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p><code>tar -xzvf elasticsearch-7.12.0-linux-x86_64.tar.gz</code></p><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p>adduser elasticsearch（回车 按照提示输入两次密码，其他的直接回车）</p><h2 id="赋予权限"><a href="#赋予权限" class="headerlink" title="赋予权限"></a>赋予权限</h2><p>chown -R elasticsearch elasticsearch-7.12.0<br>可以使用（ll 命令查看）</p><h2 id="进入新用户"><a href="#进入新用户" class="headerlink" title="进入新用户"></a>进入新用户</h2><p>su elasticsearch</p><h2 id="配置-elasticsearch-自带-jdk"><a href="#配置-elasticsearch-自带-jdk" class="headerlink" title="配置 elasticsearch 自带 jdk"></a>配置 elasticsearch 自带 jdk</h2><p>修改 bin 下 elasticsearch-env 文件<br><code>vim elasticsearch-env</code><br><img src="https://img-blog.csdnimg.cn/20210621204459266.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> [ ! -z <span class="string">"<span class="variable">$JAVA_HOME</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment"># fallback to JAVA_HOME</span></span><br><span class="line">  <span class="comment"># 取消警告</span></span><br><span class="line">  <span class="comment"># echo "warning: usage of JAVA_HOME is deprecated, use ES_JAVA_HOME" &gt;&amp;2</span></span><br><span class="line">  JAVA=<span class="string">"/home/elasticsearch/elasticsearch-7.12.0/jdk/bin/java"</span></span><br><span class="line">  JAVA_TYPE=<span class="string">"JAVA_HOME"</span></span><br></pre></td></tr></table></figure><p>保存就好</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>在 bin 下<br><code>./elasticsearch</code> 或者<br>后台启动 <code>./elasticsearch -d</code></p><p>检测是否正常启动<br>lsof -i:9200<br>curl 127.0.0.1:9200</p><h2 id="其他配置（可以不用配置）"><a href="#其他配置（可以不用配置）" class="headerlink" title="其他配置（可以不用配置）"></a>其他配置（可以不用配置）</h2><p>配置让外网访问<br>vim config/elasticsearch.yml<br><code>network.host: 0.0.0.0</code></p><h2 id="遇到的错误"><a href="#遇到的错误" class="headerlink" title="遇到的错误"></a>遇到的错误</h2><ol><li><p>could not find java in JAVA_HOME at ￥ ELASTIC_HOME/jdk//bin/java<br>这是 jdk 版本问题</p></li><li><p>Error: Could not find or load main class org.elasticsearch.tools.java_version_checker.JavaVersionCh</p></li></ol><p>把 elasticsearch 目录换到不属于 root 目录的其他目录就行了</p><p>3.</p><blockquote><p><img src="https://img-blog.csdnimg.cn/20210621203731298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>不能使用 root 用户启动</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;1.ElasticSearch 下载地址：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www.elastic.co/downloads/elasticsearch&lt;/code&gt;（最新 es）&lt;/p&gt;
&lt;p&gt;如果你想要下载其他版本请访问&lt;code&gt;https://www.elastic.co/cn/downloads/past-releases#elasticsearch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我这里选择的是 7.12.0&lt;br&gt;进入/home 文件夹下（最好不要放在 root 下，会报错）&lt;br&gt;下载命令&lt;br&gt;&lt;code&gt;wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.12.0-linux-x86_64.tar.gz&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Elasticsearch" scheme="https://blog.wjc66.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>windows10环境下安装elasticsearch</title>
    <link href="https://blog.wjc66.cn/windows10%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85elasticsearch/"/>
    <id>https://blog.wjc66.cn/windows10%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85elasticsearch/</id>
    <published>2021-06-19T12:32:16.000Z</published>
    <updated>2021-09-23T07:24:47.890Z</updated>
    
    <content type="html"><![CDATA[<p>注意 现在安装 Elasticsearch 可以不需要去安装 jdk 有自带</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>1.ElasticSearch 下载地址：</p><p><code>https://www.elastic.co/downloads/elasticsearch</code>（最新 es）</p><p>如果你想要下载其他版本请访问<code>https://www.elastic.co/cn/downloads/past-releases#elasticsearch</code></p><a id="more"></a><p>2.下载安装包后解压<br><img src="https://img-blog.csdnimg.cn/20210619201301236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>进入 bin 目录下,双击执行 elasticsearch.bat<br><code>注意</code>:在启动前需要配置 jdk 环境，如果你本地已经配置了 jdk 就需要注意 jdk 版本问题，由于 es 现在都自带 jdk,所以使用 vscode 或者其他工具编辑<code>elasticsearch-certgen.bat</code><br>加入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rem 配置自己的jdk</span><br><span class="line"><span class="keyword">set</span> JAVA_HOME=D:/downloads/elasticsearch-7.12.0-windows-x86_64/elasticsearch-7.12.0/jdk</span><br></pre></td></tr></table></figure><p><code>注意上面的路径是你es解压后的路径</code></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>双击启动 或者打开命令进入 bin 文件夹 写入 <code>.\elasticsearch</code> 回车执行，如下就是执行成功<br><img src="https://img-blog.csdnimg.cn/20210619201819898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p><img src="https://img-blog.csdnimg.cn/20210619202035515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="ElasticSearch-安装为-Windows-服务"><a href="#ElasticSearch-安装为-Windows-服务" class="headerlink" title="ElasticSearch 安装为 Windows 服务"></a>ElasticSearch 安装为 Windows 服务</h2><p>由于每次都要这样启动太麻烦了，es 还提供了加入 Windows 服务的命令</p><p>elasticsearch 的 bin 目录下有一个 elasticsearch-service.bat<br><img src="https://img-blog.csdnimg.cn/20210619202930826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>第一个命令是安装服务，第二个命令是启动，这样就不用一直开着命令窗口了</p><p>其他命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch-service.bat后面还可以执行这些命令</span><br><span class="line">install: 安装Elasticsearch服务</span><br><span class="line">remove: 删除已安装的Elasticsearch服务（如果启动则停止服务）</span><br><span class="line">start: 启动Elasticsearch服务（如果已安装）</span><br><span class="line">stop: 停止服务（如果启动）</span><br><span class="line">manager:启动GUI来管理已安装的服务</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注意 现在安装 Elasticsearch 可以不需要去安装 jdk 有自带&lt;/p&gt;
&lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;1.ElasticSearch 下载地址：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www.elastic.co/downloads/elasticsearch&lt;/code&gt;（最新 es）&lt;/p&gt;
&lt;p&gt;如果你想要下载其他版本请访问&lt;code&gt;https://www.elastic.co/cn/downloads/past-releases#elasticsearch&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Elasticsearch" scheme="https://blog.wjc66.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>使用nest遇到的问题</title>
    <link href="https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8nest%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.wjc66.cn/%E4%BD%BF%E7%94%A8nest%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-06-11T07:28:25.000Z</published>
    <updated>2021-09-23T07:24:47.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题-1"><a href="#问题-1" class="headerlink" title="问题 1"></a>问题 1</h2><p>访问接口报下面警告<br>No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies<br>原因 是类验证版本有问题<br>处理 <code>npm install --save class-validator</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题-1&quot;&gt;&lt;a href=&quot;#问题-1&quot; class=&quot;headerlink&quot; title=&quot;问题 1&quot;&gt;&lt;/a&gt;问题 1&lt;/h2&gt;&lt;p&gt;访问接口报下面警告&lt;br&gt;No metadata found. There is more than once class-
      
    
    </summary>
    
    
    
      <category term="nestjs" scheme="https://blog.wjc66.cn/tags/nestjs/"/>
    
  </entry>
  
  <entry>
    <title>vue-socket.io的使用</title>
    <link href="https://blog.wjc66.cn/vue-socket-io%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/vue-socket-io%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-04-22T01:58:35.000Z</published>
    <updated>2021-09-23T07:24:47.889Z</updated>
    
    <content type="html"><![CDATA[<p>ts + vue</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'@/store'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Module, VuexModule, Mutation, Action, getModule &#125; <span class="keyword">from</span> <span class="string">'vuex-module-decorators'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'@/main'</span></span><br><span class="line"><span class="keyword">import</span> &#123; UserModule &#125; <span class="keyword">from</span> <span class="string">'@/store/modules/user'</span></span><br><span class="line"></span><br><span class="line">@Module(&#123; <span class="attr">dynamic</span>: <span class="literal">true</span>, store, <span class="attr">name</span>: <span class="string">'WebSocket'</span> &#125;)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebSocket</span> <span class="keyword">extends</span> <span class="title">VuexModule</span> </span>&#123;</span><br><span class="line">  connect_status: <span class="built_in">Boolean</span> = <span class="literal">false</span> <span class="comment">// 连接状态</span></span><br><span class="line">  message: any <span class="comment">// 全局消息</span></span><br><span class="line">  env = process.env.NODE_ENV === <span class="string">'development'</span></span><br><span class="line"></span><br><span class="line">  @Mutation</span><br><span class="line">  private SOCKET_CONNECT() &#123;</span><br><span class="line">    <span class="keyword">this</span>.connect_status = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.env) <span class="built_in">console</span>.log(<span class="string">'socket连接成功==========&gt;'</span>, <span class="keyword">this</span>.connect_status)</span><br><span class="line">  &#125;</span><br><span class="line">  @Mutation</span><br><span class="line">  private SOCKET_CONNECT_ERROR() &#123;</span><br><span class="line">    <span class="keyword">this</span>.connect_status = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.env) <span class="built_in">console</span>.log(<span class="string">'socket连接失败==========&gt;'</span>, <span class="keyword">this</span>.connect_status)</span><br><span class="line">  &#125;</span><br><span class="line">  @Mutation</span><br><span class="line">  private SOCKET_DISCONNECT() &#123;</span><br><span class="line">    <span class="keyword">this</span>.connect_status = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.env) <span class="built_in">console</span>.log(<span class="string">'socket连接断开==========&gt;'</span>, <span class="keyword">this</span>.connect_status)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Mutation</span><br><span class="line">  private SOCKET_NOTIFICATION(message: any) &#123;</span><br><span class="line">    <span class="keyword">this</span>.message = message</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Mutation</span><br><span class="line">  private SOCKET_JOINACCOUNTROOM(data: any) &#123;</span><br><span class="line">    App.$socket.emit(<span class="string">'joinAccountRoom'</span>, &#123;</span><br><span class="line">      accountId: data.accountId,</span><br><span class="line">      userId: data.userId,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Action</span><br><span class="line">  socket_connect() &#123;</span><br><span class="line">    <span class="keyword">this</span>.context.commit(<span class="string">'SOCKET_CONNECT'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  @Action</span><br><span class="line">  socket_disconnet() &#123;</span><br><span class="line">    <span class="keyword">this</span>.context.commit(<span class="string">'SOCKET_DISCONNECT'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  @Action</span><br><span class="line">  socket_reconnect() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'重连成功'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 服务器重启 重新加入私有房间</span></span><br><span class="line">    <span class="keyword">const</span> accountId = UserModule.accountId</span><br><span class="line">    <span class="keyword">const</span> userId = UserModule.userId</span><br><span class="line">    <span class="built_in">console</span>.log(accountId, userId)</span><br><span class="line">    <span class="keyword">if</span> (accountId &amp;&amp; userId)</span><br><span class="line">      <span class="keyword">this</span>.context.commit(<span class="string">'SOCKET_JOINACCOUNTROOM'</span>, &#123;</span><br><span class="line">        accountId,</span><br><span class="line">        userId,</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  @Action</span><br><span class="line">  socket_connect_error() &#123;</span><br><span class="line">    <span class="keyword">this</span>.context.commit(<span class="string">'SOCKET_CONNECT_ERROR'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Action <span class="comment">// notification 与后端 通知的方法名称一致</span></span><br><span class="line">  socket_notification(message: any) &#123;</span><br><span class="line">    <span class="keyword">this</span>.context.commit(<span class="string">'SOCKET_NOTIFICATION'</span>, message)</span><br><span class="line">  &#125;</span><br><span class="line">  @Action <span class="comment">// 加入私有房间</span></span><br><span class="line">  socket_joinAccountRoom(data: any) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.connect_status) <span class="keyword">this</span>.context.commit(<span class="string">'SOCKET_JOINACCOUNTROOM'</span>, data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> WebSocketModule = getModule(WebSocket)</span><br></pre></td></tr></table></figure><p>在 main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Vue.use(</span><br><span class="line">  <span class="keyword">new</span> VueSocketIO(&#123;</span><br><span class="line">    debug: process.env.NODE_ENV === <span class="string">"development"</span>,</span><br><span class="line">    connection: process.env.VUE_APP_SOCKET_UEL || <span class="string">""</span>,</span><br><span class="line">    vuex: &#123;</span><br><span class="line">      store,</span><br><span class="line">      actionPrefix: <span class="string">"socket_"</span>,</span><br><span class="line">      mutationPrefix: <span class="string">"SOCKET_"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在 app.vue 导入 就可以用了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"@/store/modules/websocket"</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ts + vue&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b
      
    
    </summary>
    
    
    
      <category term="vue" scheme="https://blog.wjc66.cn/tags/vue/"/>
    
      <category term="socket" scheme="https://blog.wjc66.cn/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>docker搭建Elasticsearch-ik中文分词器-安装Kibana可视化工具</title>
    <link href="https://blog.wjc66.cn/docker%E6%90%AD%E5%BB%BAElasticsearch-ik%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D%E5%99%A8-%E5%AE%89%E8%A3%85Kibana%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <id>https://blog.wjc66.cn/docker%E6%90%AD%E5%BB%BAElasticsearch-ik%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D%E5%99%A8-%E5%AE%89%E8%A3%85Kibana%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/</id>
    <published>2021-04-18T06:38:09.000Z</published>
    <updated>2021-09-23T07:24:47.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Elasticsearch 是一个开源的搜索引擎，建立在一个全文搜索引擎库 Apache Lucene™ 基础之上。 Lucene 可以说是当下最先进、高性能、全功能的搜索引擎库—​ 无论是开源还是私有。</p><p>但是 Lucene 仅仅只是一个库。为了充分发挥其功能，你需要使用 Java 并将 Lucene 直接集成到应用程序中。 更糟糕的是，您可能需要获得信息检索学位才能了解其工作原理。Lucene 非常 复杂。</p><p>Elasticsearch 也是使用 Java 编写的，它的内部使用 Lucene 做索引与搜索，但是它的目的是使全文检索变得简单， 通过隐藏 Lucene 的复杂性，取而代之的提供一套简单一致的 RESTful API。</p><p>然而，Elasticsearch 不仅仅是 Lucene，并且也不仅仅只是一个全文搜索引擎。 它可以被下面这样准确的形容：</p><p>一个分布式的实时文档存储，每个字段 可以被索引与搜索<br>一个分布式实时分析搜索引擎<br>能胜任上百个服务节点的扩展，并支持 PB 级别的结构化或者非结构化数据<br>Elasticsearch 将所有的功能打包成一个单独的服务，这样你可以通过程序与它提供的简单的 RESTful API 进行通信， 可以使用自己喜欢的编程语言充当 web 客户端，甚至可以使用命令行（去充当这个客户端）。</p><p>就 Elasticsearch 而言，起步很简单。对于初学者来说，它预设了一些适当的默认值，并隐藏了复杂的搜索理论知识。 它 开箱即用 。只需最少的理解，你很快就能具有生产力。</p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/routing-value.html" target="_blank" rel="external nofollow noopener noreferrer">Elasticsearch 中文文档</a><br><a href="https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/16.x/index.html" target="_blank" rel="external nofollow noopener noreferrer">Elasticsearch 英文文档</a><br><a href="https://github.com/nestjs/elasticsearch" target="_blank" rel="external nofollow noopener noreferrer">nestjs 使用 Elasticsearch 文档</a><br><a href="https://www.elastic.co/cn/" target="_blank" rel="external nofollow noopener noreferrer">elastic 介绍</a></p><h2 id="安装-Elasticsearch-的镜像用-7-9-0"><a href="#安装-Elasticsearch-的镜像用-7-9-0" class="headerlink" title="安装 Elasticsearch 的镜像用 7.9.0"></a>安装 Elasticsearch 的镜像用 7.9.0</h2><p><code>docker pull elasticsearch:7.9.0</code></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -e ES_JAVA_OPTS=<span class="string">"-Xms256m -Xmx256m"</span> \</span><br><span class="line">-e <span class="string">"discovery.type=single-node"</span> \</span><br><span class="line">-d --name elasticsearch \</span><br><span class="line">-p 9200:9200 \</span><br><span class="line">-p 9300:9300 \</span><br><span class="line">elasticsearch:7.9.0</span><br></pre></td></tr></table></figure><p>可以增加文件映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-v /data/docker/elastic/plugins:/usr/share/elasticsearch/plugins \</span><br><span class="line">-v /data/docker/elastic/data:/usr/share/elasticsearch/data \</span><br></pre></td></tr></table></figure><p>-p  指定容器暴露的端口<br>    9200 作为 Http 协议，主要用于外部通讯；<br>    9300 指定容器暴露的端口</p><p>在浏览器访问 http://你的服务器 ip:9200 如下 说明启动成功</p><p><img src="https://img-blog.csdnimg.cn/2021041814472763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="安装-ik-分词器我也是用-7-9-0-版本的"><a href="#安装-ik-分词器我也是用-7-9-0-版本的" class="headerlink" title="安装 ik 分词器我也是用 7.9.0 版本的"></a>安装 ik 分词器我也是用 7.9.0 版本的</h2><p>下载地址<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/medcl/elasticsearch-analysis-ik/releases</a><br>找到 7.9.0 版本 并且下载下来放到服务器上</p><h3 id="进入-es-的容器里"><a href="#进入-es-的容器里" class="headerlink" title="进入 es 的容器里"></a>进入 es 的容器里</h3><p><code>docker exec -it elasticsearch /bin/bash</code></p><p><img src="https://img-blog.csdnimg.cn/20210418145051498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>在 plugins 目录下创建 ik 文件夹：<br><code>mkdir /usr/share/elasticsearch/plugins/ik</code></p><p>退出容器：<code>exit</code></p><p>拷贝下载好的 ik 分词器压缩包到 ik 文件夹中：</p><p><code>docker cp elasticsearch-analysis-ik-7.9.0.zip elasticsearch:/usr/share/elasticsearch/plugins/ik/</code></p><p>再进入容器：<br><code>docker exec -it elasticsearch /bin/bash</code></p><p>进入 IK 文件夹下<br><code>cd plugins/ik/</code></p><p>解压文件<br><code>unzip elasticsearch-analysis-ik-7.9.0.zip</code></p><p>退出容器 重启<br><code>docker restart elasticsearch</code></p><p>查看 ik 分词器是否安装成功 可已经进去 es 容器里的 bin 目录下</p><p><code>elasticsearch-plugin list</code></p><p><img src="https://img-blog.csdnimg.cn/2021041814545176.png" alt="在这里插入图片描述"></p><p>修改配置，解决跨域访问问题</p><p>首先进入到容器中，然后进入到指定目录修改 elasticsearch.yml 文件。<br><code>docker exec -it elasticsearch</code><br><code>vi elasticsearch.yml</code><br>在 elasticsearch.yml 的文件末尾加上:<br><code>http.cors.enabled: true</code><br><code>http.cors.allow-origin: &quot;\*&quot;</code><br>修改配置后重启容器即可。<br><code>docker restart elasticsearch</code></p><h2 id="Kibana-7-可视化工具"><a href="#Kibana-7-可视化工具" class="headerlink" title="Kibana 7 可视化工具"></a>Kibana 7 可视化工具</h2><p><code>docker pull kibana:7.9.0</code></p><p><code>docker run -d -p 5601:5601 --name kibana --link elasticsearch7.9.0:elasticsearch7.9.0 docker.io/kibana:7.9.0</code></p><ol><li>如果报错 <code>kibana报错Unable to revive connection: http://172.16.23.126:9200/</code></li></ol><p><code>docker inspect elasticsearch</code> 查看 ES 容器暴露出来的 ip</p><p><img src="https://img-blog.csdnimg.cn/20210421094333915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>查询配置文件<br><code>find / -name kibana.yml</code></p><p>写入对应 ip<br><img src="https://img-blog.csdnimg.cn/20210421095241497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>重启<br>docker restart kibana</p><ol start="2"><li>kibana 启动报 server is not ready yet <code>https://www.jianshu.com/p/a698eddb6cec</code></li></ol><p>kibana 对应的索引已经在 es 中创建 需要 删除对应索引</p><p><img src="https://img-blog.csdnimg.cn/20210421095628154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="3"><li>查看内存 <code>free -h</code> 启动失败还有可能是内存不够</li></ol><p>查看索引<br><code>curl localhost:9200/_cat/indices?v</code><br>删除索引,通配符形式<br><code>curl -XDELETE localhost:9200/索引*</code><br>索引起别名<br><code>curl -XPUT localhost:9200/索引/_alias/别名</code><br>查看别名<br><code>curl -XPUT localhost:9200/_cat/aliases?v</code></p><ol start="3"><li>还可以指定端口启动<br><code>docker run -d -p 5601:5601 --name kibana -e ELASTICSEARCH_HOSTS=http://172.17.0.3:9200 docker.io/kibana:7.9.0</code></li></ol><p>启动特别慢 要等久点</p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><ol><li>运行一段时间 访问 Kibana 显示 Data too large 问题</li></ol><p>解决<br>使用 potman 发送请求<br>put <a href="https://127.0.0.1:9200/_cluster/settings" target="_blank" rel="external nofollow noopener noreferrer">https://127.0.0.1:9200/_cluster/settings</a> (参数格式 application/json)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"persistent"</span> : &#123;</span><br><span class="line"><span class="string">"indices.breaker.fielddata.limit"</span> : <span class="string">"40%"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Elasticsearch 是一个开源的搜索引擎，建立在一个全文搜索引擎库 Apache Lucene™ 基础之上。 Lucene 可以说是
      
    
    </summary>
    
    
    
      <category term="docker" scheme="https://blog.wjc66.cn/tags/docker/"/>
    
      <category term="Elasticsearch" scheme="https://blog.wjc66.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>vue-socket.io跨域问题的解决方法</title>
    <link href="https://blog.wjc66.cn/vue-socket-io%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.wjc66.cn/vue-socket-io%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2021-04-16T10:41:21.000Z</published>
    <updated>2021-09-23T07:24:47.889Z</updated>
    
    <content type="html"><![CDATA[<p>错误提示如下<br><code>Access to XMLHttpRequest at &#39;https://global.notice.qbitnetwork.com/socket.io/?EIO=3&amp;transport=polling&amp;t=NZOyCjd&#39; from origin &#39;http://localhost:9527&#39; has been blocked by CORS policy: The value of the &#39;Access-Control-Allow-Origin&#39; header in the response must not be the wildcard &#39;\*&#39; when the request&#39;s credentials mode is &#39;include&#39;. The credentials mode of requests initiated by the XMLHttpRequest is controlled by the withCredentials attribute.</code></p><p>服务器要在 cors 增加配置 credentials: true,</p><p>在 nestjs 中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.enableCors(&#123;</span><br><span class="line">  credentials: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;错误提示如下&lt;br&gt;&lt;code&gt;Access to XMLHttpRequest at &amp;#39;https://global.notice.qbitnetwork.com/socket.io/?EIO=3&amp;amp;transport=polling&amp;amp;t=NZOyC
      
    
    </summary>
    
    
    
      <category term="vue" scheme="https://blog.wjc66.cn/tags/vue/"/>
    
      <category term="socket" scheme="https://blog.wjc66.cn/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>typeorm+nestjs的使用(二)</title>
    <link href="https://blog.wjc66.cn/typeorm-nestjs%E7%9A%84%E4%BD%BF%E7%94%A8(%E4%BA%8C)/"/>
    <id>https://blog.wjc66.cn/typeorm-nestjs%E7%9A%84%E4%BD%BF%E7%94%A8(%E4%BA%8C)/</id>
    <published>2021-04-15T13:17:03.000Z</published>
    <updated>2021-09-23T07:24:47.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [data, total] =</span><br><span class="line">  (<span class="keyword">await</span> createQueryBuilder) &lt;</span><br><span class="line">  T &gt;</span><br><span class="line">  (T, tableName)</span><br><span class="line">    .skip(queryParams.pagination.page * queryParams.pagination.limit)</span><br><span class="line">    .take(queryParams.pagination.limit)</span><br><span class="line">    .where(customCondition)</span><br><span class="line">    .orderBy(orderByCondition)</span><br><span class="line">    .getManyAndCount();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Pagination() &lt; T &gt; &#123; data, total &#125;;</span><br></pre></td></tr></table></figure><h2 id="graphql-的使用"><a href="#graphql-的使用" class="headerlink" title="graphql 的使用"></a>graphql 的使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># Write your query or mutation here</span><br><span class="line">query ($queryParams: QueryParams!) &#123;</span><br><span class="line">  accounts(queryParams: $queryParams) &#123;</span><br><span class="line">    total</span><br><span class="line">    pageTotal</span><br><span class="line">    data &#123;</span><br><span class="line">      id</span><br><span class="line">      remarks</span><br><span class="line">      verifiedName</span><br><span class="line">      prevUserId</span><br><span class="line">      balances &#123;</span><br><span class="line">        id</span><br><span class="line">        walletType</span><br><span class="line">        available</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210317111537123.png" alt="在这里插入图片描述"></p><h2 id="find-使用"><a href="#find-使用" class="headerlink" title="find 使用"></a>find 使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">userRepository.find(&#123;</span><br><span class="line">    select: [<span class="string">"firstName"</span>, <span class="string">"lastName"</span>],</span><br><span class="line">    relations: [<span class="string">"profile"</span>, <span class="string">"photos"</span>, <span class="string">"videos"</span>],</span><br><span class="line">    where: &#123;</span><br><span class="line">        firstName: <span class="string">"Timber"</span>,</span><br><span class="line">        lastName: <span class="string">"Saw"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    order: &#123;</span><br><span class="line">        name: <span class="string">"ASC"</span>,</span><br><span class="line">        id: <span class="string">"DESC"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    skip: <span class="number">5</span>,</span><br><span class="line">    take: <span class="number">10</span>,</span><br><span class="line">    cache: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">LessThan &lt;</span><br><span class="line">LessThanOrEqual &lt;=   likes: LessThanOrEqual(<span class="number">10</span>)</span><br><span class="line">MoreThan &gt;</span><br><span class="line">MoreThanOrEqual &gt;=</span><br><span class="line">Equal =</span><br><span class="line">Like title: Like(<span class="string">"%out #%"</span>)</span><br><span class="line">Between likes: Between(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">In title: In([<span class="string">"About #2"</span>, <span class="string">"About #3"</span>])</span><br><span class="line">Any title: Any([<span class="string">"About #2"</span>, <span class="string">"About #3"</span>])</span><br><span class="line">IsNull title: IsNull()</span><br><span class="line">Raw Raw(<span class="string">"1 + likes = 4"</span>)</span><br><span class="line">SELECT * FROM <span class="string">"post"</span> WHERE <span class="number">1</span> + <span class="string">"likes"</span> = <span class="number">4</span></span><br><span class="line">Not</span><br><span class="line">likes: Not(MoreThan(<span class="number">10</span>)),</span><br><span class="line">title: Not(Equal(<span class="string">"About #2"</span>))</span><br><span class="line">SELECT * FROM <span class="string">"post"</span> WHERE NOT(<span class="string">"likes"</span> &gt; <span class="number">10</span>) AND NOT(<span class="string">"title"</span> = <span class="string">'About #2'</span>)</span><br></pre></td></tr></table></figure><p>1.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cards = <span class="keyword">await</span> <span class="keyword">this</span>.qbitCardRepo</span><br><span class="line">  .createQueryBuilder(<span class="string">"q"</span>)</span><br><span class="line">  .select([<span class="string">"id"</span>])</span><br><span class="line">  .where(&#123;</span><br><span class="line">    id: <span class="string">"0053edd6-4da0-4100-9899-97b099d4d9f5"</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  .leftJoinAndSelect(</span><br><span class="line">    (subQuery) =&gt; &#123;</span><br><span class="line">      <span class="keyword">return</span> subQuery</span><br><span class="line">        .from(QbitCardTransactionRecord, <span class="string">"r"</span>)</span><br><span class="line">        .select([<span class="string">"r.id"</span>, <span class="string">'r."cardId"'</span>, <span class="string">'r."createTime"'</span>])</span><br><span class="line">        .where(&#123;&#125;)</span><br><span class="line">        .orderBy(&#123;</span><br><span class="line">          <span class="string">'r."createTime"'</span>: <span class="string">"DESC"</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">        .limit(<span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"r"</span>,</span><br><span class="line">    <span class="string">'r."cardId" = id'</span></span><br><span class="line">  )</span><br><span class="line">  .getRawMany();</span><br><span class="line"></span><br><span class="line">  SELECT <span class="string">"r"</span>.*, id FROM <span class="string">"qbitCard"</span> <span class="string">"q"</span> LEFT JOIN (SELECT <span class="string">"r"</span>.<span class="string">"id"</span> AS <span class="string">"r_id"</span>, r.<span class="string">"cardId"</span>, r.<span class="string">"createTime"</span> FROM <span class="string">"qbitCardTransactionRecord"</span> <span class="string">"r"</span> WHERE <span class="string">"r"</span>.<span class="string">"deleteTime"</span> IS NULL ORDER BY r.<span class="string">"createTime"</span> DESC LIMIT <span class="number">1</span>) <span class="string">"r"</span> ON r.<span class="string">"cardId"</span> = id WHERE ( <span class="string">"q"</span>.<span class="string">"id"</span> = $<span class="number">1</span> ) AND ( <span class="string">"q"</span>.<span class="string">"deleteTime"</span> IS NULL )</span><br><span class="line"></span><br><span class="line">  <span class="comment">// https://github.com/typeorm/typeorm/issues/6767</span></span><br></pre></td></tr></table></figure><p>3.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> query = connection</span><br><span class="line">  .createQueryBuilder(Chat, <span class="string">"chat"</span>)</span><br><span class="line">  .leftJoin(<span class="string">'chat.listingMembers'</span>, <span class="string">'listingMembers'</span>)</span><br><span class="line">  .where(<span class="string">'listingMembers.id = :id'</span>, &#123;<span class="attr">id</span>: currentUser.id&#125;)</span><br><span class="line">  .leftJoinAndSelect(<span class="string">'chat.messages'</span>, <span class="string">'messages'</span>)</span><br><span class="line">  .innerJoin(<span class="string">'messages.holders'</span>, <span class="string">'holders'</span>, <span class="string">'holders.id = :userId'</span>, &#123;<span class="attr">userId</span>: currentUser.id&#125;)</span><br><span class="line">  .orderBy(&#123;</span><br><span class="line">    <span class="string">"messages.createdAt"</span>: &#123;<span class="attr">order</span>: <span class="string">"DESC"</span>, <span class="attr">nulls</span>: <span class="string">"NULLS LAST"</span>&#125;,</span><br><span class="line">    <span class="string">"chat.id"</span>: <span class="string">"DESC"</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  SELECT <span class="string">"q"</span>.<span class="string">"id"</span> AS <span class="string">"q_id"</span>, <span class="string">"r"</span>.<span class="string">"id"</span> AS <span class="string">"r_id"</span>, r.<span class="string">"createTime"</span> FROM <span class="string">"qbitCard"</span> <span class="string">"q"</span> LEFT JOIN <span class="string">"qbitCardTransactionRecord"</span> <span class="string">"r"</span> ON r.<span class="string">"cardId"</span> = <span class="string">"q"</span>.<span class="string">"id"</span> WHERE ( <span class="string">"q"</span>.<span class="string">"id"</span> = $<span class="number">1</span> ) AND ( <span class="string">"q"</span>.<span class="string">"deleteTime"</span> IS NULL ) ORDER BY r.<span class="string">"createTime"</span> DESC NULLS LAST -- PARAMETERS: [<span class="string">"0053edd6-4da0-4100-9899-97b099d4d9f5"</span>]</span><br><span class="line"><span class="string">``</span></span><br></pre></td></tr></table></figure><p>3.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cards = <span class="keyword">await</span> <span class="keyword">this</span>.qbitCardRepo</span><br><span class="line">  .createQueryBuilder(<span class="string">"q"</span>)</span><br><span class="line">  .select([<span class="string">"q.id"</span>, <span class="string">"r.id"</span>, <span class="string">'r."createTime"'</span>])</span><br><span class="line">  .leftJoin(<span class="string">"qbitCardTransactionRecord"</span>, <span class="string">"r"</span>, <span class="string">'r."cardId" = q.id'</span>)</span><br><span class="line">  .where(&#123;</span><br><span class="line">    id: <span class="string">"0053edd6-4da0-4100-9899-97b099d4d9f5"</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  .orderBy(&#123;</span><br><span class="line">    <span class="string">'r."createTime"'</span>: &#123; <span class="attr">order</span>: <span class="string">"DESC"</span>, <span class="attr">nulls</span>: <span class="string">"NULLS LAST"</span> &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">  .getRawMany();</span><br></pre></td></tr></table></figure><p>4.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> info = <span class="keyword">await</span> <span class="keyword">this</span>.qbitCardTransactionRecordRepo</span><br><span class="line">  .createQueryBuilder()</span><br><span class="line">  .select([<span class="string">"id"</span>, <span class="string">"content"</span>])</span><br><span class="line">  .where(<span class="string">`content::json-&gt;&gt;'authCode'=:authCode`</span>, &#123; <span class="attr">authCode</span>: <span class="string">"111"</span> &#125;)</span><br><span class="line">  .andWhere(<span class="string">`content::json-&gt;&gt;'cardHashID'=:cardHashID`</span>, &#123;</span><br><span class="line">    cardHashID: val[<span class="string">"cardHashID"</span>],</span><br><span class="line">  &#125;)</span><br><span class="line">  .andWhere(</span><br><span class="line">    <span class="string">`content::json-&gt;&gt;'systemTraceAuditNumber'=:systemTraceAuditNumber`</span>,</span><br><span class="line">    &#123; <span class="attr">systemTraceAuditNumber</span>: val.systemTraceAuditNumber &#125;</span><br><span class="line">  )</span><br><span class="line">  .getRawOne();</span><br><span class="line"></span><br><span class="line">  SELECT id, content FROM <span class="string">"qbitCardTransactionRecord"</span> <span class="string">"QbitCardTransactionRecord"</span> WHERE ( content::json-&gt;&gt;<span class="string">'authCode'</span>=$<span class="number">1</span> AND content::json-&gt;&gt;<span class="string">'cardHashID'</span>=$<span class="number">2</span> AND content::json-&gt;&gt;<span class="string">'systemTraceAuditNumber'</span>=$<span class="number">3</span> ) AND ( <span class="string">"QbitCardTransactionRecord"</span>.<span class="string">"deleteTime"</span> IS NULL ) -- PARAMETERS: [<span class="string">"111"</span>,<span class="string">"cc3007f2-7f4b-4a4c-89bf-65e92a0d41a9"</span>,<span class="string">"940152"</span>]</span><br></pre></td></tr></table></figure><p>4.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SELECT json_array_elements(<span class="string">"statusLog"</span>)-&gt;<span class="string">'status'</span> AS status <span class="keyword">from</span> apply WHERE id = <span class="string">'adf7eabf-1230-4378-8789-c81b6ac3af55'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://blog.csdn.net/liangrui1988/article/details/54708391?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.control</span></span><br></pre></td></tr></table></figure><h2 id="count-if-使用"><a href="#count-if-使用" class="headerlink" title="count if 使用"></a>count if 使用</h2><p><code>select count(status = &#39;Active&#39; OR null) from account</code></p><h2 id="sun-if-使用"><a href="#sun-if-使用" class="headerlink" title="sun if 使用"></a>sun if 使用</h2><p>语法 <code>case then 条件 then (可以是数据库字段名 | 数字) ELSE 0 END</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select(`cast(<span class="string">"sum"</span> ( CASE q.<span class="string">"status"</span> WHEN <span class="string">'Frozen'</span> THEN 1 ELSE 0 END ) as <span class="built_in">integer</span>)`, <span class="string">'frozenQbitCardCount'</span>)</span><br></pre></td></tr></table></figure><p><code>SELECT cast(&quot;sum&quot; ( CASE &quot;status&quot; WHEN &#39;Frozen&#39; THEN 1 ELSE 0 END ) as integer) AS count FROM account</code></p><p><code>SELECT SUM(CASE WHEN type = &#39;QbitCardAccountRechargeQbitCardGroup&#39; THEN &quot;recipientCost&quot; ELSE 0 END) AS money from &quot;Transaction&quot;</code></p><p><code>SELECT count(case when type = &#39;QbitCardAccountRechargeQbitCardGroup&#39; then 1 end) as total from &quot;Transaction&quot;</code></p><h2 id="increment-数据库字段自增（自减一样）"><a href="#increment-数据库字段自增（自减一样）" class="headerlink" title="increment 数据库字段自增（自减一样）"></a>increment 数据库字段自增（自减一样）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">await this.accountExtendRepo</span><br><span class="line">      .createQueryBuilder()</span><br><span class="line">      .update()</span><br><span class="line">      .<span class="built_in">set</span>(&#123;</span><br><span class="line">        qbitCardCountLimit: () =&gt; &#123;</span><br><span class="line">          <span class="built_in">return</span> `<span class="string">"qbitCardCountLimit"</span> + <span class="variable">$&#123;data.qbitCardCountLimit&#125;</span>`;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="built_in">where</span>(&#123;</span><br><span class="line">        accountId: data.subAccountId,</span><br><span class="line">      &#125;)</span><br><span class="line">      .execute();</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE <span class="string">"accountExtend"</span> SET <span class="string">"qbitCardCountLimit"</span> = <span class="string">"qbitCardCountLimit"</span> + 10, <span class="string">"version"</span> = <span class="string">"version"</span> + 1 WHERE <span class="string">"accountId"</span> = <span class="variable">$1</span> -- PARAMETERS: [<span class="string">"cd459ae2-3f4c-4505-a984-d14c2a85c734"</span>]</span><br></pre></td></tr></table></figure><h2 id="cast-的使用-类型转换"><a href="#cast-的使用-类型转换" class="headerlink" title="cast 的使用 类型转换"></a>cast 的使用 类型转换</h2><p><code>cast (sum(&quot;a&quot;) as integer)</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;查询&quot;&gt;&lt;a href=&quot;#查询&quot; class=&quot;headerlink&quot; title=&quot;查询&quot;&gt;&lt;/a&gt;查询&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
    
      <category term="nestjs" scheme="https://blog.wjc66.cn/tags/nestjs/"/>
    
      <category term="typeorm" scheme="https://blog.wjc66.cn/tags/typeorm/"/>
    
  </entry>
  
  <entry>
    <title>打包上传至阿里云oss</title>
    <link href="https://blog.wjc66.cn/%E6%89%93%E5%8C%85%E4%B8%8A%E4%BC%A0%E8%87%B3%E9%98%BF%E9%87%8C%E4%BA%91oss/"/>
    <id>https://blog.wjc66.cn/%E6%89%93%E5%8C%85%E4%B8%8A%E4%BC%A0%E8%87%B3%E9%98%BF%E9%87%8C%E4%BA%91oss/</id>
    <published>2021-04-15T13:09:14.000Z</published>
    <updated>2021-09-23T07:24:47.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-webpack-aliyun-oss-plugin-包"><a href="#安装-webpack-aliyun-oss-plugin-包" class="headerlink" title="安装 webpack-aliyun-oss-plugin 包"></a>安装 webpack-aliyun-oss-plugin 包</h2><p><code>npm install webpack-aliyun-oss-plugin --save-dev</code></p><h2 id="配置-vue-config-js"><a href="#配置-vue-config-js" class="headerlink" title="配置 vue.config.js"></a>配置 vue.config.js</h2><p>// 上述代码是修改你的资源根目录，改为你上传到 oss 上的目录<br><code>publicPath: process.env.NODE_ENV !== &#39;development&#39; ? &#39;https://xxx.com/&#39; : &#39;./&#39;,</code></p><h2 id="webpack-打包配置"><a href="#webpack-打包配置" class="headerlink" title="webpack 打包配置"></a>webpack 打包配置</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpackAliyunOssPlugin = <span class="built_in">require</span>(<span class="string">'webpack-aliyun-oss-plugin'</span>)</span><br><span class="line"></span><br><span class="line">chainWebpack(config) &#123;</span><br><span class="line">    <span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'production'</span>) &#123;</span><br><span class="line">      <span class="comment">// eslint-disable-next-line @typescript-eslint/no-var-requires</span></span><br><span class="line">      <span class="keyword">const</span> &#123; oss &#125; = <span class="built_in">require</span>(<span class="string">'./config'</span>)</span><br><span class="line">      config</span><br><span class="line">        .plugin(<span class="string">'webpack-aliyun-oss-plugin'</span>)</span><br><span class="line">        .use(webpackAliyunOssPlugin, [&#123;</span><br><span class="line">          buildPath: <span class="string">'dist/**'</span>,</span><br><span class="line">          region: <span class="string">'oss-cn-hangzhou'</span>,</span><br><span class="line">          ak: <span class="string">''</span>, <span class="comment">// ak为accessKeyId，sk为accessKeySecret</span></span><br><span class="line">          sk: <span class="string">''</span>,</span><br><span class="line">          bucket: <span class="string">''</span>, <span class="comment">// bucket的name</span></span><br><span class="line">        &#125;])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装-webpack-aliyun-oss-plugin-包&quot;&gt;&lt;a href=&quot;#安装-webpack-aliyun-oss-plugin-包&quot; class=&quot;headerlink&quot; title=&quot;安装 webpack-aliyun-oss-plugin 包&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="vue" scheme="https://blog.wjc66.cn/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>distinct和distinct-on的使用</title>
    <link href="https://blog.wjc66.cn/distinct%E5%92%8Cdistinct-on%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/distinct%E5%92%8Cdistinct-on%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-04-15T13:03:38.000Z</published>
    <updated>2021-09-23T07:24:47.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="去重；关键字-distinct-去重功能-在其他数据库（oracle，mysql）是存在；当然-postgresql-也有这个功能"><a href="#去重；关键字-distinct-去重功能-在其他数据库（oracle，mysql）是存在；当然-postgresql-也有这个功能" class="headerlink" title="去重；关键字 distinct 去重功能 在其他数据库（oracle，mysql）是存在；当然 postgresql 也有这个功能"></a>去重；关键字 distinct 去重功能 在其他数据库（oracle，mysql）是存在；当然 postgresql 也有这个功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[postgres@sdserver40_210 ~]$ psql mydb lottu</span><br><span class="line">psql (9.5.0)</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">mydb=&gt; select * from trade;</span><br><span class="line"> tradeno | accountid  | fee | game_id</span><br><span class="line">---------+------------+-----+---------</span><br><span class="line"> 1000006 | yyb_100001 |  10 |    2555</span><br><span class="line"> 1000011 | yyb_100002 | 100 |    2555</span><br><span class="line"> 1001859 | yyb_100001 |  10 |    2555</span><br><span class="line"> 1001861 | yyb_100003 |  20 |    2555</span><br><span class="line"> 1001854 | yyb_100004 |   6 |    2555</span><br><span class="line"> 1001881 | yyb_100002 | 328 |    2555</span><br><span class="line">(6 rows)</span><br><span class="line"></span><br><span class="line">mydb=&gt; select distinct accountid from trade;</span><br><span class="line"> accountid</span><br><span class="line">------------</span><br><span class="line"> yyb_100001</span><br><span class="line"> yyb_100004</span><br><span class="line"> yyb_100002</span><br><span class="line"> yyb_100003</span><br><span class="line">(4 rows)</span><br><span class="line"></span><br><span class="line">mydb=&gt; select distinct accountid,game_id from trade;</span><br><span class="line"> accountid  | game_id</span><br><span class="line">------------+---------</span><br><span class="line"> yyb_100001 |    2555</span><br><span class="line"> yyb_100003 |    2555</span><br><span class="line"> yyb_100004 |    2555</span><br><span class="line"> yyb_100002 |    2555</span><br><span class="line">(4 rows)</span><br></pre></td></tr></table></figure><h2 id="跟-on-一起用；-使用-DISTINCT-ON-实现用窗口函数实现的取第一名的功能"><a href="#跟-on-一起用；-使用-DISTINCT-ON-实现用窗口函数实现的取第一名的功能" class="headerlink" title="跟 on 一起用； 使用 DISTINCT ON 实现用窗口函数实现的取第一名的功能"></a>跟 on 一起用； 使用 DISTINCT ON 实现用窗口函数实现的取第一名的功能</h2><p>这个功能 oracle，mysql 是没有的；当然它们有其他的分析函数可以替换；顶替；例如 row_number, fisrt_value 等等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mydb=&gt; select distinct on (accountid) accountid,fee from trade;</span><br><span class="line"> accountid  | fee</span><br><span class="line">------------+-----</span><br><span class="line"> yyb_100001 |  10</span><br><span class="line"> yyb_100002 | 100</span><br><span class="line"> yyb_100003 |  20</span><br><span class="line"> yyb_100004 |   6</span><br><span class="line">(4 rows)</span><br><span class="line"></span><br><span class="line">mydb=&gt; select distinct on (game_id) accountid,fee from trade;</span><br><span class="line"> accountid  | fee</span><br><span class="line">------------+-----</span><br><span class="line"> yyb_100001 |  10</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">mydb=&gt; select distinct on (game_id) accountid,fee from trade order by game_id, fee desc;</span><br><span class="line"> accountid  | fee</span><br><span class="line">------------+-----</span><br><span class="line"> yyb_100002 | 328</span><br><span class="line">(1 row)</span><br><span class="line"></span><br><span class="line">--例如取每个帐号充值最大的一笔</span><br><span class="line">mydb=&gt; select distinct on (accountid) accountid,fee from trade order by accountid, fee desc;</span><br><span class="line"> accountid  | fee</span><br><span class="line">------------+-----</span><br><span class="line"> yyb_100001 |  10</span><br><span class="line"> yyb_100002 | 328</span><br><span class="line"> yyb_100003 |  20</span><br><span class="line"> yyb_100004 |   6</span><br><span class="line">(4 rows)</span><br></pre></td></tr></table></figure><p>在 typeorm 中实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    Repository, Between, MoreThanOrEqual, In, LessThan, IsNull, LessThanOrEqual</span><br><span class="line">    &#125; <span class="keyword">from</span> <span class="string">'typeorm'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.transactionRepository</span><br><span class="line">        .createQueryBuilder()</span><br><span class="line">        .select(<span class="string">`DISTINCT ON ("accountId") "accountId"`</span>)</span><br><span class="line">        .addSelect([<span class="string">'"transactionTime"'</span>, <span class="string">'"recipientCost"'</span>])</span><br><span class="line">        .where(&#123;</span><br><span class="line">          status: TransactionStatusEnum.Closed,</span><br><span class="line">          type: TransactionTypeEnum.Deposit,</span><br><span class="line">          accountId: In(_accountIds),</span><br><span class="line">          senderType: IsNull(),</span><br><span class="line">          transactionTime: Between(time[<span class="number">0</span>], time[<span class="number">1</span>]),</span><br><span class="line">        &#125;)</span><br><span class="line">        .orderBy(<span class="string">`"accountId", "transactionTime"`</span>, <span class="string">'ASC'</span>)</span><br><span class="line">        .getRawMany(),</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;去重；关键字-distinct-去重功能-在其他数据库（oracle，mysql）是存在；当然-postgresql-也有这个功能&quot;&gt;&lt;a href=&quot;#去重；关键字-distinct-去重功能-在其他数据库（oracle，mysql）是存在；当然-postgre
      
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://blog.wjc66.cn/tags/postgresql/"/>
    
      <category term="typeorm" scheme="https://blog.wjc66.cn/tags/typeorm/"/>
    
  </entry>
  
  <entry>
    <title>ts中keyof的使用</title>
    <link href="https://blog.wjc66.cn/ts%E4%B8%ADkeyof%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.wjc66.cn/ts%E4%B8%ADkeyof%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-04-12T01:41:50.000Z</published>
    <updated>2021-09-23T07:24:47.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="映射类型"><a href="#映射类型" class="headerlink" title="映射类型"></a>映射类型</h2><p>映射类型允许您通过映射属性类型从现有类型创建新类型。现有类型的每个属性都根据您指定的规则进行转换。然后，转换后的属性构成了新类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getProperty</span>&lt;<span class="title">T</span>, <span class="title">K</span> <span class="title">extends</span> <span class="title">keyof</span> <span class="title">T</span>&gt;(<span class="params">obj: T, key: K</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> obj[key];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person: Person = &#123;</span><br><span class="line">  age: <span class="number">21</span>,</span><br><span class="line">  name: <span class="string">"Tobias"</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// name is a property of person</span></span><br><span class="line"><span class="comment">// --&gt; no error</span></span><br><span class="line"><span class="keyword">const</span> name = getProperty(person, <span class="string">"name"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// gender is not a property of person</span></span><br><span class="line"><span class="comment">// --&gt; error</span></span><br><span class="line"><span class="keyword">const</span> gender = getProperty(person, <span class="string">"gender"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">type Optional&lt;T&gt; = &#123;</span><br><span class="line">  [K <span class="keyword">in</span> keyof T]?: T[K]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> person: Optional&lt;Person&gt; = &#123;</span><br><span class="line">  name: <span class="string">"Tobias"</span></span><br><span class="line">  <span class="comment">// notice how I do not have to specify an age,</span></span><br><span class="line">  <span class="comment">// since age is now of type 'number?' and is therefor optional</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a href="https://mariusschulz.com/blog/mapped-types-in-typescript#modeling-object-freeze-with-mapped-types" target="_blank" rel="external nofollow noopener noreferrer">映射类型</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;映射类型&quot;&gt;&lt;a href=&quot;#映射类型&quot; class=&quot;headerlink&quot; title=&quot;映射类型&quot;&gt;&lt;/a&gt;映射类型&lt;/h2&gt;&lt;p&gt;映射类型允许您通过映射属性类型从现有类型创建新类型。现有类型的每个属性都根据您指定的规则进行转换。然后，转换后的属性构成了新
      
    
    </summary>
    
    
    
      <category term="typescript" scheme="https://blog.wjc66.cn/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>nest中TypeORM的使用(一)</title>
    <link href="https://blog.wjc66.cn/nest%E4%B8%ADTypeORM%E7%9A%84%E4%BD%BF%E7%94%A8(%E4%B8%80)/"/>
    <id>https://blog.wjc66.cn/nest%E4%B8%ADTypeORM%E7%9A%84%E4%BD%BF%E7%94%A8(%E4%B8%80)/</id>
    <published>2021-03-25T07:56:41.000Z</published>
    <updated>2021-09-23T07:24:47.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p>postgreSql</p><h2 id="数据库初始化连接"><a href="#数据库初始化连接" class="headerlink" title="数据库初始化连接"></a>数据库初始化连接</h2><p>配置不同环境导入配置<br>在 app.module.ts</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ConfigModule, ConfigService &#125; <span class="keyword">from</span> <span class="string">"@nestjs/config"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Module &#125; <span class="keyword">from</span> <span class="string">"@nestjs/common"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TypeOrmModule &#125; <span class="keyword">from</span> <span class="string">"@nestjs/typeorm"</span>;</span><br><span class="line"><span class="keyword">import</span> customConfig <span class="keyword">from</span> <span class="string">"./config/index"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; EntityModule &#125; <span class="keyword">from</span> <span class="string">"./entity/entity.module"</span>;</span><br><span class="line"></span><br><span class="line">@Module(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    ConfigModule.forRoot(&#123;</span><br><span class="line">      isGlobal: <span class="literal">true</span>, <span class="comment">// 作用于全局</span></span><br><span class="line">      load: [customConfig], <span class="comment">// 加载自定义配置项</span></span><br><span class="line">    &#125;),</span><br><span class="line">    TypeOrmModule.forRootAsync(&#123;</span><br><span class="line">      imports: [ConfigModule], <span class="comment">// 数据库配置项依赖于ConfigModule，需在此引入</span></span><br><span class="line">      useFactory: <span class="function">(<span class="params">configService: ConfigService</span>) =&gt;</span></span><br><span class="line">        configService.get(<span class="string">"database"</span>),</span><br><span class="line">      inject: [ConfigService], <span class="comment">// 记得注入服务，不然useFactory函数中获取不到ConfigService,</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// TypeOrmModule.forRoot(&#123;</span></span><br><span class="line">    <span class="comment">//   type: 'postgres',</span></span><br><span class="line">    <span class="comment">//   host: 'localhost',</span></span><br><span class="line">    <span class="comment">//   port: 5432,</span></span><br><span class="line">    <span class="comment">//   username: 'postgres',</span></span><br><span class="line">    <span class="comment">//   password: '123456',</span></span><br><span class="line">    <span class="comment">//   database: 'test',</span></span><br><span class="line">    <span class="comment">//   logging: true, // 打印sql</span></span><br><span class="line">    <span class="comment">//   autoLoadEntities: true, // 自动加载实体</span></span><br><span class="line">    <span class="comment">//   synchronize: true, // 同步数据库表字段</span></span><br><span class="line">    <span class="comment">// &#125;),</span></span><br><span class="line">    EntityModule,</span><br><span class="line">  ],</span><br><span class="line">  controllers: [],</span><br><span class="line">  providers: [],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>在 config/index.ts</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dev <span class="keyword">from</span> <span class="string">"./dev"</span>;</span><br><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">"./api"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> configs = &#123;</span><br><span class="line">  development: dev,</span><br><span class="line">  production: api,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> env = process.env.NODE_ENV || <span class="string">"development"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"env=============&gt;"</span>, env);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; configs[env];</span><br></pre></td></tr></table></figure><p>在 config/dev.ts</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  database: &#123;</span><br><span class="line">    type: <span class="string">"postgres"</span>,</span><br><span class="line">    host: <span class="string">"localhost"</span>,</span><br><span class="line">    port: <span class="number">5432</span>,</span><br><span class="line">    username: <span class="string">"postgres"</span>,</span><br><span class="line">    password: <span class="string">"123456"</span>,</span><br><span class="line">    database: <span class="string">"test"</span>,</span><br><span class="line">    logging: <span class="literal">true</span>, <span class="comment">// 打印sql</span></span><br><span class="line">    autoLoadEntities: <span class="literal">true</span>, <span class="comment">// 自动加载实体</span></span><br><span class="line">    synchronize: <span class="literal">false</span>, <span class="comment">// 同步数据库表字段</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="model-表映射"><a href="#model-表映射" class="headerlink" title="model 表映射"></a>model 表映射</h2><p>在 entity/entity.module.ts</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Module, Global &#125; <span class="keyword">from</span> <span class="string">"@nestjs/common"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TypeOrmModule &#125; <span class="keyword">from</span> <span class="string">"@nestjs/typeorm"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Admin &#125; <span class="keyword">from</span> <span class="string">"./Admin.entity"</span>;</span><br><span class="line"></span><br><span class="line">@Global()</span><br><span class="line">@Module(&#123;</span><br><span class="line">  imports: [TypeOrmModule.forFeature([Admin])],</span><br><span class="line">  exports: [TypeOrmModule],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">EntityModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>在 Admin.entity.ts</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Entity,</span><br><span class="line">  Column,</span><br><span class="line">  PrimaryGeneratedColumn,</span><br><span class="line">  Index,</span><br><span class="line">  CreateDateColumn,</span><br><span class="line">  UpdateDateColumn,</span><br><span class="line">  DeleteDateColumn,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">"typeorm"</span>;</span><br><span class="line"></span><br><span class="line">@Entity(<span class="string">"admin"</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Admin</span> </span>&#123;</span><br><span class="line">  @PrimaryGeneratedColumn()</span><br><span class="line">  id: number;</span><br><span class="line"></span><br><span class="line">  @Column()</span><br><span class="line">  name: string;</span><br><span class="line"></span><br><span class="line">  @Index()</span><br><span class="line">  @CreateDateColumn(&#123; <span class="attr">type</span>: <span class="string">"timestamptz"</span> &#125;)</span><br><span class="line">  createTime: <span class="built_in">Date</span>;</span><br><span class="line"></span><br><span class="line">  @UpdateDateColumn(&#123; <span class="attr">type</span>: <span class="string">"timestamptz"</span> &#125;)</span><br><span class="line">  updateTime: <span class="built_in">Date</span>;</span><br><span class="line"></span><br><span class="line">  @DeleteDateColumn(&#123; <span class="attr">select</span>: <span class="literal">false</span>, <span class="attr">type</span>: <span class="string">"timestamptz"</span> &#125;)</span><br><span class="line">  deleteTime: <span class="built_in">Date</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable, Dependencies &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getRepositoryToken, InjectRepository &#125; <span class="keyword">from</span> <span class="string">'@nestjs/typeorm'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Admin &#125; <span class="keyword">from</span> <span class="string">'../../entity/Admin.entity'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; EntityRepository, Repository &#125; <span class="keyword">from</span> <span class="string">'typeorm'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种写法</span></span><br><span class="line">@Injectable()</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminService</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(</span><br><span class="line">    @InjectRepository(Admin)</span><br><span class="line">    private repository: Repository&lt;Admin&gt;,</span><br><span class="line">  ) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 分页查询</span></span><br><span class="line">  <span class="keyword">async</span> findAndCount(&#123; limit, offset, order = &#123;&#125;, where = &#123;&#125; &#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.repository.findAndCount(&#123;</span><br><span class="line">      skip: offset,</span><br><span class="line">      take: limit,</span><br><span class="line">      where,</span><br><span class="line">      order,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 新增</span></span><br><span class="line">  <span class="keyword">async</span> insert(data) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.repository.insert(data);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 查询一条数据</span></span><br><span class="line">  <span class="keyword">async</span> findOne(id) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> <span class="keyword">this</span>.repository.findOne(&#123;</span><br><span class="line">      where: &#123;</span><br><span class="line">        id,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 修改数据</span></span><br><span class="line">  <span class="keyword">async</span> update(id: number, data) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.repository.update(id, data);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 删除</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">delete</span>(id: number) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.repository.delete(&#123;</span><br><span class="line">      id,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 软删除</span></span><br><span class="line">  <span class="keyword">async</span> softDelete(id: number) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.repository.softDelete(&#123;</span><br><span class="line">      id,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 软删除还原</span></span><br><span class="line">  <span class="keyword">async</span> restore(id: number) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.repository.restore(&#123;</span><br><span class="line">      id,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>连接多个数据库</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">TypeOrmModule.forRootAsync(&#123;</span><br><span class="line">      name: <span class="string">'qbit-aml'</span>,</span><br><span class="line">      imports: [ConfigModule], <span class="comment">// 数据库配置项依赖于ConfigModule，需在此引入</span></span><br><span class="line">      useFactory: <span class="function">(<span class="params">configService: ConfigService</span>) =&gt;</span> configService.get(<span class="string">'DATABASE_CONFIG'</span>)[<span class="number">0</span>],</span><br><span class="line">      inject: [ConfigService], <span class="comment">// 记得注入服务，不然useFactory函数中获取不到ConfigService,</span></span><br><span class="line">    &#125;),</span><br><span class="line">    TypeOrmModule.forRootAsync(&#123;</span><br><span class="line">      name: <span class="string">'qbit-core'</span>,</span><br><span class="line">      imports: [ConfigModule], <span class="comment">// 数据库配置项依赖于ConfigModule，需在此引入</span></span><br><span class="line">      useFactory: <span class="function">(<span class="params">configService: ConfigService</span>) =&gt;</span> configService.get(<span class="string">'DATABASE_CONFIG'</span>)[<span class="number">1</span>],</span><br><span class="line">      inject: [ConfigService], <span class="comment">// 记得注入服务，不然useFactory函数中获取不到ConfigService,</span></span><br><span class="line">    &#125;),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TypeOrmModule.forFeature([QbitNotification], <span class="string">'qbit-aml'</span>),</span><br><span class="line">    TypeOrmModule.forFeature([Account, AccountUser], <span class="string">'qbit-core'</span>),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @InjectRepository(Account, <span class="string">'qbit-core'</span>) private readonly accountRepo: Repository&lt;Account&gt;,</span><br></pre></td></tr></table></figure><p><a href="https://docs.nestjs.com/techniques/database" target="_blank" rel="external nofollow noopener noreferrer">nest-typeorm</a><br><a href="https://typeorm.io/#/" target="_blank" rel="external nofollow noopener noreferrer">typeorm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h2&gt;&lt;p&gt;postgreSql&lt;/p&gt;
&lt;h2 id=&quot;数据库初始化连接&quot;&gt;&lt;a href=&quot;#数据库初始化连接&quot; class=&quot;headerlink
      
    
    </summary>
    
    
    
      <category term="nestjs" scheme="https://blog.wjc66.cn/tags/nestjs/"/>
    
      <category term="typeorm" scheme="https://blog.wjc66.cn/tags/typeorm/"/>
    
  </entry>
  
  <entry>
    <title>vue+ts项目vue-property-decorator（装饰器）用法</title>
    <link href="https://blog.wjc66.cn/vue-ts%E9%A1%B9%E7%9B%AEvue-property-decorator%EF%BC%88%E8%A3%85%E9%A5%B0%E5%99%A8%EF%BC%89%E7%94%A8%E6%B3%95/"/>
    <id>https://blog.wjc66.cn/vue-ts%E9%A1%B9%E7%9B%AEvue-property-decorator%EF%BC%88%E8%A3%85%E9%A5%B0%E5%99%A8%EF%BC%89%E7%94%A8%E6%B3%95/</id>
    <published>2021-03-25T06:39:53.000Z</published>
    <updated>2021-09-23T07:24:47.888Z</updated>
    
    <content type="html"><![CDATA[<p>在 vue 项目使用 ts 时，装饰器有以下几种，下面为这些装饰器的具体用法并且有和 js 中写法的对比：</p><ul><li>@Component</li><li>@Emit</li><li>@Prop</li><li>@Watch</li><li>@Model</li><li>@Inject / @Provide</li><li>Mixins</li><li>slot</li></ul><a id="more"></a><h2 id="Component"><a href="#Component" class="headerlink" title="@Component"></a>@Component</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=<span class="string">"parent"</span>&gt;</span><br><span class="line">        parent组件--&#123;&#123;title&#125;&#125;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;Home v-model=<span class="string">"title"</span>&gt;&lt;/Home&gt;</span><br><span class="line">        &lt;About v-model=<span class="string">"title"</span>&gt;&lt;/About&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=<span class="string">'ts'</span>&gt;</span><br><span class="line">    import Home from <span class="string">'./Home.vue'</span></span><br><span class="line">    import About from <span class="string">'./About.vue'</span></span><br><span class="line">    import &#123; Component, Vue &#125; from <span class="string">'vue-property-decorator'</span>;</span><br><span class="line">    @Component(&#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Home,</span><br><span class="line">            About</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">export</span> default class  extends Vue &#123;</span><br><span class="line">        private title: string = <span class="string">'父组件中的值'</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>下面为在 js 中引入组件 components 的写法，与上面 ts 的代码效果一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import Home from <span class="string">'./Home.vue'</span></span><br><span class="line">import About from <span class="string">'./About.vue'</span></span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">    <span class="function"><span class="title">data</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> &#123;</span><br><span class="line">            title: <span class="string">'父组件中的值'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Home,</span><br><span class="line">        About</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Emit"><a href="#Emit" class="headerlink" title="@Emit"></a>@Emit</h2><p>子模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button</span><br><span class="line">        <span class="built_in">type</span>=<span class="string">"primary"</span></span><br><span class="line">        icon=<span class="string">"el-icon-search"</span></span><br><span class="line">        :disabled=<span class="string">"buttonDisabled"</span></span><br><span class="line">        @click=<span class="string">"fetch"</span></span><br><span class="line">      &gt;</span><br><span class="line">        搜索</span><br><span class="line">      &lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ts</span></span><br><span class="line">import &#123; Component, Vue, Inject, Emit &#125; from <span class="string">'vue-property-decorator'</span></span><br><span class="line"></span><br><span class="line">@Emit(<span class="string">'fetch'</span>)</span><br><span class="line">    <span class="function"><span class="title">fetch</span></span>() &#123;</span><br><span class="line">      <span class="built_in">return</span> this.filter</span><br><span class="line">    &#125;</span><br><span class="line">等同于</span><br><span class="line"><span class="function"><span class="title">fetch</span></span>() &#123;</span><br><span class="line">this.<span class="variable">$emit</span>(<span class="string">'fetch'</span>, this.filter)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>父模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;Search</span><br><span class="line">        @fetch=<span class="string">"fetch"</span></span><br><span class="line">      /&gt;</span><br><span class="line"></span><br><span class="line">fetch(<span class="built_in">where</span>) &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="Prop"><a href="#Prop" class="headerlink" title="@Prop"></a>@Prop</h2><p>子模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=<span class="string">"home"</span>&gt;</span><br><span class="line">    vue+ts项目vue-property-decorator用法</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;p&gt;这是从父组件中传过来的值: &#123;&#123;title&#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=<span class="string">"ts"</span>&gt;</span><br><span class="line">import &#123; Component, Vue, Prop &#125; from <span class="string">'vue-property-decorator'</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;&#125;)</span><br><span class="line"><span class="built_in">export</span> default class Home extends Vue &#123;</span><br><span class="line">  @Prop() title!: string;</span><br><span class="line">  <span class="comment"># prop的类型和默认值</span></span><br><span class="line">  <span class="comment"># @Prop(&#123;type: String, default: 'default value'&#125;) title!: string;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>下面为 prop 在 js 中的写法，与上面 ts 的代码效果一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: [<span class="string">"title"</span>],</span><br><span class="line">  <span class="comment"># props: &#123;</span></span><br><span class="line">  <span class="comment">#   title: &#123;</span></span><br><span class="line">  <span class="comment">#     style: String,</span></span><br><span class="line">  <span class="comment">#     default: 'default value'</span></span><br><span class="line">  <span class="comment">#   &#125;</span></span><br><span class="line">  <span class="comment"># &#125;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Watch"><a href="#Watch" class="headerlink" title="@Watch"></a>@Watch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=<span class="string">"home"</span>&gt;</span><br><span class="line">    vue+ts项目vue-property-decorator用法</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> v-model=<span class="string">"inputValue"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=<span class="string">"ts"</span>&gt;</span><br><span class="line">import &#123; Component, Vue, Watch &#125; from <span class="string">'vue-property-decorator'</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;&#125;)</span><br><span class="line"><span class="built_in">export</span> default class Home extends Vue &#123;</span><br><span class="line">  private inputValue: string = <span class="string">''</span></span><br><span class="line">  @Watch(<span class="string">'inputValue'</span>)</span><br><span class="line">  valueChange(newValue: string, oldValue: string) &#123;</span><br><span class="line">    console.log(newValue, oldValue)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># 对watch的配置为第二个参数，以对象形式传入</span></span><br><span class="line">  <span class="comment"># @Watch('inputValue',&#123; deep: true &#125;)</span></span><br><span class="line">  <span class="comment"># valueChange(newValue: string, oldValue: string) &#123;</span></span><br><span class="line">  <span class="comment">#   console.log(newValue, oldValue)</span></span><br><span class="line">  <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>下面为 watch 在 js 中的写法，与上面 ts 的代码效果一样:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> &#123;</span><br><span class="line">      inputValue: <span class="string">""</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    inputValue(newValue, oldValue) &#123;</span><br><span class="line">      console.log(newValue, oldValue);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Model"><a href="#Model" class="headerlink" title="@Model"></a>@Model</h2><p>父组件代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=<span class="string">"parent"</span>&gt;</span><br><span class="line">        parent组件--&#123;&#123;title&#125;&#125;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;Home v-model=<span class="string">"title"</span>&gt;&lt;/Home&gt;</span><br><span class="line">        &lt;!-- 直接使用v-mode为以下使用标签的语法糖，默认子组件使用value接受prop传值使用emit调用input方法修改值，在使用model参数prop修改如何接受，event修改emit调用哪个方法来修改值 --&gt;</span><br><span class="line">        &lt;!--&lt;Home :value=<span class="string">"title"</span> @input=<span class="string">"title=<span class="variable">$event</span>.target.value"</span>&gt;&lt;/Home&gt;--&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=<span class="string">'ts'</span>&gt;</span><br><span class="line">    import Home from <span class="string">'./Home.vue'</span></span><br><span class="line">    import &#123; Component, Vue &#125; from <span class="string">'vue-property-decorator'</span>;</span><br><span class="line">    @Component(&#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Home</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">export</span> default class  extends Vue &#123;</span><br><span class="line">        private title: string = <span class="string">'父组件中的值'</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件 ts 代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=<span class="string">"home"</span>&gt;</span><br><span class="line">    vue+ts项目vue-property-decorator用法</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> v-model=<span class="string">"inputValue"</span> @input=<span class="string">"valueChange(<span class="variable">$event</span>.target.value)"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=<span class="string">"ts"</span>&gt;</span><br><span class="line">import &#123; Component, Vue, Model, Emit, Prop &#125; from <span class="string">'vue-property-decorator'</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;&#125;)</span><br><span class="line"><span class="built_in">export</span> default class Home extends Vue &#123;</span><br><span class="line">  private inputValue: string = <span class="string">''</span></span><br><span class="line">  private <span class="function"><span class="title">created</span></span>() &#123;</span><br><span class="line">    this.inputValue = this.valueFromModel</span><br><span class="line">  &#125;</span><br><span class="line">  @Model (<span class="string">'changeValueFromModel'</span>)  valueFromModel !: string;</span><br><span class="line">  @Emit(<span class="string">'changeValueFromModel'</span>)</span><br><span class="line">  <span class="comment"># 参数应该为输入框的值，所以上面传过来的值应该为value而不能是e</span></span><br><span class="line">  valueChange(val: string) &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>下面为 model 在 js 中的写法，与上面 ts 的代码效果一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">  model: &#123;</span><br><span class="line">    prop: <span class="string">"valueFromModel"</span>,</span><br><span class="line">    event: <span class="string">"changeValueFromModel"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  props: [<span class="string">"valueFromModel"</span>],</span><br><span class="line">  <span class="function"><span class="title">data</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> &#123;</span><br><span class="line">      inputValue: <span class="string">""</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">created</span></span>() &#123;</span><br><span class="line">    this.inputValue = this.valueFromModel;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    valueChange(e) &#123;</span><br><span class="line">      this.<span class="variable">$emit</span>(<span class="string">"changeValueFromModel"</span>, e.target.value);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Provide-Inject-（重点推荐）"><a href="#Provide-Inject-（重点推荐）" class="headerlink" title="@Provide / @Inject （重点推荐）"></a>@Provide / @Inject （重点推荐）</h2><p>ts 中@Provide / @Inject 用法如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=<span class="string">"parent"</span>&gt;</span><br><span class="line">        parent组件--&#123;&#123;title&#125;&#125;</span><br><span class="line">        &lt;Home&gt;&lt;/Home&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=<span class="string">'ts'</span>&gt;</span><br><span class="line">    import Home from <span class="string">'./Home.vue'</span></span><br><span class="line">    import &#123; Component, Vue, Provide &#125; from <span class="string">'vue-property-decorator'</span>;</span><br><span class="line">    @Component(&#123;</span><br><span class="line">        components: &#123;</span><br><span class="line">            Home</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">export</span> default class  extends Vue &#123;</span><br><span class="line">        private title: string = <span class="string">'父组件中的值'</span></span><br><span class="line">        @Provide()</span><br><span class="line">        pOne = <span class="string">'oneFromProvide'</span></span><br><span class="line"></span><br><span class="line">        @Provide(<span class="string">'pTwo'</span>)</span><br><span class="line">        two = <span class="string">'twoFromProvide'</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=<span class="string">"home"</span>&gt;</span><br><span class="line">    vue+ts项目vue-property-decorator用法</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    来自provide中的值--1--&#123;&#123;pOne&#125;&#125;--2--&#123;&#123;pTwo&#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=<span class="string">"ts"</span>&gt;</span><br><span class="line">import &#123; Component, Vue, Inject &#125; from <span class="string">'vue-property-decorator'</span>;</span><br><span class="line">import outMixins from <span class="string">'./mixins'</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;&#125;)</span><br><span class="line"><span class="built_in">export</span> default class Home extends Vue &#123;</span><br><span class="line">  @Inject(<span class="string">'pOne'</span>)</span><br><span class="line">    pOne!: string;</span><br><span class="line"></span><br><span class="line">  @Inject(&#123;</span><br><span class="line">      from:<span class="string">'pTwo'</span>,</span><br><span class="line">      default:<span class="string">'default value'</span></span><br><span class="line">  &#125;)</span><br><span class="line">  pTwo!: string;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>下面为 project / inject 在 js 中的写法，与上面 ts 的代码效果一样：<br>父组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=<span class="string">"parent"</span>&gt;</span><br><span class="line">        parent组件</span><br><span class="line">        &lt;About&gt;&lt;/About&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import About from <span class="string">'./About.vue'</span></span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">        About</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">provide</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> &#123;</span><br><span class="line">            pOne: <span class="string">'oneFromProvide'</span>,</span><br><span class="line">            pTwo: <span class="string">'twoFromProvide'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=<span class="string">"home"</span>&gt;</span><br><span class="line">    vue+js项目</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    来自provide中的值--1--&#123;&#123;pOne&#125;&#125;--2--&#123;&#123;pTwo&#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">  inject: &#123;</span><br><span class="line">    pOne: <span class="string">'pOne'</span>,</span><br><span class="line">    pTwo: &#123; from: <span class="string">'pTwo'</span>, default: <span class="string">'default value'</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Mixins"><a href="#Mixins" class="headerlink" title="Mixins"></a>Mixins</h2><p>ts 中 Mixins 的用法如下<br>mixins.ts 文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Vue, Component &#125; from <span class="string">"vue-property-decorator"</span>;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line"><span class="built_in">export</span> default class myMixins extends Vue &#123;</span><br><span class="line">  valueFromMixins: string = <span class="string">"来自mixins的value"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ts 代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=<span class="string">"home"</span>&gt;</span><br><span class="line">    vue+ts项目vue-property-decorator用法</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    来自mixins中的变量--&#123;&#123;valueFromMixins&#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=<span class="string">"ts"</span>&gt;</span><br><span class="line">import &#123; Component, Vue, Model, Emit, Prop &#125; from <span class="string">'vue-property-decorator'</span>;</span><br><span class="line">import outMixins from <span class="string">'./mixins'</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">  mixins: [outMixins]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">export</span> default class Home extends Vue &#123;&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>下面为 mixins 在 js 中的写法，与上面 ts 的代码效果一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;outMixins&#125; from <span class="string">'./mixins'</span></span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">  mixins:[outMixins]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="slot"><a href="#slot" class="headerlink" title="slot"></a>slot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;slot name=<span class="string">"footer"</span>&gt;&lt;/slot&gt;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template v-slot:footer&gt;</span><br><span class="line">    &lt;p&gt;Here<span class="string">'s some contact info&lt;/p&gt;</span></span><br><span class="line"><span class="string">  &lt;/template&gt;</span></span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://juejin.cn/post/6844903939377201165#heading-5" target="_blank" rel="external nofollow noopener noreferrer">https://juejin.cn/post/6844903939377201165#heading-5</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 vue 项目使用 ts 时，装饰器有以下几种，下面为这些装饰器的具体用法并且有和 js 中写法的对比：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@Component&lt;/li&gt;
&lt;li&gt;@Emit&lt;/li&gt;
&lt;li&gt;@Prop&lt;/li&gt;
&lt;li&gt;@Watch&lt;/li&gt;
&lt;li&gt;@Model&lt;/li&gt;
&lt;li&gt;@Inject / @Provide&lt;/li&gt;
&lt;li&gt;Mixins&lt;/li&gt;
&lt;li&gt;slot&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="vue" scheme="https://blog.wjc66.cn/tags/vue/"/>
    
      <category term="typescript" scheme="https://blog.wjc66.cn/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>windows10安装docker</title>
    <link href="https://blog.wjc66.cn/windows10%E5%AE%89%E8%A3%85docker/"/>
    <id>https://blog.wjc66.cn/windows10%E5%AE%89%E8%A3%85docker/</id>
    <published>2021-03-17T10:01:56.000Z</published>
    <updated>2021-09-23T07:24:47.888Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>必须是 windows 10 专业版</li><li>进入任务管理器看虚拟化是否已启用<br><img src="https://img-blog.csdnimg.cn/20210317175951685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>然后再是进入电脑的控制面板-&gt;程序-&gt;启用或关闭 Windows 功能-&gt;把 Hyper-v 勾上，启用后电脑会重启，后面就可以下载并安装 Docker for Windows 了。</li></ol><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><code>https://docs.docker.com/docker-for-windows/wsl/</code><br><img src="https://img-blog.csdnimg.cn/20210317180105110.png" alt="在这里插入图片描述"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>直接安装（就是取消勾选 WSL 2）</li><li>安装成功 右键进入 settings 取消勾选 wsl 2 就可以正常使用了</li></ol><p><img src="https://img-blog.csdnimg.cn/20210317175824765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzExMDYwOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>dockers ps</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;必须是 windows 10 专业版&lt;/li&gt;
&lt;li&gt;进入任务管理器看虚拟化是否已启用&lt;br&gt;&lt;img src=&quot;https:
      
    
    </summary>
    
    
    
      <category term="docker" scheme="https://blog.wjc66.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>ts模拟类多继承类</title>
    <link href="https://blog.wjc66.cn/ts%E6%A8%A1%E6%8B%9F%E7%B1%BB%E5%A4%9A%E7%BB%A7%E6%89%BF%E7%B1%BB/"/>
    <id>https://blog.wjc66.cn/ts%E6%A8%A1%E6%8B%9F%E7%B1%BB%E5%A4%9A%E7%BB%A7%E6%89%BF%E7%B1%BB/</id>
    <published>2021-01-28T06:08:59.000Z</published>
    <updated>2021-09-23T07:24:47.887Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里的实现方式是把类当做接口 使用implements继承</span></span><br><span class="line"><span class="string">'use strict'</span>;</span><br><span class="line">class Person &#123;</span><br><span class="line">  name?: string;</span><br><span class="line">  grade?: number;</span><br><span class="line">  constructor(name: string, grade: number) &#123;</span><br><span class="line">    this.grade = grade;</span><br><span class="line">    this.name = name;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="title">sayHello</span></span>() &#123;</span><br><span class="line">    console.log(<span class="string">'tag'</span>, `Helo <span class="variable">$&#123;this.name&#125;</span>!, <span class="variable">$&#123;this.grade&#125;</span>`);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Student 类</span><br><span class="line">class Student &#123;</span><br><span class="line">  grade?: number;</span><br><span class="line">  constructor(grade: number) &#123;</span><br><span class="line">    this.grade = grade;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">test</span>!: (name: string) =&gt; void;</span><br><span class="line">  <span class="function"><span class="title">study</span></span>() &#123;</span><br><span class="line">    this.test(<span class="string">'1'</span>);</span><br><span class="line">    console.log(<span class="string">'tag'</span>, <span class="string">' I need Study!'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class SmartObject implements Person, Student &#123;</span><br><span class="line">  // Person</span><br><span class="line">  name = <span class="string">'person'</span>;</span><br><span class="line">  // Activatable</span><br><span class="line">  grade = 3;</span><br><span class="line">  sayHello!: () =&gt; void;</span><br><span class="line">  study!: () =&gt; void;</span><br><span class="line">  <span class="built_in">test</span>(name: string) &#123;</span><br><span class="line">    console.log(<span class="string">'test'</span>, name);</span><br><span class="line">  &#125;</span><br><span class="line">  static applyMixins(derivedCtor: any, baseCtors: any[]) &#123;</span><br><span class="line">    baseCtors.forEach(baseCtor =&gt; &#123;</span><br><span class="line">      Object.getOwnPropertyNames(baseCtor.prototype).forEach(name =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (name !== <span class="string">'test'</span>) derivedCtor.prototype[name] = baseCtor.prototype[name];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SmartObject.applyMixins(SmartObject, [Person, Student]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> = SmartObject;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'use strict'</span>;</span><br><span class="line">import SmartObject from <span class="string">'./index'</span>;</span><br><span class="line">const smartObject = new SmartObject();</span><br><span class="line">smartObject.study();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
    
      <category term="typescript" scheme="https://blog.wjc66.cn/tags/typescript/"/>
    
  </entry>
  
</feed>
